[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"Data visualization critical skill anyone interested using data think persuade.course focusses three aspects data visualization:makes good data visualization?Designing, improving, communicating visualizations, andthe technical computer skills needed create visualizations.","code":""},{"path":"index.html","id":"what-is-data-visualization","chapter":"Welcome","heading":"What is Data Visualization?","text":"Data visualization practice turning data graphics. Good graphics easily interpreted raw data. well-designed visualization faithful original data mislead intended audience. Almost every data visualization simplification approximation raw dataset, thus involves perspective–goals biases person producing visualization.Data visualization approaches vary. purposes, highly customized graphic design visual style paramount. ’s focus. emphasize standardized graphical presentations – span wide variety visualizations – minimize use graphical elements directly linked data.","code":""},{"path":"index.html","id":"what-is-the-purpose-of-data-visualization","chapter":"Welcome","heading":"What is the purpose of data visualization?","text":"Data visualization used help tell stories data. usual goal communicate interpretation dataset particular audience, make argument worked analysis data. visualization device help . Visualizations best accompanied written explanations; even picture worth thousand words, visualizations usually stand . message understood internalized, good visualization can sometimes tell story “”.","code":""},{"path":"index.html","id":"goals","chapter":"Welcome","heading":"Course Goals","text":"end course familiar several aspects data visualzation.Visual impact aesthetic aspects graphicsUnderstand relationship structure data perceptual features graphics.Describe aesthetic features good plots.Use length, shape, size, colour, annotations, features effectively display data enable comparitive visual interpretation.Visualization communicationVisualization visual language communication, accompanied written interpretationsCommunication effectiveness evaluated peer-review critical, constructive feedbackVisualizations developed iterative process akin editing text, including process refining plots highlight key features data, labeling items interest, annotating plots, changing overall appearanceVisualizations can presented different formats different audiences different communications goalsComputing skillsLearn basics using R, Rstudio, several R add-packages, gitRead data several different formats RCreate graphs ggplot2 continuous categorical variables informative legends.Add error bars, linear models, smooths, labels, annotations graphCreate small-multiple (facetted) plots.Use principles tidy data tables facilitate transformation analysis data. Reshape data make tidy.Summarize transform data using dplyrReshape data using pivotsCreate maps alternatives presenting spatial data.Write reproducible documents R markdown document analysis process present resultsDistribute data, code, results using git githubAccess interpret help resources (built-help, vignettes, web pages, online discussion forums, blogs).Develop skills independently learning new data visualization methods softwareStatistical modelsUse variety modeling techniques LOESS, OLS, robust regression, polynomial regression, quantile regressionLearn extract model information compare different statistical modelsUse principal component analysis (PCA) reduce dimensionality complex datasets, increasing interpretability minimizing information lossUse multidimensional scaling (MDS) visualize compare similarities dissimilarities variablesDivide observations homogeneous distinct groups using K-means","code":""},{"path":"syllabus.html","id":"syllabus","chapter":"Syllabus","heading":"Syllabus","text":"syllabus Data Visualization (STAT 2430) course Winter 2021 Dalhousie University.Instructor: Andrew Irwin, .irwin@dal.caMeeting times: Thursday 8:35 Atlantic CollaborateOffice hours: Tuesday 8:35 Atlantic CollaborateDiscussion forum: piazza.com/dal.ca/winter2021/stat2430","code":""},{"path":"syllabus.html","id":"course-description","chapter":"Syllabus","heading":"Course Description","text":"Data visualization art science turning data readable graphics. explore\ndesign create data visualizations.\nexploration include principles \ntechniques data visualization. Students learn value visualization, specific techniques understand\nselect best visualization method.","code":""},{"path":"syllabus.html","id":"course-prerequisites","chapter":"Syllabus","heading":"Course Prerequisites","text":"least one MATH STAT course 1000 level. experience R computer programming required, desire learn essential.","code":""},{"path":"syllabus.html","id":"course-materials","chapter":"Syllabus","heading":"Course materials","text":"Course notes:Andrew J Irwin (2021) Data visualization written revised course.Required textbook:Kieran Healy (2018) Data Visualization: Practical Introduction. Princeton University Press.Supplemental textbooks:Garret Grolemund & Hadley Wickham (2017) R data science. O’Reilly.Claus O. Wilke (2019) Fundamentals data visualization. O’Reilly.textbook supplemental textbooks available printed form online. online versions free use. required buy books paper. three excellent books distinct goals.lot materials course. course videos notes highlight important information, many references textbooks online materials.","code":""},{"path":"syllabus.html","id":"course-structure","chapter":"Syllabus","heading":"Course structure","text":"week structured around following components:Watching recorded mini-lectures lessonReading course notes excerpts textbooksScheduled office hours (Tuesday 8:30 Atlantic). Come questions want listen discussions course material based questions asked students.Live coding tutorial / lab (Thursday 8:30 Atlantic)Opportunities develop demonstrate knowledge (tasks, assignments, term project)Follow detailed outline week’s plan keep track.questions course material, please ask synchronous meetings office hours. meetings, questions asked Piazza forum. questions specific situation shared class, please send email. Please use email communication private, general questions best asked public everyone class can benefit exchange. Please use discussion forum talk classmates help .use Collaborate Ultra accessed Brightspace interactive sessions, help structure work. usually recorded can watch later unable participate. strongly encouraged come meetings since interactive sessions primary forum asking questions discussing course material. strongly encourage “raise hand” discussion ask questions using voice. students prefer use chat ask questions, fine , perspective leads disjointed less useful interaction.Plan review agenda meeting begins.","code":""},{"path":"syllabus.html","id":"evaluation","chapter":"Syllabus","heading":"Evaluation","text":"Tasks opportunities test understanding key concepts lessons demonstrate developed basic proficiency essential computing skills. lessons task complete.Assignments combine skills multiple lessons meaningful data visualization activity. opportunities apply content lessons thoughtful sometimes creative ways.final project opportunity combine many skills learned course. explore, analyze, present reader analysis dataset choice. proposal select dataset describe planned analyses. oral presentation 5 minute overview data key visualizations. report polished reproducible document demonstrating many ideas course using selected dataset.Tasks lessons (30%, roughly 2 per week, due weekly, equally weighted)Assignments (40%, roughly 1 every two weeks, equally weighted)Term project, divided three components\nProposal, due Friday 12 March, 5%\nOral presentation, due Thursday 1 April, 10%\nReport, due Friday 9 April, 15%\nProposal, due Friday 12 March, 5%Oral presentation, due Thursday 1 April, 10%Report, due Friday 9 April, 15%Tasks due Monday. Assignments due Wednesday. Late work accepted without penalty work graded solutions posted. , later work accepted, two lowest (missing) task marks dropped evaluation. additional accommodation requested granted, value work redistributed tasks assignments. anticipate able submit proposal, oral presentation, report time, please contact email.Grades reported Brightspace","code":""},{"path":"syllabus.html","id":"syllabus_software","chapter":"Syllabus","heading":"Software","text":"use statistical software R RStudio version control software git. prior experience \nR, RStudio git assumed. ’ll take class time learn software.download install R go r-project.org click link download RTo download install Rstudio, go Rstudio.com click link download RstudioTo download install git:\nWindows, go git-scm.org click link download version Windows\nMacintosh, use Terminal app type xcode-select --install download install git.\nWindows, go git-scm.org click link download version Windowson Macintosh, use Terminal app type xcode-select --install download install git.tools can installed Linux computers well. Contact trouble. Chromebook can use tools cloud service rstudio.cloud. Everyone learn use cloud service backup case problems setting software computer.R Rstudio available Dalhousie computer labs, git version control software must installed following instructions Windows computers . Since user files erased lab computers log , process must repeated login.Videos demonstrating install software Brightspace.","code":""},{"path":"syllabus.html","id":"course-policies","chapter":"Syllabus","heading":"Course Policies","text":"Credit given assignments submitted grading complete solutions posted. miss assignment due illness event outside control, contact accommodation. accomodation granted, assignment weight shifted rest assignments. two lowest Task grades dropped calculation final grade automatically result reluctant offer accommodation late missed tasks.goal course learn principles skills data visualization. people benefit mixture collaborative independent work. general guideline work submit —ideas, thoughts, choices, code, typing. encouraged discuss work instructor students. help another student, careful don’t help much inhibit learning.Tasks primarily designed help learn encouraged seek assistance classmates, work submit must . Assignments assessments skills done independently. final project components may done groups, work project work members group.Copying work sources allowed considered academic offense course. encouraged learn many different sources. make use material outside course materials assignments project report, include references material description used “Sources used” section end work.","code":""},{"path":"syllabus.html","id":"important-dates","chapter":"Syllabus","heading":"Important dates","text":"Wed 6 Jan: Term beginsFri 5 Feb: Munro day, University closed15-19 Feb: Study breakFri 12 March: Project proposal dueFri 2 Apr: Good Friday, University closedTue 6 Apr: Last Tuesday/Thursday classThu 8 Apr: Last day classesFri 9 Apr: Final project due10-23 Apr: Exam period","code":""},{"path":"syllabus.html","id":"letter-grades","chapter":"Syllabus","heading":"Letter grades","text":"numerical grade converted \nletter grade course using Dalhousie Common Grade Scale.First numerical grade rounded nearest integer, converted letter using table.","code":""},{"path":"syllabus.html","id":"university-policies-and-statements","chapter":"Syllabus","heading":"University Policies and Statements","text":"course governed academic rules regulations set forth University Calendar SenateMissed Late Academic Requirements due Student Absence.\nper Senate decision instructors may require medical notes students must miss academic requirement, including final exam, courses offered fall winter 2020-21 (April 30, 2021). Information regular policy, including use Student Declaration Absence can found .Academic Integrity.\nDalhousie University, guided work values academic integrity: honesty, trust, fairness, responsibility respect (Center Academic Integrity, Duke University, 1999). student, required demonstrate values work . University provides policies procedures every member university community required follow ensure academic integrity. information.Accessibility.\nAdvising Access Services Centre Dalhousie’s centre expertise student accessibility accommodation. advising team works students request accommodation result disability, religious obligation, barrier related characteristic protected Human Rights legislation (Canada Nova Scotia). information.Student Code Conduct.\nEveryone Dalhousie expected treat others dignity respect. Code Student Conduct allows Dalhousie take disciplinary action students don’t follow community expectation. appropriate, violations code can resolved reasonable informal manner—perhaps restorative justice process. informal resolution can’t reached, inappropriate, procedures exist formal dispute resolution. Code.Diversity Inclusion - Culture Respect.\nEvery person Dalhousie right respected safe. believe inclusiveness fundamental education. stand equality. Dalhousie strengthened diversity. respectful inclusive community. committed place everyone feels welcome supported, Strategic Direction prioritizes fostering culture diversity inclusiveness. Statement.Recognition Mi’kmaq Territory.\nDalhousie University like acknowledge University Traditional Mi’kmaq Territory. Elders Residence program provides students access First Nations elders guidance, counsel support. Visit e-mail Indigenous Student Centre (1321 Edward St) (elders@dal.ca). Information.Important Dates Academic Year (including add/drop dates)University Grading Practices","code":""},{"path":"syllabus.html","id":"student-resources-and-support","chapter":"Syllabus","heading":"Student Resources and Support","text":"Please follow following links additional resources support.Advising:\nGeneral Advising,\nScience Program Advisors,\nIndigenous Student Centre,\nBlack Advising Centre,\nInternational CentreAcademic supports:\nLibrary,\nWriting Centre,\nStudying Success,\nCopyright Office,\nFair Dealing GuidelinesOther supports services:\nStudent Health & Wellness Centre,\nStudent Advocacy,\nOmbudspersonSafety:\nBiosafety,\nChemical Safety,\nRadiation Safety,\nScent‐Free Program","code":""},{"path":"outline.html","id":"outline","chapter":"Detailed outline","heading":"Detailed outline","text":"Synchronous sessions held Thursday starting 8:35 ending 9:55 earlier. can find link sessions Brightspace. agenda session. sessions recorded posted Brightspace. synchronous time timetable (Tuesday starting 8:35) used drop-office hours.lesson written notes, recorded video, slides, links textbook readings notes. students prefer begin video, others prefer begin written notes slides. suggest learn prefer experimentation. tasks designed help sure know important parts lesson.","code":""},{"path":"outline.html","id":"course-calendar","chapter":"Detailed outline","heading":"Course calendar","text":"Tasks due Monday 9:00 Atlantic week assigned. Assignment project component due dates listed . Dates non-synchronous components guides help pace work.tentative schedule revised throughout term.","code":""},{"path":"outline.html","id":"bonus-material","chapter":"Detailed outline","heading":"Bonus Material","text":"Data sourcesStaying organizedGetting help: common problems R, Rstudio, gitA bit R.Using R markdown reproducibility report writingExamples building figures step step","code":""},{"path":"sync.html","id":"sync","chapter":"Synchronous meeting agendas","heading":"Synchronous meeting agendas","text":"13 synchronous sessions. last two used oral presentations.","code":""},{"path":"sync.html","id":"sync-1","chapter":"Synchronous meeting agendas","heading":"Thu 7 Jan 8:35","text":"meeting:Review Week 0 material (detailed outline)Watch video Lesson 1Meeting agenda:Course goalsHow course worksPurpose component (recorded videos, notes, slides, textbook readings, evaluation activities)Questions discussionDemonstration basics Rstudio","code":""},{"path":"sync.html","id":"tue-12-jan-835","chapter":"Synchronous meeting agendas","heading":"Tue 12 Jan 8:35","text":"drop-office hour. Come questions course. particular, difficulty settung R, Rstudio, git, bring questions.","code":""},{"path":"sync.html","id":"sync-2","chapter":"Synchronous meeting agendas","heading":"Thu 14 Jan 8:35","text":"meeeting:Work Lesson 4 5Meeting agenda:Introduce R markdown documents work use themLive coding examples Lesson 5 Lesson 6Questions discussionLinks HTML Rmd versions live coding exercises meeting. download file right (control) click Rmd link save file computer. Read HTML version. Download Rmd version computer open Rstudio. class can access knitted HTML Rmd versions created.","code":""},{"path":"sync.html","id":"tue-19-jan-835","chapter":"Synchronous meeting agendas","heading":"Tue 19 Jan 8:35","text":"drop-office hour. Come questions course. particular, may want bring questions Task 4 Assignment 1.","code":""},{"path":"sync.html","id":"sync-3","chapter":"Synchronous meeting agendas","heading":"Thu 21 Jan 8:35","text":"meeeting:Work Lesson 8Meeting agenda:Live coding examples using ggplotHere links materials synchronous session. Download Rmd file class right (control) clicking Rmd link.Materials use class: HTML RmdWork done class: HTML Rmd","code":""},{"path":"sync.html","id":"tue-26-jan-835","chapter":"Synchronous meeting agendas","heading":"Tue 26 Jan 8:35","text":"drop-office hour. Come questions course.","code":""},{"path":"sync.html","id":"sync-4","chapter":"Synchronous meeting agendas","heading":"Thu 28 Jan 8:35","text":"meeeting:Lesson 11Meeting agenda:Live coding examples dplyr tools (filter, group_by, mutate, summarise), plotting facets, reading data worksheetsHere links materials synchronous session. Download Rmd file class right (control) clicking Rmd link.Materials use class: HTML RmdWork done class: HTML Rmd","code":""},{"path":"sync.html","id":"tue-1-february-835","chapter":"Synchronous meeting agendas","heading":"Tue 1 February 8:35","text":"drop-office hour. Come questions course.","code":""},{"path":"sync.html","id":"sync-5","chapter":"Synchronous meeting agendas","heading":"Thu 4 February 8:35","text":"meeeting:Lesson 12-14Meeting agenda:Live coding examples pivoting tools (pivot_longer, pivot_wider, unite separate), formatting tables (kable, kableExtra) – material tasks 7 8Strategies getting help learning independently (Assignment 2)links materials synchronous session. Download Rmd file class right (control) clicking Rmd link.Materials use class: HTML RmdWork done class: HTML Rmd","code":""},{"path":"sync.html","id":"sync-6","chapter":"Synchronous meeting agendas","heading":"Thu 11 February 8:35","text":"meeeting:Lesson 15-17Meeting agenda:Live coding examples linear models smoothsHere links materials synchronous session. Download Rmd file class right (control) clicking Rmd link. (ready yet)Materials use class: HTML RmdWork done class: HTML Rmd","code":""},{"path":"sync.html","id":"sync-7","chapter":"Synchronous meeting agendas","heading":"Thu 25 February 8:35","text":"meeeting:Lesson 18-20Meeting agenda:Questions term project course materialDisplaying information teams project planningFinding dataR MarkdownHere links materials synchronous session. Download Rmd file class right (control) clicking Rmd link. (ready yet)Materials use class: HTML RmdWork done class: HTML Rmd","code":""},{"path":"sync.html","id":"sync-8","chapter":"Synchronous meeting agendas","heading":"Thu 4 March 8:35","text":"meeeting:Lesson 21-23Meeting agenda:Project teams, repositoriesPCA, MDS, K-means examplesHere links materials synchronous session. Download Rmd file class right (control) clicking Rmd link. (ready yet)Materials use class: HTML RmdWork done class: HTML Rmd","code":""},{"path":"sync.html","id":"sync-9","chapter":"Synchronous meeting agendas","heading":"Thu 11 March 8:35","text":"meeeting:Lesson 24-27Meeting agenda:links materials synchronous session. Download Rmd file class right (control) clicking Rmd link. (ready yet)Materials use class: HTML RmdWork done class: HTML Rmd","code":""},{"path":"sync.html","id":"sync-12","chapter":"Synchronous meeting agendas","heading":"Thu 1 April 8:35","text":"Oral presentations day 1. presentation maximum 5 minutes, time 12 presentations.sign-sheet posted Brightspace proposals submitted.Presentations may made live can pre-recorded.","code":""},{"path":"sync.html","id":"sync-13","chapter":"Synchronous meeting agendas","heading":"Tue 6 April 8:35","text":"office hour day, instead required synchronous session.Oral presentations day 2. presentation maximum 5 minutes, time 12 presentations.sign-sheet posted Brightspace proposals submitted.Presentations may made live can pre-recorded.","code":""},{"path":"evaluation.html","id":"evaluation","chapter":"Evaluation","heading":"Evaluation","text":"work students complete evaluation credit course described .","code":""},{"path":"evaluation.html","id":"tasks","chapter":"Evaluation","heading":"Tasks","text":"Tasks lesson described . task designed demonstrate particular skill idea lesson prepare next lesson.Tasks usually evaluated 0-10 scale following rubric:0-5: Work missing mostly incomplete.6-7: Mostly complete complete major deficiencies.8: Complete meets expectations.9-10: Complete excels respect: organization, clarity, creativity.","code":""},{"path":"evaluation.html","id":"task-1","chapter":"Evaluation","heading":"Task 1 (Lesson 1)","text":"Find two data visualizations find informative, compelling, need improvement.Create document shows visualization (figure, snapshot dynamic visualization), provides source (e.g., url publication details applicable). sentences describethe data behind visualization,main message conveyed visualization,one two features visualization make effective suggestions improvement.goal project isn’t right wrong, rather start process looking data visualizations perspective creator, designer, critic. ’s okay find visualizations secondary sources creator original publisher. Include reference source used find visualiztions.Submit work single PDF Brightspace.Due Monday 11 January 9:00 Atlantic.","code":""},{"path":"evaluation.html","id":"task-b1","chapter":"Evaluation","heading":"Bonus task (Lesson 2)","text":"Read Healy, Sections 2.1-2.4. nothing submit task.","code":""},{"path":"evaluation.html","id":"task-2","chapter":"Evaluation","heading":"Task 2 (Lesson 3)","text":"See instructions syllabus Lesson 3 notesInstall R, Rstudio, packages identified Healy’s Preface.Install git.Create github account.Login rstudio.cloud. complete R, Rstudio, git setup “cloud” can used trouble using R computer.Ask help tasks need .Answer quiz Brightspace ask successful task need help. Provide github name one quiz questions.Due Monday 18 January 9:00 Atlantic.","code":""},{"path":"evaluation.html","id":"task-3","chapter":"Evaluation","heading":"Task 3 (Lesson 4)","text":"people feel strongly placement 0 vertical scale plots. Look carbon dioxide plots Lesson 1. vertical scale start 0. Use ideas Healy Chapter 1.6 describe interpret vertical position carbon dioxide plots interpret position 0 included vertical scale.people feel strongly placement 0 vertical scale plots. Look carbon dioxide plots Lesson 1. vertical scale start 0. Use ideas Healy Chapter 1.6 describe interpret vertical position carbon dioxide plots interpret position 0 included vertical scale.Hans Rosling’s visualizations (shown Lesson 1) use many channels conveying data: x y position, color, size, annotation year plot background. interactive versions use animation change time, mouse-pop-ups identify country dot. complex visualizations!Hans Rosling’s visualizations (shown Lesson 1) use many channels conveying data: x y position, color, size, annotation year plot background. interactive versions use animation change time, mouse-pop-ups identify country dot. complex visualizations!Rosling’s plot showin Lesson 1, variables shown x y position, color, symbol size?According Healy Chapter 1 4 features difficult make quantitative comparisons ? ? agree?judgment, visualization effective complex? Watch TED talk experiment interactive version answering question. live explanation provided Rosling’s oral presentation help interpret plot?Write answers two questions word processor (’ll start using R markdown soon) submit single PDF Brightspace. Assesment: 10 points total, 5 points per question.Due Monday 18 January 9:00 Atlantic.","code":""},{"path":"evaluation.html","id":"task-b2","chapter":"Evaluation","heading":"Bonus task (Lesson 5)","text":"Repeat examples Lesson 5 /accompanying video Rstudio comfortable basics making plot. learn much plotting starting lesson next.nothing submit task.","code":""},{"path":"evaluation.html","id":"task-4","chapter":"Evaluation","heading":"Task 4 (Lesson 6)","text":"Use Rstudio create new project github repository Assignment 1. new task, ’s going recurring task throughout course. step--step instructions. trouble task, ask help. ’s important.Go github account look repository called “assignment-1-” followed github user name. Get link clicking green button labeled “Code”. look like : https://github.com/Dalhousie-AndrewIrwin-Teaching/assignment-1-<github name>.gitUsing Rstudio computer, select menu File > New Project > repository… > Git. Insert link repository tell R put repository computer.use rstudio.cloud, start projects page choose New Project git repository (pop-menu) open existing project course. Clone github repository project using terminal window type command git clone <link github>. Finally, open new folder Files pane click “assignment-1.Rproj” link switch project. may asked rstudio.cloud link github account access private repositories.video help task. can also look slides.nothing submit task, please complete Monday 18 January ask questions office hours Tuesday 19 January trouble. Everyone submits Assignment 1 time get 10/10 task.","code":""},{"path":"evaluation.html","id":"task-b3","chapter":"Evaluation","heading":"Bonus task (Lesson 7)","text":"Answer questions end mini-lecture video.addition, suggest following reading nothing submit:Browse R graph gallery explore huge variety visualiaations can make R. Practice thinking language aesthetic mappings, geometries, scales can used describe visualizations.Read ggplot cheatsheet see concepts grammar graphics connected computer code. Don’t worry details – practice making visualizations using tools many future lessons.","code":""},{"path":"evaluation.html","id":"task-b4","chapter":"Evaluation","heading":"Bonus task (Lesson 8)","text":"Practice using ggplot make graphs reproducing examples mini-lecture notes, modifying changing variables used aesthetic mappings. like, use data sources described “Data Sources” chapter course notes.nothing submit task.","code":""},{"path":"evaluation.html","id":"task-5","chapter":"Evaluation","heading":"Task 5 (Lesson 9)","text":"Exercises practice filter, group_by, summarize, mutate.add repository tasks 5 6 github account. Start creating new R project computer using link repository get github. Edit file task-5.rmd. done, knit file commit .rmd .html files repository.","code":""},{"path":"evaluation.html","id":"task-6","chapter":"Evaluation","heading":"Task 6 (Lesson 10)","text":"Exercises practice making facetted plots. questions repository tasks 5 6. Edit file task-6.rmd. done, knit file commit .rmd .html files repository. Push changes github submit work.","code":""},{"path":"evaluation.html","id":"task-b5","chapter":"Evaluation","heading":"Bonus task (Lesson 11)","text":"get practice reading files later course. now,pay attention code use future lessons reading files, anddownload excel file lesson, practice reading R, editing excel, confirming can read changes R.want practice bit reading week just looking data used term project.","code":""},{"path":"evaluation.html","id":"task-7","chapter":"Evaluation","heading":"Task 7 (Lesson 12)","text":"Reshaping data practice. tasks repository task 7 8.","code":""},{"path":"evaluation.html","id":"task-8","chapter":"Evaluation","heading":"Task 8 (Lesson 13)","text":"Displaying tables practice. tasks repository task 7 8.","code":""},{"path":"evaluation.html","id":"task-b6","chapter":"Evaluation","heading":"Bonus task (Lesson 14)","text":"material lesson helpful run challenges working Assignment 2, asks develop new skills unfamiliar functions.","code":""},{"path":"evaluation.html","id":"task-b7","chapter":"Evaluation","heading":"Bonus task (Lesson 15)","text":"Practice adding linear models smooths visualizations. Reproduce examples course notes, mini-lecture, course textbook. Create new visualizations design changing model, data, underlying visualization. Esperiment colors facets.","code":""},{"path":"evaluation.html","id":"task-9","chapter":"Evaluation","heading":"Task 9 (Lesson 16)","text":"Exercises linear models. See file task-9.rmd repository task 9 10.","code":""},{"path":"evaluation.html","id":"task-10","chapter":"Evaluation","heading":"Task 10 (Lesson 17)","text":"Exercises LOESS GAM smooths.\nSee file task-10.rmd repository task 9 10.","code":""},{"path":"evaluation.html","id":"task-11","chapter":"Evaluation","heading":"Task 11 (Lesson 18)","text":"Clone GitHub project “team-planning” computer (rstudio.cloud workspace). Edit file “team-planning.Rmd” add name GitHub user ID teams table. want work someone team, add team mates line. want assigned random team mate, add name line .","code":""},{"path":"evaluation.html","id":"task-b8","chapter":"Evaluation","heading":"Bonus task (Lesson 19)","text":"Look data internet. Download data computer. Read data R. Make summary table describing part data. Make visualization using data. Can find formatting errors data? trouble reading data R?can use data like task. want specific suggestion, get data gapminder.org another source lesson.","code":""},{"path":"evaluation.html","id":"task-12","chapter":"Evaluation","heading":"Task 12 (Lesson 20)","text":"’ve using R markdown make reproducible reports throughout course. task, practice using chunk options.task repository task 12, 13, 14.","code":""},{"path":"evaluation.html","id":"task-13","chapter":"Evaluation","heading":"Task 13 (Lesson 21)","text":"Create PCA MDS plot described task-13.rmd file. task repository task 12, 13, 14.","code":""},{"path":"evaluation.html","id":"task-14","chapter":"Evaluation","heading":"Task 14 (Lesson 23)","text":"Create K-means analysis accompanying visualization described task-14.rmd file. task repository task 12, 13, 14.","code":""},{"path":"evaluation.html","id":"task-b9","chapter":"Evaluation","heading":"Bonus task (Lesson 24)","text":"Create modify “R presentation” slide presentation described lesson. Ensure know toshow graphics output, code generated ,make graphic right size fit slide,open HTML version web browser.","code":""},{"path":"evaluation.html","id":"task-15","chapter":"Evaluation","heading":"Task 15 (Lesson 25)","text":"Cleaning validating data.","code":""},{"path":"evaluation.html","id":"task-16","chapter":"Evaluation","heading":"Task 16 (Lesson 26)","text":"Make animated plot following instructions repository.","code":""},{"path":"evaluation.html","id":"task-b10","chapter":"Evaluation","heading":"Bonus task (Lesson 27)","text":"Practice making map lesson","code":""},{"path":"evaluation.html","id":"task-17","chapter":"Evaluation","heading":"Task 17 (Lesson 28)","text":"Make maps described task markdown file repository.","code":""},{"path":"evaluation.html","id":"task-18","chapter":"Evaluation","heading":"Task 18 (Lesson 29)","text":"Create heatmap dendrogram.","code":""},{"path":"evaluation.html","id":"task-19","chapter":"Evaluation","heading":"Task 19 (Lesson 30)","text":"Work factors dates. Practice tasks repository file.","code":""},{"path":"evaluation.html","id":"task-b11","chapter":"Evaluation","heading":"Bonus task (Lesson 31)","text":"Make custom color scale using web interactive tool use colours plot. Select palette list given lesson use visualization.","code":""},{"path":"evaluation.html","id":"task-20","chapter":"Evaluation","heading":"Task 20 (Lesson 32)","text":"Create theme building existing theme. Show visualization without theme.","code":""},{"path":"evaluation.html","id":"assignments","chapter":"Evaluation","heading":"Assignments","text":"Assignments opportunities apply combine skills several lessons. structured, asked use specific skills accomplish task, creative flexibility product produce. assessed use technical skills judgement making well-designed effective visualizations, following principles explored course.Assignments submitted relevant github repository, generally R markdown document.","code":""},{"path":"evaluation.html","id":"assignment-1","chapter":"Evaluation","heading":"Assignment 1","text":"Make markdown document figure commit github repository. Ensures know foundation using git, github, R markdown, ggplot build new knowledge skills top.Use repository created Task 4.Due Wednesday 27 January 6:00 pm Atlantic time., go push work back github, get error “Author identity unknown”. need type following two commands R terminal window:","code":"git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\""},{"path":"evaluation.html","id":"assignment-2","chapter":"Evaluation","heading":"Assignment 2","text":"many packages functions make visualizations, really important able read documentation learn new functions. Fortunately, design ggplot means many functions work similarly learned basics, ’s quite easy learn .purpose assignment practice sort learning. ’ve picked functions work much like examples ’ve looked already. assignment pick two make R markdown document describing work. sort practice time learn new R skill.Look repository assignment-2 template assignment.","code":""},{"path":"evaluation.html","id":"assignment-3","chapter":"Evaluation","heading":"Assignment 3","text":"Practice using methods developed course far (summarizing, ggplot visualizations, linear regression, smooths) explore data set answer questions data.","code":""},{"path":"evaluation.html","id":"assignment-4","chapter":"Evaluation","heading":"Assignment 4","text":"Tidy Tuesday weekly activity support people learning use R data analysis visualization. week new dataset posted interested participants post visualizations. complex pieces work people lots experience, many work beginners just learning make good visualizations. encourage explore datasets example visualizations others made source ideas inspiration.next two assignments, ’ll select datasets ask work one assignment.assignment make scatter plots smooths (linear, loess, gam) dimensionality reduction (PCA MDS). goal gain insight data present aspect data visually appealing way. may able use data presented, may need transform way first (example using dplyr tools). feel free show subset data think makes better visualization highlight particular feature data.Present work short R markdown report. describe dataset, explain analysis transformations , present least 2 visualizations, describe main messages conveyed visualization. Full instructions repostory.","code":""},{"path":"evaluation.html","id":"assignment-5","chapter":"Evaluation","heading":"Assignment 5","text":"second Tidy Tuesday assignment. create map analysis data table visualization already discussed class.Organize work slide presentation presenter notes. example instructions repository.","code":""},{"path":"evaluation.html","id":"assignment-6","chapter":"Evaluation","heading":"Assignment 6","text":"peer evaluation assignment. provide, separate documents described repository,confidental feedback team mates work term projecta peer evaluation two oral presentations teams, shared presenters.provide thoughtful constructive feedback work classmates. Everyone’s work good aspects areas improvement; aim provide useful feedback areas.assignment peer evaluation project planning repository share. Pull updated version github XXX see assigment. Remember first day presentations know presentation evaluate!rubric guide evaluations repository assignment.","code":""},{"path":"evaluation.html","id":"project-description","chapter":"Evaluation","heading":"Term project","text":"final project analysis dataset choosing. can choose data based interests, based work courses, independent research projects. demonstrate many techniques course, applying appropriate develop communicate insight data.create compelling visualizations data. Pay attention presentation: neatness, coherency, clarity count. analyses must done RStudio using R.","code":""},{"path":"evaluation.html","id":"deliverables","chapter":"Evaluation","heading":"Deliverables","text":"Proposal - due Friday 12 March 6:00 pmPresentation - due Thursday 1 April Tuesday 6 April synchronous meeting.Report - due Friday 9 April 6:00 pmWork groups 2 according assignments made team planning repository. can produce team products, one product per team member, whichever prefer. two roles project. First contribute original creative work project. Second, act collaborator, providing teammate feedback, suggestions, debugging help, proofreading assistance requested.Use single GitHub repository proposal, presentation, final report. Use repository created team. See notes collaboration GitHub guidance. Contact trouble.","code":""},{"path":"evaluation.html","id":"team-creation","chapter":"Evaluation","heading":"Team creation","text":"Teams created late February. add everyone repository called team-planning. repository used create teams, schedule presentations, organize peer-evaluation Assignment 6.like form team someone else class, edit rmd document add request. like assigned randomly selected team mate, way indicate . process also introduce collaboration features github. deadline selecting teammates Monday 1 March. review list finalize assignments Tuesday 2 March. create presentation schedule peer-evaluation assignments later week.","code":""},{"path":"evaluation.html","id":"proposal","chapter":"Evaluation","heading":"Proposal","text":"main task proposal find dataset analyze project describe least one question can address data visualizations.important choose readily accessible dataset large enough multiple relationships can explored, complex get lost. suggest dataset least 50 observations 10 variables. find bigger dataset, can make subset work project. dataset include categorical quantiative variables. plan use dataset comes format haven’t encountered class, make sure able load R can tricky depending source. trouble ask help late.reuse datasets part course.list data repositories containing many interesting datasets. Feel free use data sources prefer.TidyTuesdayKaggleOpenIntroAwesome public datasetsBikeshare data portalHarvard DataverseStatistics CanadaOpen government data: Canada, NS, many sourcesOther sources listed Data sources section notesData find may suitable .Describe dataset question can address data proposal. Outline plan use five visualizations (e.g., data overview plot, dplyr/table summary, small multiples, smoothing/regression, k-means/PCA, map).repository contains template proposal called proposal.rmd. Write proposal revising file using template.Questions: introduction introduce research questionsData: Describe data (came , collected, cases, variables, etc.). Place data /data folder. Show can read data include output dplyr::glimpse() skimr::skim() data proposal.Visualization plan:\noutcome (response, Y) predictor (explanatory, X) variables use answer question.\nIdeas least two possible visualizations exploratory data analysis, including summary statistics visualizations, along explanation help learn data.\nidea least one statistical method described course (smoothing, PCA, k-means) useful analyzing data\noutcome (response, Y) predictor (explanatory, X) variables use answer question.Ideas least two possible visualizations exploratory data analysis, including summary statistics visualizations, along explanation help learn data.idea least one statistical method described course (smoothing, PCA, k-means) useful analyzing dataTeam planning: briefly decribe members team divide tasks performed.Assessment. See file grade-proposal.rmd assessment guidelines rubric.","code":""},{"path":"evaluation.html","id":"oral-presentation","chapter":"Evaluation","heading":"Oral presentation","text":"oral presentation 5 minutes long. goal present highlights project allow feedback can incorporated revise written report.small number slides accompany presentation. provided template use presentation.rpres. suggest format following:title team members’ namesA description data analyzingAt least one question can investigate data visualizationAt least two data visualizationsA conclusionFor suggestions making slide presentations see lesson slides recorded video.Don’t show R code; focus results visualizations computing. Set echo = FALSE hide R code (already done template).presentation just account everything tried (“, , etc.”), instead convey choices made, , found.Presentation schedule: Presentations take place last two synchronous sessions course. can choose presentation live pre-record . watch presentations teams provide feedback one day form peer evaluations. presentation schedule generated randomly.Assessment. See file grade-presentation.rmd assessment guidelines.Pratice presentation, team, using course collaborate room videoconferencing tool!","code":""},{"path":"evaluation.html","id":"written-report","chapter":"Evaluation","heading":"Written report","text":"Follow template provided written report (report.rmd) present visualizations insights data. Review marking guidelines grade-report.rmd ask questions expectations unclear.Style format count assignment, please take time make sure everything looks good tables visualizations properly formatted.teammate using repository, merge conflicts happen, issues arise, ’s fine! Pull work github start, commit changes, push often. Ask questions stuck. Look lesson collaboration help.knitted report R code hidden (echo = FALSE) document neat easy read. However document include code re-knit R Markdown file obtain results presented. want highlight something specific piece code, ’re welcome show portion.General criteria evaluation:Content - quality research question relevancy data questions?Correctness - visualization procedures carried explained correctly?Writing Presentation - quality visualizations, writing, explanations?Creativity Critical Thought - project carefully thought ? appear time effort went planning implementation project?","code":""},{"path":"ch-invitation.html","id":"ch-invitation","chapter":"1 Invitation to Data Visualization","heading":"1 Invitation to Data Visualization","text":"","code":""},{"path":"ch-invitation.html","id":"goals-1","chapter":"1 Invitation to Data Visualization","heading":"1.1 Goals","text":"lesson provide examples interesting influential data visualizations.task lesson, ask identify two visualizations find interesting provide brief description analysis .","code":""},{"path":"ch-invitation.html","id":"atmospheric-carbon-dioxide-concentration","chapter":"1 Invitation to Data Visualization","heading":"1.2 Atmospheric carbon dioxide concentration","text":"Climate change recent past coming century controled human-driven emission (possibly sequestration) carbon dioxide fossil fuels atmosphere. Starting 1950s, amount carbon dioxide atmosphere (parts per million) regularly measured. Subsequently, methods analyzing gasses trapped ice used extend record back one million years. direct physical link atmospheric concentration carbon dioxide loss heat Earth space, resulting mechanistic link increasing carbon dioxide concentration atmosphere mean temperature surface Earth. Visualizations data assocated global mean temperature data extremely influential, forming cornerstone books, documentary movie, countless educational environmental change movements.\nFigure 1.1: Two years atmospheric CO\\(_2\\) concentration Mauna Loa observatory. Source co2.earth sioweb.ucsd.edu\n\nFigure 1.2: Atmospheric CO\\(_2\\) concentration Mauna Loa observatory, 1958 present. Source co2.earth sioweb.ucsd.edu\nSample visualizations atmospheric carbon dioxide available institute collecting data decades.Estimates global mean temperature time available NASA.Many sites information data, usually presenting data visually testament importance visualizations.","code":""},{"path":"ch-invitation.html","id":"human-health-and-development","chapter":"1 Invitation to Data Visualization","heading":"1.3 Human health and development","text":"Hans Rosling physician popularizer data visualizations develop understanding human health economic development time across countries. public presentations illustrate view dyanmic charts can help us come see trajectory global development, particularly connections health economic development. strongly encourage watch presentations. especially well known effort dispell misunderstandings differences across countries health human development. popularized style scatterplot combined use colour, symbol size, animations show changes time.\nFigure 1.3: Fertility rate (babies per woman) function median national income across countries. See animated version showing relationship changed time. Source gapminder.org\n","code":""},{"path":"ch-invitation.html","id":"weather","chapter":"1 Invitation to Data Visualization","heading":"1.4 Weather","text":"Many people strongly interested local weather conditions. result strong interest complextity data, many visualizations developed. Forecasts, produced Environment Canada, historical retrospectives, produced Weatherspark examples leverage familiarity data, broad-scale human interest, data-rich overly complicated displays. Two examples shown .\nFigure 1.4: Environment Canada weather forecast Halifax NS, December 10, 2020\n\nFigure 1.5: Climatological mean daily high low temperatures Halifax NS weatherspark.com\n","code":""},{"path":"ch-invitation.html","id":"journalism","chapter":"1 Invitation to Data Visualization","heading":"1.5 Journalism","text":"past decade resurgence interest data visualizations, stimulated part journalists emphasising visualizations publications. example New York Times shows projected earnings college graduates range fields study accompanied notes discussion questions. New York Times series educational materials visualizations stories.","code":""},{"path":"ch-invitation.html","id":"historically-important-visualizations","chapter":"1 Invitation to Data Visualization","heading":"1.6 Historically important visualizations","text":"Many ideas contemporary data visulizations can traced back 19th century, represented several impactful examples. 1869, Charles Minard produced map Napoleon’s Russian campaign 1812. Florence Nightingale pioneer user data visualizations communicate messages sanitation public health, famously polar histogram showing causes mortality soldiers. Also public health, John Snow mapped cholera outbreak London, visually linking deaths water source. visualizations great advances bills mortality produced centuries earlier.","code":""},{"path":"ch-invitation.html","id":"stories","chapter":"1 Invitation to Data Visualization","heading":"1.7 Stories","text":"common observation humans learn stories. role data visualization story telling? graph tell story , story can weaved combination words data visulizations.Wilke’s book excellent argument favour storytelling data tells video (starting time 6:42). essential elements story arc including opening, challenge, action, resolution, results emotional reaction excitement, curiosity surprise. principle emotional response resolution challenge gets audience engaged helps retain message.may seem graph far removed story. pair graphs, dynamic graph, even just original graph updated graph can used tell story. example, return carbon dioxide figures top section. Two years data show seasonal cycle atmospheric carbon dioxide modest year year trend. Suppose knew carbon dioxide. hard know problem. Now look record since 1958. ’s now clear long-term increase interannual variation small comparison. find 800,000 year record ice cores, see even context – current atmospheric carbon dioxide concentrations outside range documented variability past 800k years.return theme story telling frequently course, particularly assignments.","code":""},{"path":"ch-invitation.html","id":"futher-reading","chapter":"1 Invitation to Data Visualization","heading":"1.8 Futher reading","text":"Kurt Vonnegut summary story arcsWilke, Fundamentals Data Visualization Chapter 29","code":""},{"path":"ch-tools.html","id":"ch-tools","chapter":"2 Computer tools","heading":"2 Computer tools","text":"","code":""},{"path":"ch-tools.html","id":"goals-2","chapter":"2 Computer tools","heading":"2.1 Goals","text":"lesson explain computer tools use, selected, useful.task lesson, ask read Healy Sections 2.1-2.4, contains excellent advice reasons using R markdown, R/Rstudio, projects, basics R, patient learn computing tasks.","code":""},{"path":"ch-tools.html","id":"introduction","chapter":"2 Computer tools","heading":"2.2 Introduction","text":"use R Rstudio course. R widely used analyze data comes many add-packages statistical analysis, data visualization, specialized tools many disciplines applications. just scratch surface R can , end course feel comfortable learning use R data visulization skills learn use R many tasks. Rstudio graphical user interface R many convenient features including tools support report writing, getting help, project management. data visualization use ‘ggplot2’, data analysis use ‘tidyverse’ style programming, report writing use ‘R markdown’, project management use R projects ‘git’ version control. computer terms mean much later course!lesson explain use tools main features make useful. task lesson get computer set necessary software ready rest course.","code":""},{"path":"ch-tools.html","id":"r","chapter":"2 Computer tools","heading":"2.3 R","text":"R open-source software developed core team programmers, made available free users along full ‘source code’ software one can find exactly part software works. R first developed mid-1990s now quite mature language, although development continues. example brand new notation just introduced December 2020. R developed couple decades experience predecessor S commercial product known S+.R many strengths account popularity longevity. flexible expressive language, allows many styles programming use powerful tools perform sophisticated analyses easily also flexibility develop computational tools basic computations. huge, global community users continually develop new tools R make available easy install computer. means anyone can develop new data analysis method readily distribute widely-used platform anyone comparatively easily. tremendously powerful! third key ingredient helpful community users develop tutorials books help newcomers R learn use . course use three books, can purchased, also available free internet.hand, R challenging tool learn. accomplish task must type instructions computer. can daunting must first learn instructions available, , use . experience programming (example using Python Java) know many ways go wrong computer’s output always easy understand, especially things go wrong! Nevertheless, R style computing data, initiated, allows endless possibilities terms data analysis.approach course demonstrate sample calculations computing tasks lesson encourage become proficient tasks repetition minor modifications. time, come understand use tools analyze visualize data interact R accomplish new tasks.","code":""},{"path":"ch-tools.html","id":"rstudio","chapter":"2 Computer tools","heading":"2.4 Rstudio","text":"Rstudio graphical ‘front end’ (integrated development environment) R software. provides editor documents, convenient way see plots, get help, explore data objects created R, manage report writing, sets files used collectively part projects. R, find Rstudio many features take discover. course focus features leave find others .","code":""},{"path":"ch-tools.html","id":"grammar-of-graphics-ggplot2","chapter":"2 Computer tools","heading":"2.5 Grammar of graphics (ggplot2)","text":"Since course data visualization, creating plots data core skill. get computer make graph, need bring data together instructions producing graph. Traditional ways make graphs idiosyncratic, kind graph specialized instructions, even features common many plots use size adjustments, symbols, colors represent numerical categorical scales. ‘ggplot’ style arose recognition language (‘grammar’) describe graphical displays data superior styles graphics creation. (gg ggplot abbreviation grammar graphics.) common language used connect variables dataset aesthetic features plot, position along axis, symbol size, shape, colour. association separate selecting data represented (e.g., points, line, histogram). Another key element ranges values associated sizes, shapes, colours; called scales functions, work regardless type plot made. Finally, annotations axis labels, formatting elements (e.g., fonts, sizes, positions non-data elements) may adjusted customize plot. Essentially ggplot provides tool making graphs modular, thus allows quickly efficiently learn make new kinds plots modify . proof works since ggplot2 first developed, many users software contributed styles plotting can incorporated design original software. makes plotting data sound complicated, fact making simple plot customizations actually easy get idea behind grammar graphics.","code":""},{"path":"ch-tools.html","id":"tidyverse","chapter":"2 Computer tools","heading":"2.6 tidyverse","text":"starting point visualization produce analysis data. developers tidyverse set tools R noticed many kinds operations data. style suggestions organize data analyze data can provide great flexibility simplify common tasks. nothing can done tidyverse style couldn’t figure tools developed, R code write now much easier others read. problem solving process use much streamlined used since tend use kinds solutions new dataset examine.two central ideas tidyverse approach data analysis. (1) Data arranged rectangles (two dimensional arrays) variables columns observations rows. (2) data analysis calculation broken series simple, modular functions composed together, filtering rows, grouping rows together, computing summaries. Essentially forms grammar data analysis, analogous ggplot plotting graphics.","code":""},{"path":"ch-tools.html","id":"r-markdown","chapter":"2 Computer tools","heading":"2.7 R Markdown","text":"know produce data visualization statistical analysis, new challenges quickly arrive. must communicate results someone else. must prepared revise analysis repeat revised new data. common approach write lots little bits computer code, cut paste results word processor, try remember fits together. R markdown documents key step better solution. R markdown document contains natural-langauge (e.g., English) text humans read R code computer use. R markdown document can compiled (say ‘knitted’) together results R computations provide finished report. enables computer code data analysis results kept together exposition data results.","code":""},{"path":"ch-tools.html","id":"git-and-github","chapter":"2 Computer tools","heading":"2.8 Git and Github","text":"Git distributed version control software. means tool help keep track versions computer code, including R markdown documents, files however choose share others. tools managing versions software databases called repositories. Version history management useful revise report prepared want keep access old style report archival purposes. access old versions data visualizations essential auditing quality control well. Git also enables two people working different locations collaborate project, managing changes logically independent made file exchanges helping collaborators resolve conflicts edits. Git widely used data science world among software developers.learning basic uses git course.Github web service allows easily publish git repositories. Rstudio easy use tools managing work using git github. course notes written published using Rstudio, git, github. use tools assignments term project.","code":""},{"path":"ch-tools.html","id":"further-reading","chapter":"2 Computer tools","heading":"2.9 Further reading","text":"Healy Sections 2.1-2.4 contains excellent advice reasons using R markdown, R/Rstudio, projects, basics R, patient learn computing tasks. return basics R various points course.\nWilke thoughtful perspecitive ever changing landscape software data analysis. tools use change, need learn make visualizations today, consider data visualizations. Wilke emphasizes , strongly influenced tools using. ’ve drawing computer graphics 30 years used countless tools ideas. methods course best ’ve ever used; ggplot tidyverse constrain work just right way make better.R4DS Chapters 26 27 contain valuable introduction R markdown use commuication.","code":""},{"path":"ch-tools.html","id":"resources","chapter":"2 Computer tools","heading":"2.10 Resources","text":"want know lot using Rstudio, hour-long video overview Rstudio featuresIf want know cover git github, see notes called Happy git R. essentials using tools explained future lessons.R Markdown scientistsSome R Markdown tips","code":""},{"path":"setup.html","id":"setup","chapter":"3 Setting up your computer","heading":"3 Setting up your computer","text":"","code":""},{"path":"setup.html","id":"goals-3","chapter":"3 Setting up your computer","heading":"3.1 Goals","text":"lesson start using computer tools introduced previous lesson.task lesson follow along instructions provide information Brightspace link marked Task 2.","code":""},{"path":"setup.html","id":"introduction-1","chapter":"3 Setting up your computer","heading":"3.2 Introduction","text":"statistical software R RStudio version control software git used course. prior experience \nR, RStudio git assumed. ’ll take class time learn software.lesson willinstall software computer,learn use software “cloud”,create github account, andcomplete task let know done ask help tell github account name.steps demonstrated Windows Macintosh computer videos Brightspace. available Brightspace. use Chromebook, can’t install software, skip ahead rstudio.cloud section. use linux, follow instructions install software contact trouble.","code":""},{"path":"setup.html","id":"r-1","chapter":"3 Setting up your computer","heading":"3.3 R","text":"download install R go r-project.org click link download R","code":""},{"path":"setup.html","id":"rstudio-1","chapter":"3 Setting up your computer","heading":"3.4 Rstudio","text":"download install Rstudio, go Rstudio.com click link download Rstudio","code":""},{"path":"setup.html","id":"git","chapter":"3 Setting up your computer","heading":"3.5 Git","text":"download install git:\nWindows, go git-scm.org click link download version Windows\nMacintosh, use Terminal app type xcode-select --install download install git. two minus signs front “install”; web browsers may display incorrectly dash (one symbol).\nWindows, go git-scm.org click link download version Windowson Macintosh, use Terminal app type xcode-select --install download install git. two minus signs front “install”; web browsers may display incorrectly dash (one symbol).","code":""},{"path":"setup.html","id":"rstudio.cloud","chapter":"3 Setting up your computer","heading":"3.6 rstudio.cloud","text":"Chromebook can use R, Rstudio git cloud service rstudio.cloud. Everyone learn use cloud service backup case problems software computer.","code":""},{"path":"setup.html","id":"dalhousie-on-campus-labs","chapter":"3 Setting up your computer","heading":"3.7 Dalhousie on-campus labs","text":"R Rstudio available Dalhousie computer labs, git version control software must installed following instructions Windows computers . Since user files erased lab computers log , process must repeated login.","code":""},{"path":"setup.html","id":"packages","chapter":"3 Setting up your computer","heading":"3.8 Packages","text":"done downloading installing software yet! tools use R distributed add-packages. bundles software add new functions R. three steps use pacakge:Install package (done )Tell R using package (done time start R)Learn use package (major goal course)install new packages time machine. Right now 203 installed. ’s also common update new versions. Rstudio trys help identify packages need install – ’ll see later . optional task today install packages suggested Healy Preface. (’ll use lots packages , good start.) Cut paste following R code window marked “Console” Rstudio.","code":"my_packages <- c(\"tidyverse\", \"broom\", \"coefplot\", \"cowplot\",\n                 \"gapminder\", \"GGally\", \"ggrepel\", \"ggridges\", \"gridExtra\",\n                 \"here\", \"interplot\", \"margins\", \"maps\", \"mapproj\",\n                 \"mapdata\", \"MASS\", \"quantreg\", \"rlang\", \"scales\",\n                 \"survey\", \"srvyr\", \"viridis\", \"viridisLite\", \n                 \"socviz\", \"devtools\", \"patchwork\")\n\ninstall.packages(my_packages)"},{"path":"setup.html","id":"github","chapter":"3 Setting up your computer","heading":"3.9 Github","text":"Github web service sharing publishing github repositories many related services. today, need create account tell github name Brightspace quiz. github name send invitation join course resources email.","code":""},{"path":"look-data.html","id":"look-data","chapter":"4 Look at Data","heading":"4 Look at Data","text":"","code":""},{"path":"look-data.html","id":"goals-4","chapter":"4 Look at Data","heading":"4.1 Goals","text":"lesson describe decisions influence visualize data, including motivation visualizing knowledge human visual perception influence “see” look visualization.task lesson answer two specific questions choices made visualizing data, drawing experience ideas presented . also become familiar Healy Chapter 1 contains much topics.","code":""},{"path":"look-data.html","id":"introduction-2","chapter":"4 Look at Data","heading":"4.2 Introduction","text":"’re learning make data visualizations, naturally want make good ones. makes one visualization good another bad? specific qualities emulate avoid? can meaningfully discuss visualization quality without emphasizing personal preferences taste? Healy Chapter 1 many good answers questions, recognizing subject somewhat subjective.lesson try develop tentative answers following questions:can learn easily visualization table data?makes good visualization?features human visual perception considered designing data visualizations?much Healy Chapter 1 highlights lesson. suggest read chapter carefully return several times throughout course.","code":""},{"path":"look-data.html","id":"problems-with-numerical-summaries","chapter":"4 Look at Data","heading":"4.3 Problems with numerical summaries","text":"Numerical summaries data (e.g., mean, median, quantiles, standard deviation) useful sometimes conceal reveal. Discussions financial aspects life news – whether incomes, taxes, assets often suffer problems distributions underlying data skewed. Similarly, numerical summaries relationships two variables (e.g., correlation, linear regression parameters) can misleading presence outliers (see Healy Figure 1.2, 1.3) unexplored features relationship. main problem numerical summaries distillation complex data set small set numbers. Visualizing data allows many data represented exploits human visual system interpret relationships, without statistical pre-filtering (e.g., selecting average linear model).Two synthesized datasets illustrate phenomena extreme cases: Anscombe’s Quartet Datasaurus Dozen. data panel numerical summaries (mean, standard deviation, correlation), yet underlying patterns clearly different.problems generally resolved rule: always plot data; don’t rely numerical statistical analysis.","code":""},{"path":"look-data.html","id":"good-and-bad-figures","chapter":"4 Look at Data","heading":"4.4 Good and bad figures","text":"makes visualization good? bad? ’ll explore answers, simplest test thisIs main impression viewer gets one intended designer?interpretation faithful underlying data?answer questions, need work ’ve made visualization. need continue probe data sure misrepresenting data. need use visualization communication find audience understood message, got impression result visualization choices made.","code":""},{"path":"look-data.html","id":"chart-junk","chapter":"4 Look at Data","heading":"4.4.1 Chart junk","text":"Sometimes dress display data, designers add graphic elements determined data, instead designed guide interpretation display. elements part visualizations create – elements infographics advertising persuade illustrate rather display data. focused displaying data. (examples bad infographics, just search\nFigure 4.1: Still CBC Canadian Federal election coverage, October 21, 2019. three-dimensional bar chart help understand election outcome? bars right height? helpful bar chart appear middle studio set? Can judge height bars?\n","code":"\nknitr::include_graphics(\"static/cbc-2019-oct-21-election.jpg\")"},{"path":"look-data.html","id":"distracting-colours-images-or-shapes","chapter":"4 Look at Data","heading":"4.4.2 Distracting colours, images or shapes","text":"Good visualizations don’t minimalist black white, use colour, shape elements chosen deliberately enhance message told data. Colour can used highlight contrasts create groups. Shapes harder distinguish, especially many parts. Healy examined many perceptual aspects plots Sections 1.4 1.5.","code":""},{"path":"look-data.html","id":"bad-data","chapter":"4 Look at Data","heading":"4.4.3 Bad data","text":"Data can wrong many ways, even data underlying figure correct, must sure message conveyed data matches presentation figure. survey people spend time reported World Data typical – plot really tell looks like first glance? age distributions, gender roles, sociological factors experience “typical person” country? ’s hard tell, visualization doesn’t work.\nFigure 4.2: Source: OECD time use database, World Data tweet @simongerman600 2020-12-13.\n","code":""},{"path":"look-data.html","id":"perception-guidelines-and-cautions","chapter":"4 Look at Data","heading":"4.5 Perception guidelines and cautions","text":"Many features visualization can make harder interpret , designer, intend. know message graph, may difficult see problems visualizations create, since know intended message. must keep eye unintended messages difficult decode graphs.Stacked bar charts (Healy Figure 1.11) make comparisons across groups difficult baseline one colour line corresponding region one bar next.aspect ratio (Healy Figure 1.12) can make small change look large, reverse exploiting perceptions.checkerboard illusion (Healy Figure 1.14) example brains process brightness context neighbouring parts image. squares labeled B colour, represented underlying data, look completely different. Colour grayscale brightness, result, good way indicate quantity compared across regions plot. (contrast, small number colours can effective distinguishing small number categories.)\nFigure 4.3: checker shadow illusion. Wikipedia\n","code":""},{"path":"look-data.html","id":"decoding-graphs","chapter":"4 Look at Data","heading":"4.6 Decoding graphs","text":"Data generally described quantitative categorical. type data suite representations challenges perception.quantitative data, direct representation position symbol line, like ‘number line’ elementary school math classes. comparisons lengths line, slopes line angles pie chart, colour brightness saturation, area volume difficult make quantiative (roughly order easiest hardest). orderings reasonably intuitive, explained, also supported quantitative experimental data (Healy Figures 1.22-1.24).options categorical data somewhat simpler: position still useful, colour hue, shape (Figure 1.25). number categories kept small, particularly colour shape, message likely lost detail visualization.","code":""},{"path":"look-data.html","id":"where-to-put-0","chapter":"4 Look at Data","heading":"4.7 Where to put 0?","text":"common rule quantitative displays using position always include 0 axis. reason simple, often want make comparisons absolute differences relative differences. Ratios two quantities read distances sensible distance 0 can seen. Rules absolute always true rare. data shown , visualization better? dots used left bars right?\nFigure 4.4: bar chart dot chart version data. extent horizontal axis differs two panels.\n","code":""},{"path":"look-data.html","id":"lines-shapes-or-connect-the-dots","chapter":"4 Look at Data","heading":"4.8 Lines, shapes, or connect the dots?","text":"common question plotting scatter plot two quantitative variables whether use lines, points, data (see sketch .) appropriate? Often data points discrete little known values points; lines can thus misleading give visual indication data points. Lines act guides joining points symbol, gives stronger visual impression can simplify message complex plot. underlying data continuous lines reasonable representation process represented, symbols may unnecessary. short, appropriate representation depends understanding data message communicated.\nFigure 4.5: Points lines?\n","code":""},{"path":"look-data.html","id":"thinking-about-your-goals","chapter":"4 Look at Data","heading":"4.9 Thinking about your goals","text":"Almost decisions data visualizations come : best choice highlight important feature dataset? reader interpret visualization? picture represent data fairly? perceptual problems make picture easy misinterpret difficult understand?","code":""},{"path":"look-data.html","id":"further-reading-1","chapter":"4 Look at Data","heading":"4.10 Further reading","text":"chapters strongly recommended. notes just brief introduction.Healy Chapter 1Wilke Chapter 1 emphasizes difference ugly, bad, wrong figures, echoing many observations made . rest book addresses questions considerable detail perspective someone training students good bad features graphics, focusing many perceptual issues introduced .","code":""},{"path":"first-plot.html","id":"first-plot","chapter":"5 Making your first plot","heading":"5 Making your first plot","text":"","code":""},{"path":"first-plot.html","id":"goals-5","chapter":"5 Making your first plot","heading":"5.1 Goals","text":"lesson show create basic plot demonstrate sequence refinements plot.task lesson repeat steps demonstrated accompanying video. Refer Healy Section 2.6 different basic plot.","code":""},{"path":"first-plot.html","id":"introduction-3","chapter":"5 Making your first plot","heading":"5.2 Introduction","text":"lesson start learn use ggplot visualize data. one simple example several exercises, designed make essentials clear mind. plots share three features explained , many plots draw later course much complex.can read notes static document web browser, ’s better download R markdown file , open Rstudio, edit examples read.","code":""},{"path":"first-plot.html","id":"required-elements-for-a-plot","chapter":"5 Making your first plot","heading":"5.3 Required elements for a plot","text":"need three elements make plot using ggplot:data, form tidy data (data frame tibble language R)mapping variables data features graph (e.g., position x- y-axis, colour, shape, size)kind graph draw, scatter plot, histogram, bar chart.","code":""},{"path":"first-plot.html","id":"your-first-plot","chapter":"5 Making your first plot","heading":"5.4 Your first plot","text":"use gapminder data, must installed part gapminder package adapted data gapminder.org.function create plot ggplot. must specify data (gapminder) mapping various columns data features graph. basics established, add (+) one thing graph: instruction place symbol x, y combination using “geometry” geom_point.’ll lot say data organized tables later, now can look data typing View(gapminder) Rstudio Console.","code":"\nlibrary(gapminder)\nlibrary(ggplot2)\nggplot(data = gapminder, \n       mapping = aes(y=lifeExp, x=gdpPercap)) +\n  geom_point()"},{"path":"first-plot.html","id":"improving-your-plot","chapter":"5 Making your first plot","heading":"5.5 Improving your plot","text":"’re going revise plot building instructions. ’ll repeat instructions , instead displaying figure, store result variable (conventionally called p plot keep simple, can use name like.) simplify examples follow, highlighting makes example different.Add better labels plot using labs x, y, title, subtitle, tag. example placeholder text. Get R markdown file revise figure show sensible text spaces.Almost everyone makes text figures small. small small obviously matter judgement, depends age (vision), medium (screen , website, presentation, printed paper), whether figure made , trying reach wider audience. ’s essential know make text bigger! Many visual aspects ggplot can controlled part theme; introduce gradually throughout course summarize important themes lesson near end course.Let’s make simple use colour. many countries, ’s good choice colour feature – many distinguish. Let’s colour points continent. need link variable continent colour aesthetic.Gross domestic product varies widely across countries. uneven spread x-axis makes visualization hard read. ’s got couple features, notably fact always bigger 0 tend interested multiplicative comparisons, mean log-transformation makes better plot. (debatable used reading noticing log scales. Log scales useful well worth trouble learn , put “list” haven’t learned read yet.) ggplot makes changing scale farily easily, least special cases. stuff brackets scale_x_log10 optional makes labels look bit prettier. (Notice ’re using function new package .)formatting numbers x-axis bit tricky get right explain. fact sort thing might keep file examples , like , really don’t like see \\(10^3\\) formatted \\(1.0e3\\). (Try labels = scientific see format.)","code":"\np <- ggplot(data = gapminder, \n       mapping = aes(y=lifeExp, x=gdpPercap)) +\n       geom_point()\np + labs(title=\"Title here\",\n         subtitle=\"A subtitle\",\n         x=\"x axis label\",\n         y=\"y axis label\",\n         caption=\"A caption.\",\n         tag=\"A.\")\np + theme(text = element_text(size=18))\np + geom_point(aes(color=continent))\nlibrary(scales)\np + scale_x_log10(labels = trans_format('log10', math_format(10^.x)))"},{"path":"first-plot.html","id":"exercises","chapter":"5 Making your first plot","heading":"5.6 Exercises","text":"Combine several features examples one example: colour, log scale x axis, better axis labels titles, course changing text size.Repeat examples using variables choice penguins data package palmerpenguins","code":""},{"path":"first-plot.html","id":"further-reading-2","chapter":"5 Making your first plot","heading":"5.7 Further reading","text":"Healy Section 2.5-2.6For aesthetics mappings data visualizations, see Wilke Chapter 2","code":""},{"path":"vcs.html","id":"vcs","chapter":"6 What is version control software?","heading":"6 What is version control software?","text":"","code":""},{"path":"vcs.html","id":"goals-6","chapter":"6 What is version control software?","heading":"6.1 Goals","text":"lesson explain version control use . also demonstrate use version control Rstudio github course tasks, assignments, term project.task lesson get repository (see means) Assignment 1 computer ready work assignment.","code":""},{"path":"vcs.html","id":"introduction-4","chapter":"6 What is version control software?","heading":"6.2 Introduction","text":"Version control software used manage process creating software. commonly used track changes, manage revision process correcting errors adding new features, tracking history project different versions, synchronizing contributions many different people, faciliating distribution broad audience. Version control software commonly applied production complex projects like software, can used text documents, data, many applications.","code":""},{"path":"vcs.html","id":"what-software-is-used-for-version-control","chapter":"6 What is version control software?","heading":"6.3 What software is used for version control?","text":"Version control software history dating back several decades, many different tools available. using one popular packages, known git (Wikipedia, homepage). Git keeps entire history project computer require central repository. Since version control software often used coordinate work many authors distribute product, central repositories GitHub (Wikipedia, homepage) become popular, point people see integrated set tools. popular version control software packages include Mercurial Subversion central repositories bitbucket .using git github book.","code":""},{"path":"vcs.html","id":"why-is-version-control-used-in-data-visualization","chapter":"6 What is version control software?","heading":"6.4 Why is version control used in data visualization?","text":"Data visualization process combining data computer code create visualization. parts can change new information new ideas, can require synthesis skills multiple authors, benefit transparency design distribution. result, version control software natural tool help work data visualization.Suppose develop data visualization want distribute result, anticipate updating data revising analyses. sequence steps similar software development: initial version produced released users, changes made, new versions produced. Users (software data visulizations) want know version using, updates, changes versions. Version control software can help tasks , key concepts understood, without much extra effort part team producing data visualization. Understanding workflow valuable technical skill .course integrate just enough use version control help see can helpful get past uncomfortable stage knowing version control without knowing basics use . fluent beginner users git model version control end course.","code":""},{"path":"vcs.html","id":"how-will-we-use-version-control","chapter":"6 What is version control software?","heading":"6.5 How will we use version control?","text":"evaluations course require use git github. Depending work final project, may use tool collaboration. course emphasize basic uses git give opportunity practice core elements using git.","code":""},{"path":"vcs.html","id":"introduction-to-git","chapter":"6 What is version control software?","heading":"6.6 Introduction to git","text":"Git organizes data repository, commonly called repo. repo contains copy files ask git track tracks changes make files. One create repository must stage add files repository. Staging declaration current version file one want added repository. file must staged separate step. (Rstudio just means checking box.) staged files want, commit repository. updates repository, moving files staged area. New files stored entirety. file changed, differences old new versions retained. changes happen computer, subfolder called .git used git keep track repository. using service like github can push changes remote location can easily obtained others.","code":""},{"path":"vcs.html","id":"using-git-with-rstudio","chapter":"6 What is version control software?","heading":"6.7 Using git with Rstudio","text":"important steps using git Rstudio. looks like lot steps, ’ve broken task simple steps. practice, used process, ’s quite simple. ’ve prepared video walkthrough (Brightspace, link come) step can follow along .Check sure git working computerCreate new Rstudio project new folder enable version controlAdd file projectStage files local git repositoryCommit staged changes local git repositoryCreate remote repository githubTell Rstudio git find remote repositoryPush changes github repositoryRevise file project (including renaming, creating new files)Stage changesCommit changesPush changesAn important variation process course arise assignments. assignments, create repository github containing instructions possibly data files. create new Rstudio project computer based repository (known cloning repository). takes care lot steps : creating repository, adding files, creating github repository, connecting local repository remote location. just focus main steps: staging, committing, pushing.","code":""},{"path":"vcs.html","id":"setup-1","chapter":"6 What is version control software?","heading":"6.8 Setup","text":"already done step part earlier lesson. instructions repeated case missed step something went wrong.","code":""},{"path":"vcs.html","id":"on-rstudio.cloud","chapter":"6 What is version control software?","heading":"6.8.1 On rstudio.cloud","text":"Git already installed rstudio.cloud. several ways confirm .can click “terminal” tab type git. see help message instead error message.menu item Tools > Version Control > Project setup, see git choice popup menu “version control system” instead “none”.Using File > New Project > Version Control > Git create new project using remote repository (sample) work.","code":""},{"path":"vcs.html","id":"on-a-macintosh-osx-computer","chapter":"6 What is version control software?","heading":"6.8.2 On a Macintosh (OSX) computer","text":"install git, open “Terminal”, either within R using application Terminal found Applications > Utilities folder, typexcode-select --installand wait minutes.Type git terminal check installation worked.","code":""},{"path":"vcs.html","id":"on-a-windows-computer","chapter":"6 What is version control software?","heading":"6.8.3 On a Windows computer","text":"Download git git-scm using download link. Run installer, accepting default options many dialog boxes appear.done, type git Rstudio terminal. see help text displayed instead error message know git installed.move next steps git working properly computer. can’t get working computer, use rstudio.cloud now.","code":""},{"path":"vcs.html","id":"set-up-a-github-account","chapter":"6 What is version control software?","heading":"6.9 Set up a github account","text":"Create free account github.comTell github account name filling brightspace survey Task 1.day less get invitation email join course github. Accept invitation.pull files push files github need enter password. authorization key can place computer let skip authentication step. (Instructions come.)","code":""},{"path":"vcs.html","id":"give-git-your-name-and-email-address","chapter":"6 What is version control software?","heading":"6.9.1 Give git your name and email address","text":"use git communicate GitHub, git needs know name email address help people know made changes sending.Rstudio “terminal” window (“console” window), type following, placing name email spaces indicated:git config –global user.email “@example.com”git config –global user.name “Name”","code":""},{"path":"vcs.html","id":"practice-tasks","chapter":"6 What is version control software?","heading":"6.10 Practice tasks","text":"’s step--step guide creating new Rstudio project new folder using git version control.","code":""},{"path":"vcs.html","id":"create-a-project","chapter":"6 What is version control software?","heading":"6.10.1 Create a project","text":"Start Rstudio.already working files, choose: Session > New sessionUse Rstudio menu: File > New Project… > New Directory > New ProjectGive directory new project place deliberate place computer (e.g., Desktop, folder called STAT2430, whatever prefer.). Make sure “Create git repository” checked. click “Create Project”.","code":""},{"path":"vcs.html","id":"create-a-new-markdown-file","chapter":"6 What is version control software?","heading":"6.10.2 Create a new markdown file","text":"Use Rstudio menu: File > New file > R Markdown …Give document title make sure name appears space Author. Use HTML output.standard template R markdown file created.Save file new project. Call something like “example” “testing”.like, click “knit” see output R markdown document. ’ll learn later.","code":""},{"path":"vcs.html","id":"stage-and-commit-your-changes","chapter":"6 What is version control software?","heading":"6.10.3 Stage and commit your changes","text":"Click “Git” tab upper right Rstudio window.see three files – Rmd file just created plus “.gitignore” Rproj file stores information project.Check “Staged” box beside three files. now told git want add local repository next commit changes.Click “Commit”. pop-window show files committing changes (everything, since ’re making first commit). asked “commit message” upper right. Type short informative message . valuable record hoping achieve changes. ’ll type “learning git making first commit first repository”.Click “Commit”. message box appears showing happened. don’t usually read .Click “Close”.Close Commit popup using “X” button close window computer.","code":""},{"path":"vcs.html","id":"make-some-more-changes-to-your-files","chapter":"6 What is version control software?","heading":"6.10.4 Make some more changes to your files","text":"notice “status” display Git tab now blank. differences files R project local git repository. Let’s see happens change .Make simple change Rmd file. example, set date tomorrow. Save file.Notice file now appears Git status tab. blue M beside file name indicate file modified.Check staged button.Commit changes local repository.","code":""},{"path":"vcs.html","id":"connect-to-github","chapter":"6 What is version control software?","heading":"6.10.5 Connect to github","text":"publish files github steps.need create repository github.need connect local repository github repository.need push changes computer github (remote) repository.Repositories github can public (anyone can see ) private (people give explicit permission can see .) ’ll make repository private.Go github.com.Click bright green button “New” left next word “Repositories”.Give repository name. Don’t use spaces; use - _ connect words. suggest “-first-repository”.Click radio button beside “Private”Don’t check boxes.Click green button “Create repository”Copy third last line code next screen: git branch -M main.Go back Rstudio. Paste git command “Terminal” window hit enter.Copy second last line code next screen. example git remote add origin https://github.com/AndrewIrwin/-first-repository.git. github name repository name. Paste Terminal window.thing last line code: git push -u origin mainGo back github refresh window. see three files R project web browser now.","code":""},{"path":"vcs.html","id":"make-and-push-another-change","chapter":"6 What is version control software?","heading":"6.10.6 Make and push another change","text":"’re done setup now. Now practice normal day--day work R project.Make change Rmd file. Perhaps change title add middle initial.Save file.Stage commit changes local repository.Click green arrow Git tab “push” new changes github.Reload github window web browser. start commit message appear next files changed.Congratulations! git github novice now.","code":""},{"path":"vcs.html","id":"clean-up","chapter":"6 What is version control software?","heading":"6.11 Clean up","text":"don’t want keep repository, can get rid two steps.Delete folder computer dragging trash (Finder Macintosh, File explorer Windows)Delete github. repository page github.com, go : Settings, scroll bottom. “danger zone” choose “Delete repository”. Github really doesn’t want mistake, requires two confirmation steps. must type repository name confirm enter github password confirm.","code":""},{"path":"vcs.html","id":"your-first-assignment-from-github","chapter":"6 What is version control software?","heading":"6.12 Your first assignment from github","text":"task lesson ’ll clone exiting repository created github create new project computer (rstudio.cloud account). first step assignment 1. task simpler steps shown , since created repository github already; task clone copy onto computer.Please watch Task 4 video step--step instructions. (slides also available.)","code":""},{"path":"vcs.html","id":"resources-1","chapter":"6 What is version control software?","heading":"6.13 Resources","text":"Rstudio help gitSoftware Carpentry tutorial using git RstudioHappy Git RHighlights key features git github developersAdvanced Git cheat sheetA advanced look internals gitArticle teaching statistics git github, students instructors.","code":""},{"path":"grammar.html","id":"grammar","chapter":"7 Grammar of Graphics","heading":"7 Grammar of Graphics","text":"","code":""},{"path":"grammar.html","id":"goals-7","chapter":"7 Grammar of Graphics","heading":"7.1 Goals","text":"lesson explain concept behind “grammar graphics”. emphasis idea particular computing environment (R ggplot2) use.task lesson review material ggplot connect ideas previous lesson concept grammar graphics prepare starting learn details next lesson. multiple choice questions answer week’s task repository.","code":""},{"path":"grammar.html","id":"introduction-5","chapter":"7 Grammar of Graphics","heading":"7.2 Introduction","text":"end lesson understand design grammar graphics. help develop mental model R functions plotting , making process easier remember modify suit goals.next lesson show R commands accompany concept.lessons, practice, able create new visualizations many different types, customize , ready learn many methods extensions basics.","code":""},{"path":"grammar.html","id":"the-layers-of-a-plot","chapter":"7 Grammar of Graphics","heading":"7.3 The layers of a plot","text":"plot assembled layers (see ), starting data, adding aesthetic mappings variables features, geometries determine features displayed, optional facets splitting plot subplots, statistics computing new variables data, coordinate system (usuallly Cartesian), finally themes modifying appearance plot independently data.","code":""},{"path":"grammar.html","id":"data","chapter":"7 Grammar of Graphics","heading":"7.4 Data","text":"Data always come data frame (tibble) columns representing variables row corresponding different observation. ’ll lot say organizing manipulating data later.","code":""},{"path":"grammar.html","id":"aesthetic-mappings","chapter":"7 Grammar of Graphics","heading":"7.5 Aesthetic mappings","text":"Variables data connected features visualization, position x y axes, colours, shapes, sizes, features mapping connects two.mapping associated scale. variable represented x axis, scale translates numerical value onto position. aesthetic shape, scale converts categorical value square, circle shape. Similarly colours, line types, symbol sizes .Aesthetic mappings can used several ways plot, example help place symbols text labels. process called inheritance allows happen. Inherited aesthetics can overridden ; thinking can subtle dramatic effects plot. lookout get examples.Sometimes want customize plot making symbols quares changing lines green. don’t use aesthetic mappings , connecting variable feature graph. Instead override default plot appearance specifying particular colour shape part geometry.","code":""},{"path":"grammar.html","id":"geometries","chapter":"7 Grammar of Graphics","heading":"7.6 Geometries","text":"geometry visual representation data: points, lines, shaded regions, boxplots, histograms, tiles, text labels, many, many . representation defined geometry using data mapped aesthetic features (position, colour) geometry. need least one geometry create plot, can combine two geometries (lines points example) make complex plots.","code":""},{"path":"grammar.html","id":"facets","chapter":"7 Grammar of Graphics","heading":"7.7 Facets","text":"simple plot one facet – think standard x-y plots. can also separate data one plot many facets, using variable dataset define data appear facets. Depending data might arrange facets grid common x y axes facets. might arrange line different scales facet. Facets can make complex plots! skip facets discussion making plots next lesson, come back later.","code":""},{"path":"grammar.html","id":"statistics","chapter":"7 Grammar of Graphics","heading":"7.8 Statistics","text":"Sometimes want use variable feature – position y axis – , want perform computations. Perhaps want plot mean compute standard error mean. maybe want count number occurrences level categorical variable. two ways go . can compute derived variables “hand” – writing R code . can use stat features plot compute . routine plots like bar graphs, histograms, boxplots, generally easiest let ggplot calculations . less commonly used plot types, custom plots invent, want calculations . ’ll talk summarizing data future lesson.","code":""},{"path":"grammar.html","id":"coordinates","chapter":"7 Grammar of Graphics","heading":"7.9 Coordinates","text":"Usually plot data familiar (Cartesian) x-y axes. can use polar coordinates. project 3d model onto plane. draw lots shapes like trees maps. Cartesian coordinates familiar usually pass choice without even thinking.","code":""},{"path":"grammar.html","id":"themes","chapter":"7 Grammar of Graphics","heading":"7.10 Themes","text":"features visualization combined idea theme. includes colour schemes, line thicknesses, tick marks drawn, font type size, legends placed. look features – fact ’ve already seen simple example changing font size – throughout course collect bunch examples end.","code":""},{"path":"grammar.html","id":"extensions","chapter":"7 Grammar of Graphics","heading":"7.11 Extensions","text":"several kinds extensions basic ggplot plots. Many R packages define new geometries, colour palettes, map projections, themes. packages define amazing new ways transforming ggplots, example create animations three dimesnional rendering using raytracing.","code":""},{"path":"grammar.html","id":"summary","chapter":"7 Grammar of Graphics","heading":"7.12 Summary","text":"’s basic idea behind grammar graphics approach plotting. takes bit getting used , seems like lot work first get started, ’ll see flexibility structure grammar provides allows think creatively build huge number visualizations elements.","code":""},{"path":"grammar.html","id":"further-reading-3","chapter":"7 Grammar of Graphics","heading":"7.13 Further reading","text":"chapter ggplot concepts data science courseA ggplot cheatsheet summarizing huge amount information two pagesUnderstanding ggplotThe R graph galleryWickham’s article grammar graphics","code":""},{"path":"ggplot.html","id":"ggplot","chapter":"8 Using the grammar of graphics","heading":"8 Using the grammar of graphics","text":"","code":""},{"path":"ggplot.html","id":"goals-8","chapter":"8 Using the grammar of graphics","heading":"8.1 Goals","text":"lesson demonstrate use R ggplot2 make visualizations using ideas previous lesson. emphasis mechanics making visualizations. time integrate ideas features visualizations work best convey idea introduced start course.task lesson practice skills generating series graphs using different geometries aesthetic mappings.","code":""},{"path":"ggplot.html","id":"introduction-6","chapter":"8 Using the grammar of graphics","heading":"8.2 Introduction","text":"end lesson understand make many different plots using ggplot. mental model developed previous lesson connect directly R commands lesson.Incidentally, Hadley Wickham, originally developed ggplot2 New Zealand one consequence allows “British” “American” spellings words. can use color colour. future lesson summarize data ’ll see can write summarize summarise. switch back forth, don’t get confused. OK.","code":""},{"path":"ggplot.html","id":"data-1","chapter":"8 Using the grammar of graphics","heading":"8.3 Data","text":"use diamonds dataset examples lesson. always, use str View take look data famiiarize variables number rows data begin make plot.large dataset, 50,000 rows. 7 quantiative variables three categorical variables. Read help page dataset learn .","code":"\nstr(diamonds)## tibble [53,940 × 10] (S3: tbl_df/tbl/data.frame)\n##  $ carat  : num [1:53940] 0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n##  $ cut    : Ord.factor w/ 5 levels \"Fair\"<\"Good\"<..: 5 4 2 4 2 3 3 3 1 3 ...\n##  $ color  : Ord.factor w/ 7 levels \"D\"<\"E\"<\"F\"<\"G\"<..: 2 2 2 6 7 7 6 5 2 5 ...\n##  $ clarity: Ord.factor w/ 8 levels \"I1\"<\"SI2\"<\"SI1\"<..: 2 3 5 4 2 6 7 3 4 5 ...\n##  $ depth  : num [1:53940] 61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n##  $ table  : num [1:53940] 55 61 65 58 58 57 57 55 61 61 ...\n##  $ price  : int [1:53940] 326 326 327 334 335 336 336 337 337 338 ...\n##  $ x      : num [1:53940] 3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n##  $ y      : num [1:53940] 3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n##  $ z      : num [1:53940] 2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ..."},{"path":"ggplot.html","id":"aesthetic-mappings-and-geometries","chapter":"8 Using the grammar of graphics","heading":"8.4 Aesthetic mappings and geometries","text":"usually pick aesthetic mappings ’ve thought geometry want use. goal lesson demonstrate basics: histogram, box plot, scatter plot. survey common geometries, consult [Wilke, chapter 5]](https://clauswilke.com/dataviz/directory--visualizations.html). Even three kinds give us lots room show power grammar graphics.","code":""},{"path":"ggplot.html","id":"histogram","chapter":"8 Using the grammar of graphics","heading":"8.5 Histogram","text":"Let’s draw histogram price diamonds dataset. map price x axis request histogram geometry.Maybe one categorical features help us see features data. Let’s break bars cut using colour.skewed distribution positive numbers, log transform can sometimes help reveal patterns. Let’s change scale see works.Stacked bar graphs like interesting, can hard read. distribution cuts? Premium Good cuts expensive diamonds? Let’s try different ways split histogram.can modify geometry modifing histogram geom. ’s helpful fewer bars histogram, ’ve set number bars 10 using bins=10.peak Ideal definitely lower price peak Premium Good.","code":"\ndiamonds %>% ggplot(aes(x=price)) + geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\ndiamonds %>% ggplot(aes(x=price, fill=cut)) + geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\ndiamonds %>% ggplot(aes(x=price, fill=cut)) + geom_histogram() +\n  scale_x_log10()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\ndiamonds %>% ggplot(aes(x=price, fill=cut)) + scale_x_log10() + geom_histogram(bins = 10, position=\"dodge\")"},{"path":"ggplot.html","id":"box-plots","chapter":"8 Using the grammar of graphics","heading":"8.6 Box plots","text":"Box plots useful showing distributions . can draw box plot one quantitative variable, quantitative variable categorical variable. can use either x y quantitative variable. plot many colours hard read, can interpret lots side--side boxplots. ’ll switch clarity categorical variable.\nwilling read complex plot, can fill boxes using cut. (Try color= instead fill= compare two ways using colour.) figure probably complicated show someone else, might useful exploratory plot see lot information small space. Think – summary 50,000 prices across two cateogorical variables 5 x 8 = 40 different combinations!third geom, use geom_point make scatter plot. Just knowing can probably create plot modifying code . code , changed geom_boxplot geom_point, changed fill color changed clarity carat second quantative variable y axis.’s many points scatter plot! tricks can use, like making points smaller making partly transparent – don’t really help much data.","code":"\ndiamonds %>% ggplot(aes(x = price, y = clarity)) + geom_boxplot()\ndiamonds %>% ggplot(aes(x = price, y = clarity)) + geom_boxplot() + scale_x_log10()\ndiamonds %>% ggplot(aes(x = price, y = clarity, fill= cut)) + geom_boxplot() + scale_x_log10()\ndiamonds %>% ggplot(aes(x = price, y = carat, color= cut)) + geom_point() + scale_x_log10()\ndiamonds %>% ggplot(aes(x = price, y = carat, color= cut)) +\n  geom_point(alpha = 0.5, size = 0.2) + \n  scale_x_log10() "},{"path":"ggplot.html","id":"two-dimensional-histogram","chapter":"8 Using the grammar of graphics","heading":"8.7 Two dimensional histogram","text":"? Let’s create histogram two quantitative variables, show height bar using color.Accurate quantitative assessment hard make (basically impossible) colour brightness, can see price carat combinations diamonds. give using colour clarity. ’ll return data talk facets future lesson see can add one categorical variable.can little better contour plot instead colours. can even add color=cut back like. Try geom_density_2d_filled interesting variant.","code":"\ndiamonds %>% ggplot(aes(x = price, y = carat)) + geom_bin2d() + scale_x_log10()\ndiamonds %>% ggplot(aes(x = price, y = carat)) + geom_density_2d() + scale_x_log10()"},{"path":"ggplot.html","id":"statistics-1","chapter":"8 Using the grammar of graphics","heading":"8.7.1 Statistics","text":"said addition connecting variables aesthetic features, use statistical transformations create new derived variables plots. let’s try !Instead plotting point diamond dataset, let’s compute averages standard errors diamonds group clarity.Now adding colour cut doesn’t make plot complicated.stat_ functions directly linked geom_ functions, like stat_summary stat_unique handy .","code":"\ndiamonds %>% ggplot(aes(x = price, y = clarity)) +  stat_summary(fun.data = \"mean_se\") + scale_x_log10()\ndiamonds %>% ggplot(aes(x = price, y = clarity, color=cut)) +  stat_summary(fun.data = \"mean_se\") + scale_x_log10()"},{"path":"ggplot.html","id":"scales","chapter":"8 Using the grammar of graphics","heading":"8.8 Scales","text":"’ve seen scales can used transform x axis, lot can .First, can set limits axis anywhere want, highlight values expand range. (Maybe specific price range mind data analysis.)example using power ggplot accidentally shooting (data) foot . data outside x range discarded mean standard error computed! got warning, hard understand! dangerous summary statistics. (Another reason learn summarize data future lesson.)’s perfectly safe raw unsummarized data. still get warning, dots shown untransformed, don’t need wonder axis limits set transforming data.yellow used didn’t won’t look good printed report, let’s change range colours.\nviridis colour scale supposed colour-blind friendly translate well printed gray scale paper. ’s range colours selected two extremes. Experiment different values begin end 0 1.","code":"\ndiamonds %>% ggplot(aes(x = price, y = clarity, color=cut)) +  stat_summary(fun.data = \"mean_se\") + scale_x_log10() +\n  xlim(2000,4000)## Scale for 'x' is already present. Adding another scale for 'x', which will\n## replace the existing scale.## Warning: Removed 43582 rows containing non-finite values (stat_summary).\ndiamonds %>% ggplot(aes(x = price, y = carat, color=cut)) +  geom_point(size=0.1) + scale_x_log10() +\n  xlim(2000,4000) + ylim(0,1.7)\ndiamonds %>% ggplot(aes(x=price, fill=cut)) + scale_x_log10() + geom_histogram(bins = 10, position=\"dodge\") +\n  scale_fill_viridis_d(begin = 0.0, end = 0.8)"},{"path":"ggplot.html","id":"annotations","chapter":"8 Using the grammar of graphics","heading":"8.9 Annotations","text":"important annotations labels axes, guides colours shapes, title, subtitle, caption. ’s example showing change one using labs (labels) function.Another kind annotation adds text figure. ’s called annotation instead geom annotation custom thing add doesn’t come data. Sometimes corporate branding graphic. cartoon reminding reader data . ’ll add text message.can add annotations shape points arrows .better way annotate create data frame x y locations label. ’ll find average price carat combination cut clarity, use colour cut add text label clarity. ’ll learn summarizing data later, feel free skip calculation focus plotting now.’s problems graph! labels coloured . color scale “cut” looks strange. text labels top points.colour labels comes inheritance aesthetics. ’s easy fix. map clarity colour geom_point.simple change makes huge difference.can use geom_text_repel ggrepel package fix placement labels. ’ll shrink size text bit .many labels plot ’s good final visualization, demonstrates add labels make plot might useful explore dataset.","code":"\ndiamonds %>% ggplot(aes(x=price, fill=cut)) + scale_x_log10() + geom_histogram(bins = 10, position=\"dodge\") +\n  scale_fill_viridis_d(begin = 0.0, end = 0.8) +\n  labs(x = \"Price ($, log scale)\",\n       y = \"Number of diamonds\",\n       fill = \"Cut\",\n       title = \"Diamond price varies with cut quality\",\n       subtitle = \"I don't often use subtitles, but you can\",\n       caption = \"For the source of the data or other note\")\ndiamonds %>% ggplot(aes(x=price, fill=cut)) + scale_x_log10() + geom_histogram(bins = 10, position=\"dodge\") +\n  annotate(geom=\"text\", x = 1300, y = 4500, label = \"Compare the peaks for\\nIdeal and Good.\",\n           hjust = 0, vjust = 0.5, size = 5)\ns <- diamonds %>% group_by(cut, clarity) %>%\n  summarize(price = mean(price), carat = mean(carat))## `summarise()` regrouping output by 'cut' (override with `.groups` argument)\ns %>% ggplot(aes(x= price, y = carat, color = cut)) + scale_x_log10() +\n  geom_point() +\n  geom_text(aes(label = clarity ))\ns %>% ggplot(aes(x= price, y = carat)) + scale_x_log10() +\n  geom_point(aes(color=cut)) +\n  geom_text(aes(label = clarity ))\nlibrary(ggrepel)\ns %>% ggplot(aes(x= price, y = carat)) + scale_x_log10() +\n  geom_point(aes(color=cut)) +\n  geom_text_repel(aes(label = clarity ), size = 3)"},{"path":"ggplot.html","id":"theme","chapter":"8 Using the grammar of graphics","heading":"8.10 Theme","text":"theme allows set text font size labels numbers scale, line thicknesses axes ticks, position guides many features. can also use predefined themes created others. examples find useful introduction topic.favourite gets rid gray background.Second favourite makes text larger elements.","code":"\ns %>% ggplot(aes(x= price, y = carat, color = cut)) + scale_x_log10() +\n  geom_point() +\n  theme_bw()\ns %>% ggplot(aes(x= price, y = carat, color = cut)) + scale_x_log10() +\n  geom_point() + theme_bw() +\n  theme(text = element_text(size=20))\ns %>% ggplot(aes(x= price, y = carat, color = cut)) + scale_x_log10() +\n  geom_point() + theme_bw() +\n  theme(text = element_text(size=20),\n        legend.position = c(0.15,0.75))"},{"path":"ggplot.html","id":"further-reading-4","chapter":"8 Using the grammar of graphics","heading":"8.11 Further reading","text":"Healy Chapter 3 making plotsA chapter ggplot concepts data science courseA ggplot cheatsheet summarizing huge amount information two pagesA guide themes ggplot2 bookA whole book ggplot2","code":""},{"path":"summarizing-data.html","id":"summarizing-data","chapter":"9 Summarizing data","heading":"9 Summarizing data","text":"tidyverse packages provide powerful tools transforming summarizing data. lesson explore methods use frequently, includingmutate defining new variables based existing variables,filter including excluding observations (rows) according values one variables,group_by dividing data table set groups according one variables, summarizing data, andsummarise reducing table single row single row value grouped variable.tools mirror methods used database software querying summarizing data, widely used SQL data query language. correspondence close enough tools can used directly databases translating tidyverse code SQL dbplyr package. databases, often links two tables information combined using “joins”; R standard joins combining data two tables one.many data manipulation reduction tools learned, four functions foundation huge number calculations help understand, simplify, summarize communicate information dataset.work diamonds dataset; ’s fairly large combination quantitative categorical data can used illustrate methods. R4DS chapter 5 many similar demostrations large database flight data. practice calculations data set choice (ideas ).","code":""},{"path":"summarizing-data.html","id":"creating-new-variables-with-mutate","chapter":"9 Summarizing data","heading":"9.1 Creating new variables with mutate","text":"diamonds data dimensions (x, y, z) mass (carat) diamond. might interesting compare cuboid approximation diamond mass get quantitative measure different diamond box. start, ’ll create new variable called box defined product x, y, z. ’ll create ratio box_ratio quotient mass (carat) volume.function adds two new columns data table, computing values every row table. doesn’t change columns. can also modify existing column, example change units dollars thousands dollars carats grams, using name existing column left hand side equals sign.things note:use name column create modify left hand side equals sign/use = instead <- creating modifying columns. arrow used assign values new R objects environment (see Environment tab R studio); modifying columns data frame different notation appropriate.transformation shown modify diamonds object – creates new object, can store new R variable environment. often perform transformations simply purposes making table plot without ever storing result.","code":"\ndiamonds %>%\n  mutate(box = x*y*z,\n         box_ratio = carat / box) %>%\n  head()## # A tibble: 6 x 12\n##   carat cut    color clarity depth table price     x     y     z   box box_ratio\n##   <dbl> <ord>  <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl> <dbl>     <dbl>\n## 1 0.23  Ideal  E     SI2      61.5    55   326  3.95  3.98  2.43  38.2   0.00602\n## 2 0.21  Premi… E     SI1      59.8    61   326  3.89  3.84  2.31  34.5   0.00609\n## 3 0.23  Good   E     VS1      56.9    65   327  4.05  4.07  2.31  38.1   0.00604\n## 4 0.290 Premi… I     VS2      62.4    58   334  4.2   4.23  2.63  46.7   0.00621\n## 5 0.31  Good   J     SI2      63.3    58   335  4.34  4.35  2.75  51.9   0.00597\n## 6 0.24  Very … J     VVS2     62.8    57   336  3.94  3.96  2.48  38.7   0.00620"},{"path":"summarizing-data.html","id":"filtering-rows","chapter":"9 Summarizing data","heading":"9.2 Filtering rows","text":"Tbe diamonds data many rows (50,000). might interested just subset rows. use filter select rows keep table. (can specify rows remove use logical operator ! reverse logic keep rows.)example, 5 diamonds 4 carats:can combine filtering operations chaining together commas, pipes, using boolean logic (& ; | ). following three expressions thing.second example convenient abbreviation first, want third way? can use logical “” instead make different kinds selections. example, might want diamonds meet three different tests.logical expressions can challenging interpret, use care test carefully sure calculation think .","code":"\ndiamonds %>% \n  filter(carat > 4)## # A tibble: 5 x 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  4.01 Premium I     I1       61      61 15223  10.1 10.1   6.17\n## 2  4.01 Premium J     I1       62.5    62 15223  10.0  9.94  6.24\n## 3  4.13 Fair    H     I1       64.8    61 17329  10    9.85  6.43\n## 4  5.01 Fair    J     I1       65.5    59 18018  10.7 10.5   6.98\n## 5  4.5  Fair    J     I1       65.8    58 18531  10.2 10.2   6.72\ndiamonds %>% filter(color == \"J\") %>% filter(cut == \"Premium\") %>% filter(carat > 3.0)## # A tibble: 4 x 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  4.01 Premium J     I1       62.5    62 15223 10.0   9.94  6.24\n## 2  3.51 Premium J     VS2      62.5    59 18701  9.66  9.63  6.03\n## 3  3.01 Premium J     SI2      60.7    59 18710  9.35  9.22  5.64\n## 4  3.01 Premium J     SI2      59.7    58 18710  9.41  9.32  5.59\ndiamonds %>% filter(color == \"J\", cut == \"Premium\", carat > 3.0)## # A tibble: 4 x 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  4.01 Premium J     I1       62.5    62 15223 10.0   9.94  6.24\n## 2  3.51 Premium J     VS2      62.5    59 18701  9.66  9.63  6.03\n## 3  3.01 Premium J     SI2      60.7    59 18710  9.35  9.22  5.64\n## 4  3.01 Premium J     SI2      59.7    58 18710  9.41  9.32  5.59\ndiamonds %>% filter(color == \"J\" & cut == \"Premium\" & carat > 3.0)## # A tibble: 4 x 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  4.01 Premium J     I1       62.5    62 15223 10.0   9.94  6.24\n## 2  3.51 Premium J     VS2      62.5    59 18701  9.66  9.63  6.03\n## 3  3.01 Premium J     SI2      60.7    59 18710  9.35  9.22  5.64\n## 4  3.01 Premium J     SI2      59.7    58 18710  9.41  9.32  5.59\ndiamonds %>% filter((color == \"J\" | cut == \"Premium\") & carat > 4.0)## # A tibble: 4 x 10\n##   carat cut     color clarity depth table price     x     y     z\n##   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  4.01 Premium I     I1       61      61 15223  10.1 10.1   6.17\n## 2  4.01 Premium J     I1       62.5    62 15223  10.0  9.94  6.24\n## 3  5.01 Fair    J     I1       65.5    59 18018  10.7 10.5   6.98\n## 4  4.5  Fair    J     I1       65.8    58 18531  10.2 10.2   6.72"},{"path":"summarizing-data.html","id":"getting-just-some-rows-and-columns","chapter":"9 Summarizing data","heading":"9.3 Getting just some rows and columns","text":"tables showed 10 columns. Sometimes want columns. Use select extract reorder columns:’ll notice ’ve used head get just first 6 rows data table. can also use tail get last rows. can modify number rows (see help page head tail.)general method extracting rows number slice.Sometimes large dataset want look random subset rows. Use variants slice_ task. (Try : get different rows time.)can use arrange sort data number columns slicing displaying data.’ll notice levels categorical variables (cut, color, clarity). Suppose want see combinations exist? Use select pick rows, distinct show rows different . (276 combinations, ’m showing top 5, sorting.)","code":"\ndiamonds %>% select(price, cut, color, clarity, carat) %>% head()## # A tibble: 6 x 5\n##   price cut       color clarity carat\n##   <int> <ord>     <ord> <ord>   <dbl>\n## 1   326 Ideal     E     SI2     0.23 \n## 2   326 Premium   E     SI1     0.21 \n## 3   327 Good      E     VS1     0.23 \n## 4   334 Premium   I     VS2     0.290\n## 5   335 Good      J     SI2     0.31 \n## 6   336 Very Good J     VVS2    0.24\ndiamonds %>% slice(c(1, 100, 200, 1000, 5000, 1000))## # A tibble: 6 x 10\n##   carat cut       color clarity depth table price     x     y     z\n##   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n## 2  0.8  Premium   H     SI1      61.5    58  2760  5.97  5.93  3.66\n## 3  0.72 Premium   F     SI1      61.8    61  2777  5.82  5.71  3.56\n## 4  1.12 Premium   J     SI2      60.6    59  2898  6.68  6.61  4.03\n## 5  1.05 Very Good I     SI2      62.3    59  3742  6.42  6.46  4.01\n## 6  1.12 Premium   J     SI2      60.6    59  2898  6.68  6.61  4.03\ndiamonds %>% slice_sample(n = 5)## # A tibble: 5 x 10\n##   carat cut       color clarity depth table price     x     y     z\n##   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n## 1  0.4  Very Good G     SI1      61.9    55   682  4.71  4.75  2.93\n## 2  0.31 Ideal     F     IF       62      56   979  4.32  4.36  2.69\n## 3  0.31 Very Good D     SI1      62.9    57   571  4.27  4.32  2.7 \n## 4  0.92 Ideal     H     SI1      60.5    57  4325  6.27  6.32  3.81\n## 5  0.72 Premium   G     SI1      60.6    62  2246  5.81  5.77  3.51\ndiamonds %>% arrange(cut, -color, -carat) %>% slice_head(n = 10) %>% select(carat, cut, color, price)## Warning: Problem with `mutate()` input `^^--arrange_quosure_2`.\n## ℹ '-' is not meaningful for ordered factors\n## ℹ Input `^^--arrange_quosure_2` is `-color`.## Warning in Ops.ordered(color): '-' is not meaningful for ordered factors## # A tibble: 10 x 4\n##    carat cut   color price\n##    <dbl> <ord> <ord> <int>\n##  1  5.01 Fair  J     18018\n##  2  4.5  Fair  J     18531\n##  3  4.13 Fair  H     17329\n##  4  3.65 Fair  H     11668\n##  5  3.4  Fair  D     15964\n##  6  3.11 Fair  J      9823\n##  7  3.02 Fair  I     10577\n##  8  3.01 Fair  H     10761\n##  9  3.01 Fair  I     18242\n## 10  3.01 Fair  I     18242\ndiamonds %>% select(cut, clarity, color) %>% distinct() %>% arrange(color, clarity, cut) %>% head(5)## # A tibble: 5 x 3\n##   cut       clarity color\n##   <ord>     <ord>   <ord>\n## 1 Fair      I1      D    \n## 2 Good      I1      D    \n## 3 Very Good I1      D    \n## 4 Premium   I1      D    \n## 5 Ideal     I1      D"},{"path":"summarizing-data.html","id":"summarizing-data-tables","chapter":"9 Summarizing data","heading":"9.4 Summarizing data tables","text":"filtering transformation functions powerful encourage really useful way probing complext dataset. summarize (summarise) provides way apply function one variables across rows colletions rows. use effectively want think functions operate set numbers return just single one, mean, median, max, min, sd, simplest n counts number rows.original data gone, replaced four functions applied data corresponding column. name new column appears left side = calculation right. way wrote mutate function, instead creating new variable computing value row, get one value computed using rows.Rows can grouped get summaries level grouped varible. Let’s group cut otherwise repeat calculation:Now get 5 rows.can group many variables like; result one row combination levels grouped variable. (can even group quantitative varibles, usually don’t want !)Grouping doen’t calculations, just makes notation data frame grouping used subsequent calculations pay attention grouping. summarise data, one grouping variable removed (last one) result still grouped remaining variables. (See notation: Groups: cut, clarity result .)summarise optional argument .groups say grouping want retain calculation done. drop_last default, described . Probably next frequently used choice drop ungroups rows. see diference, ’ll add another step, count(), equivalent summarise(n=n()) counts rows.Using drop_last get number rows level cut clarity (usually 7 levels color: D, E, F, G, H, , J) 40 combinations cut clarity (shown .)Change options .groups = \"drop\" get different result – just number combinations cut, clarity, color (276 maximum 5 x 8 x 7 = 280 possible):can also use ungroup() following summarise discard grouping don’t want use .groups argument.","code":"\ndiamonds %>% summarise(n_rows = n(), \n                       mean_price = mean(price),\n                       median_price = median(price),\n                       min_carat = min(carat))## # A tibble: 1 x 4\n##   n_rows mean_price median_price min_carat\n##    <int>      <dbl>        <dbl>     <dbl>\n## 1  53940      3933.         2401       0.2\ndiamonds %>% group_by(cut) %>%\n  summarise(n_rows = n(), \n                       mean_price = mean(price),\n                       median_price = median(price),\n                       min_carat = min(carat))## # A tibble: 5 x 5\n##   cut       n_rows mean_price median_price min_carat\n##   <ord>      <int>      <dbl>        <dbl>     <dbl>\n## 1 Fair        1610      4359.        3282       0.22\n## 2 Good        4906      3929.        3050.      0.23\n## 3 Very Good  12082      3982.        2648       0.2 \n## 4 Premium    13791      4584.        3185       0.2 \n## 5 Ideal      21551      3458.        1810       0.2\ndiamonds %>% group_by(cut, clarity, color) %>%\n  summarise(n_rows = n(), \n                       mean_price = mean(price),\n                       median_price = median(price),\n                       min_carat = min(carat)) %>%\n  head(5)## # A tibble: 5 x 7\n## # Groups:   cut, clarity [1]\n##   cut   clarity color n_rows mean_price median_price min_carat\n##   <ord> <ord>   <ord>  <int>      <dbl>        <dbl>     <dbl>\n## 1 Fair  I1      D          4      7383         5538.      0.91\n## 2 Fair  I1      E          9      2095.        2036       0.7 \n## 3 Fair  I1      F         35      2544.        1570       0.34\n## 4 Fair  I1      G         53      3187.        1954       0.5 \n## 5 Fair  I1      H         52      4213.        3340.      0.7\ndiamonds %>% group_by(cut, clarity, color) %>%\n  summarise(n_rows = n(), \n                       mean_price = mean(price),\n                       median_price = median(price),\n                       min_carat = min(carat),\n             .groups=\"drop_last\") %>%\n  count() %>%\n  head()## # A tibble: 6 x 3\n## # Groups:   cut, clarity [6]\n##   cut   clarity     n\n##   <ord> <ord>   <int>\n## 1 Fair  I1          7\n## 2 Fair  SI2         7\n## 3 Fair  SI1         7\n## 4 Fair  VS2         7\n## 5 Fair  VS1         7\n## 6 Fair  VVS2        7\ndiamonds %>% group_by(cut, clarity, color) %>%\n  summarise(n_rows = n(), \n                       mean_price = mean(price),\n                       median_price = median(price),\n                       min_carat = min(carat),\n            .groups=\"drop\") %>%\n  count()## # A tibble: 1 x 1\n##       n\n##   <int>\n## 1   276"},{"path":"summarizing-data.html","id":"example","chapter":"9 Summarizing data","heading":"9.5 Example","text":"methods can combined together produce elaborate queries. example, let’s use mutate compute price per carat ratio, find median ratio diamonds grouped cut, color, clarity. Also report sample size used median. Finally extract top 2 ratios cut type (using grouped slice) arrange resulting table largest smallest ratio.calculation first time, forgot first arrange. needed grouped slice_head? (Remove see result changes. Try removing slice_head see full results.) second arrange needed?top 4 price per carat categories best colour (D) clarity (), cut seems less important determining ratio. One top 10 categories lot diamonds (763), groups diamonds relative size whole dataset (50,000).","code":"\ndiamonds %>%\n  mutate(price_per_carat = price / carat) %>%\n  group_by(color, clarity, cut) %>%\n  summarise(median_price_per_carat = median(price_per_carat), \n            n = n(),\n            .groups = \"drop\") %>%\n  arrange(-median_price_per_carat) %>%\n  group_by(cut) %>%\n  slice_head(n=2) %>%\n  arrange(-median_price_per_carat)## # A tibble: 10 x 5\n## # Groups:   cut [5]\n##    color clarity cut       median_price_per_carat     n\n##    <ord> <ord>   <ord>                      <dbl> <int>\n##  1 D     IF      Good                      14932.     9\n##  2 D     IF      Premium                   11057.    10\n##  3 D     IF      Very Good                 10202.    23\n##  4 D     IF      Ideal                      7162.    28\n##  5 J     VVS1    Premium                    5336.    24\n##  6 J     VVS2    Very Good                  5227.    29\n##  7 H     IF      Good                       5100.     4\n##  8 E     VVS1    Fair                       4921.     3\n##  9 G     VS2     Fair                       4838     45\n## 10 H     SI1     Ideal                      4469.   763"},{"path":"summarizing-data.html","id":"what-does-this-have-to-do-with-data-visualization","chapter":"9 Summarizing data","heading":"9.6 What does this have to do with data visualization?","text":"tools useful exploring data; helping understand structure data. help make better visualizations. particular, humble n function counts rows used frequently summarize mean median let know observations many good plot.Summarizing data, example computing means standard errors can done part visualization process using stat_summary, can easier know exactly calculating compute summary using methods lesson plot results.Tables can useful way visualize data grouped summaries often easiest way make table describe data.","code":""},{"path":"summarizing-data.html","id":"further-reading-5","chapter":"9 Summarizing data","heading":"9.7 Further reading","text":"R4DS. Chapter 5 Data transformations","code":""},{"path":"facets.html","id":"facets","chapter":"10 Facetted graphs","heading":"10 Facetted graphs","text":"plot much data, want emphasize particular comparison across categories numerical values, often good idea split graph several subplots. Like method, can overdone, example producing complex array many plots distract confuse reader. Done well, multiple plots let patterns jump page.Making sequence array similar plots goes variety names: small multiples, lattice, facets. ’ll call facets ’s name ggplot uses.Facetted plots often useful datasets one categorical variables lots observations. ’ll use diamonds dataset , ’ve seen, variation across . Let’s start using glimpse see ’s .consequence years relentless advertising, may aware four widely reported characteristics diamonds influence price: cut, colour, clarity, carats. Let’s make plot price vs carets (mass) showing data. Since many points, make point smaller.want display many levels categorical variable across many facets, facet_wrap function available. ’ll just one colour using filter select . facet_wrap function requires give “formula” facets constructed. write ~ clarity meaning levels categorical variable clarity used facets. One facet drawn value variable points value clarity shown corresponding facet.Notice x y scales facet. single colour scale used cut facet well. can see similar non-linear relationship price carat panel. price higher particular size (carat) panels near bottom compared panels near top. Cut makes compartively small difference price.","code":"\nglimpse(diamonds)## Rows: 53,940\n## Columns: 10\n## $ carat   <dbl> 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0…\n## $ cut     <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ve…\n## $ color   <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I…\n## $ clarity <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1,…\n## $ depth   <dbl> 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 6…\n## $ table   <dbl> 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 5…\n## $ price   <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 3…\n## $ x       <dbl> 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4…\n## $ y       <dbl> 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4…\n## $ z       <dbl> 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2…\np1 <- diamonds %>% ggplot(aes(x=carat, y=price, color=cut)) + geom_point(size=0.4)\np1\ndiamonds %>% \n  filter(color %in% c(\"F\")) %>%\n  ggplot(aes(x=carat, y=price, color=cut)) + \n  geom_point(size = 0.4) +\n  facet_wrap( ~ clarity) "},{"path":"facets.html","id":"facets-indexed-by-two-variables","chapter":"10 Facetted graphs","heading":"10.1 Facets indexed by two variables","text":"want look effect two categorical variables across different facets, can arrange grid. use formula, now put variables “y” axis facets left side ~ variables determining x axis facets right.plots facets really small. Let’s pick just colours clarity values make plot easier read.","code":"\np1 + facet_grid(color ~ clarity)\ndiamonds %>% \n  filter(color %in% c(\"D\", \"F\", \"H\", \"J\"), \n         clarity %in% c(\"SI1\", \"VS1\", \"IF\")) %>%\n  ggplot(aes(x=carat, y=price, color=cut)) + \n  geom_point(size=0.5) +\n  facet_grid(color ~ clarity) + \n  scale_colour_viridis_d(begin=0, end =0.8) "},{"path":"facets.html","id":"compositing","chapter":"10 Facetted graphs","heading":"10.2 Compositing","text":"want combine graphs together grid layout, graphs don’t share axes even data, may easier draw graphs separately combine together layout patchwork package. package simple use quite powerful, enabling complex layouts, labelling subplots codes aid identification, combining guides colours shapes across panels. documentation excellent.example showing two plots different views gapminder data. ’s usually best create plots one time, assign name R environment using <- name plot, put together using + patchwork package.can make complex layouts, collect legends multiple panels together, label panels patchwork. Read documentation want learn .","code":"\nlibrary(patchwork)\np1 <- gapminder %>% \n  filter(year == max(year)) %>% count(continent) %>% \n  ggplot(aes(x=continent, y = n, fill=continent)) +\n  geom_col(show.legend = FALSE) +\n  labs(y = \"Number of countries\") \np2 <- gapminder %>%\n  ggplot(aes(x= year, y = lifeExp, color = continent)) + \n  geom_jitter(size = 0.5)\np1 + p2 "},{"path":"facets.html","id":"further-reading-6","chapter":"10 Facetted graphs","heading":"10.3 Further reading","text":"ggplot book longer tutorial using facets.R cookbook examples facetted plots, including instructions chaging way facets labelled.patchwork documentation can help many tasks.cowplot package package designed help many plotting tasks, including combining many figures one using plot_grid. “cow” stands Claus O Wilke, author one textbooks.","code":""},{"path":"reading-data.html","id":"reading-data","chapter":"11 Reading data","heading":"11 Reading data","text":"Data starting point visualization, data originate outside data analysis environment. process moving data “somewhere else” R environment can perform calculations make visualizations simply called “reading” data. apt name R must interpret data give often involves making decisions based assumptions, course R using pre-established conventions, cognitive model reading human use.data use course carefully organized easy read R, find data create data, almost certainly run challenges. lesson look common processes reading data, highlight problems can arise, identify strategies detecting correcting problems.ideal data file arranged perfect array number columns row. first row set variable names rest rows separate observation.","code":""},{"path":"reading-data.html","id":"text-files","chapter":"11 Reading data","heading":"11.1 Text files","text":"’s common distribute data one computer user another “text file”. means file can open text editor read without interpretation. format takes storage space binary file, example, number written like 14956.42 takes 8 characters, might take considerably less “binary” format. Text formats favoured largest files can checked humans need lot documentation.Text files commonly identified either written set comma separated values (csv) tab separated values (tsv). delimeters possible well. notable case arises way numbers written different cultures: use . decimal marker, others use ,. approximation \\(\\pi\\) might written 3.14159 Canada 3,14159 Spain. causes problems csv files gave rise csv2 file uses semicolons (;).biggest problem text files , rule, contain computer-readable information text column interpreted: number, text, date, time, filename, something else. source lot problems! good solutions use database (can challenges) binary format (problems ). Someday get fixed, done course!examples using functions readr readxl packages. three functions specialize variants read_delim.Notice R reports name column read data type. examples text (characters), numbers (double), dates (date), true/false (boolean logical) data.small files data can find : csv, csv2, tsv. Tab separated files come variety “extensions”: sometimestsv, tab, txt.created files using spreadsheet program, may often find editing data using program like Excel. can read file directly.look files text editor (textedit Macintosh, notepad Windows) spreadsheet program (Excel, LibreOffice). Edit files adding line data read data back R. best way practice making data reading R.lots functions used reading files R, including similarly named read.csv read.delim similar many important differences including data interpreted encoded columns named.Files can read folder computer (see [staying-organized] advice) directly website simply putting web address (URL) place filename. (read_excel may work data websites.)","code":"\nexample1a <- read_csv(\"static/test-data.csv\")## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   Name = col_character(),\n##   Birthdate = col_date(format = \"\"),\n##   Mass_kg = col_double(),\n##   Species = col_character(),\n##   Friendly = col_logical()\n## )\nexample1b <- read_csv2(\"static/test-data2.csv\")## ℹ Using ',' as decimal and '.' as grouping mark. Use `read_delim()` for more control.\n## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   Name = col_character(),\n##   Birthdate = col_date(format = \"\"),\n##   Mass_kg = col_double(),\n##   Species = col_character(),\n##   Friendly = col_logical()\n## )\nexample2 <- read_tsv(\"static/test-data.txt\") # A tab character is written as \\t## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   Name = col_character(),\n##   Birthdate = col_date(format = \"\"),\n##   Mass_kg = col_double(),\n##   Species = col_character(),\n##   Friendly = col_logical()\n## )\nexample3 <- read_excel(\"static/test-data.xlsx\")"},{"path":"reading-data.html","id":"checking-your-data","chapter":"11 Reading data","heading":"11.2 Checking your data","text":"go read data file, large number problems can arise. first task always sure data loaded R think . Check many features can: number columns, names columns, number rows, type data column, extence amount missing data, levels categorical variables.example small can just look whole table, ’ll practice using functions use data read.Table 11.1: Data summaryVariable type: characterVariable type: DateVariable type: logicalVariable type: numeric","code":"\nskim(example1a)"},{"path":"reading-data.html","id":"problems-that-arise","chapter":"11 Reading data","heading":"11.3 Problems that arise","text":"problems arise can try fix .","code":""},{"path":"reading-data.html","id":"missing-header-row","chapter":"11 Reading data","heading":"11.3.1 Missing header row","text":"Sometimes file come header row – just data file indication call variable. can tell read_delim add headers (col_names=FALSE) can provide list names (col_names=c(\"Name\", \"Birthdate\", \"Mass_kg\", \"Species\", \"Friendly\"))).","code":""},{"path":"reading-data.html","id":"extra-header-rows","chapter":"11 Reading data","heading":"11.3.2 Extra header rows","text":"Sometimes lots extra data file header row data. typically metadata – collected data, references help interpret data, etc. valuable information, best stored separate file don’t complicate process reading file R. number lines can skipped using skip = number.Another version problem arises file second header row first row variable names. row might used describe units variable. ’s best way skip row? two okay options: skip headers add variable names hand create copy file delete extra row. second method creates extra steps must repeated file updated; first need repeated number order columns changes.","code":""},{"path":"reading-data.html","id":"strange-names","chapter":"11 Reading data","heading":"11.3.3 Strange names","text":"Sometimes R difficulty reading text header row. Unusual symbols (µ, Å, commas variable name, spaces variable name) can cause trouble. read_delim clean . clean_names function janitor package useful simplifying names.’s best stick simple set conventions naming variables. example, lower case, underscores instead spaces, units end, naming conventions make names easier remember, easier type, less prone errors strange problems reading writing.","code":""},{"path":"reading-data.html","id":"bad-data-formatting","chapter":"11 Reading data","heading":"11.3.4 Bad data formatting","text":"common data formatting problem dataset created human typing data spreadsheet bad data formatting. problems can challenging find.Suppose one column (e.g., Mass_kg) contains numbers. row 500 , someone didn’t data mass wrote “-” missing data. perhaps put commas number pet elephant: 1,150.4. entered whimsical “three” instead number 3. cause R think column actually text numbers . makes numbers text makes quantitative data analysis impossible. quick fix use hablar pacakge convert variable back number: convert(example1, num(Mass_kg)). bad data turned missing data (NA) warning message displayed.error occurs row 1000 (see ) problem manifest differently!","code":""},{"path":"reading-data.html","id":"dates-and-times","chapter":"11 Reading data","heading":"11.3.5 Dates and times","text":"Dates times notoriously difficult.Ideally dates written standard format, ISO 8601 time zone information included irrelevant times. , read_delim able recognize format.good chance date particular written strange way, example 2 digit year, m/d/y d/m/y format. package lubridate can help converting text dates times many formats.time day information throughout year, need know daylight savings time used jurisdiction. complication leads many people use UTC time.data spanning February-March one years, may need decide leap day. ’s data analysis problem, reading day problem. lubridate functions yday decimal_date helpful.","code":""},{"path":"reading-data.html","id":"missing-data","chapter":"11 Reading data","heading":"11.3.6 Missing data","text":"notion data missing, rather just 0 special value important concept data analysis. Missing data used observation variable made.R uses NA represent missing data, text, dates, factors, numbers. “NA” written text file interpreted piece text, missing data. Generally leaving blank data file way indicate data missing. know missing data file, confirm identified correctly R. sure, check presence NAs data R go back data file see interpretation correct.ways check NAs file using function naniar package:old files (data old scientists) may find missing data encoded “impossible” data, example negative value mass. Traditionally value -999 similar used help stand looking data eye. Keep eye sorts problems validating data. can use na_if get rid values like .","code":"\nn_case_miss(example1a)## [1] 1\nn_miss(example1a)## [1] 1\ngg_miss_var(example1a)"},{"path":"reading-data.html","id":"bad-data-types","chapter":"11 Reading data","heading":"11.4 Bad data types","text":"read_delim looks first 1000 rows (whole file smaller ) ‘guess’ type variable. values can converted numbers error, R interprets data numeric; similar logic used dates logical values. first 1000 rows column missing, problem arises – ’s hard guess correctly. typo row number look like text (example 9OO instead 900 – using letter oh instead number zero), problem.can use col_types argument read_delim specify type column set guess_max number larger 1000 (Inf check rows.)","code":""},{"path":"reading-data.html","id":"categorical-variables-factors-or-text","chapter":"11 Reading data","heading":"11.5 Categorical variables: factors or text","text":"version 4, R usually convert variables just text factor (categorical) variables. Internally factor variable integer accompanying text label level factor variable. natural applications different levels factor used defining statistical model, completely inappropriate others. R used varied applications, pressure change grew immense. Now text usually treated text. ’s still good use str skim check factor variable aware can cause problems.Factors still really useful, statistical models, data visualizations. use factor variables define order alphabetical text labels graph.","code":""},{"path":"reading-data.html","id":"line-endings","chapter":"11 Reading data","heading":"11.6 Line endings","text":"text file, line text ended special character. names come decades old references typewriters printers: carriage return newline. old terms matter us? three major types computer operating systems (Windows, Linux, Macintosh) use different conventions ending lines! share files computers, differences can matter. Fortunately problems usually detected software corrected automatically, just makes confusing occur.know solve problems, don’t good, simple advice beginner. Suggestions welcome!","code":""},{"path":"reading-data.html","id":"text-encoding","chapter":"11 Reading data","heading":"11.7 Text encoding","text":"Another bit computer lore. data computer , naturally, stored bits (0s 1s) grouped clusters called bytes. quantities can interpreted text, needs conversion rule. Early system called ASCII developed, small number letters, numbers, punctuation symbols possible. Expanding computer text include world’s languages mathematical symbols required far ‘code points’ originally planned. lead explosion confusion, generally solved using unicode. Practical considerations led many encodings unicode UTF-8. Sometimes R able interpret text file reliably encoding explicitly identified file. help R ., lack good advice beginners .","code":""},{"path":"reading-data.html","id":"editing-data-tables","chapter":"11 Reading data","heading":"11.8 Editing data tables","text":"spreadsheet package (Excel, Numbers, LibreOffice Calc) often used enter edit data. Many programs try interpret modify data enter , causing havoc. Think autocorrect data. Excel particular notorious interpreting numbers dashes slashes dates, rewriting data. reason people prefer ways enter data. Two options arestand alone csv editors, TableTool Macintosh, CSVed many others Windows, andDataEditR package R","code":""},{"path":"reading-data.html","id":"further-reading-7","chapter":"11 Reading data","heading":"11.9 Further reading","text":"R data import/export manualTidy dataA proposal systematic variable naming conventions helps data validation well. See pointblank convo packages.Problems caused using Excel entering managing dataArguments fiscal austerity following 2008-09 economic crisis may partly supported spreadsheet errors.","code":""},{"path":"pivot.html","id":"pivot","chapter":"12 Reshaping data","heading":"12 Reshaping data","text":"many ways organize data array. key principles ’re following areeach row different observation, andeach column different variable.organization tends make long tables. example, gapminder data 1704 rows: 12 years data 142 countries. might want show median life expectancy continent (5 rows) three different years. make nice compact table, seems like data right shape .","code":""},{"path":"pivot.html","id":"pivot-wider","chapter":"12 Reshaping data","heading":"12.1 Pivot wider","text":"’ll start selecting three years (1987, 1997, 2007) computing median life expectancy continent year. (median continent may representative countries continent, ’ll worry time.)Now can see data ’s large, reshaping problem clearer. ’d like create table one row continent, one column year numbers grid median life expectancy. reshaping called pivot, specifically pivot make wider table, simply need specify current column use new names (year) current column use values new grid (median_life_expectancy).’ll give advanced peek table formatting skills next lesson make look bit better:","code":"\nt1 <- gapminder %>% \n  filter(year %in% c(1987, 1997, 2007)) %>%\n  group_by(continent, year) %>%\n  summarise(median_life_expectancy = median(lifeExp), .groups = \"drop\")\nt1## # A tibble: 15 x 3\n##    continent  year median_life_expectancy\n##    <fct>     <int>                  <dbl>\n##  1 Africa     1987                   51.6\n##  2 Africa     1997                   52.8\n##  3 Africa     2007                   52.9\n##  4 Americas   1987                   69.5\n##  5 Americas   1997                   72.1\n##  6 Americas   2007                   72.9\n##  7 Asia       1987                   66.3\n##  8 Asia       1997                   70.3\n##  9 Asia       2007                   72.4\n## 10 Europe     1987                   74.8\n## 11 Europe     1997                   76.1\n## 12 Europe     2007                   78.6\n## 13 Oceania    1987                   75.3\n## 14 Oceania    1997                   78.2\n## 15 Oceania    2007                   80.7\nt1 %>% pivot_wider(names_from = year, values_from = median_life_expectancy)## # A tibble: 5 x 4\n##   continent `1987` `1997` `2007`\n##   <fct>      <dbl>  <dbl>  <dbl>\n## 1 Africa      51.6   52.8   52.9\n## 2 Americas    69.5   72.1   72.9\n## 3 Asia        66.3   70.3   72.4\n## 4 Europe      74.8   76.1   78.6\n## 5 Oceania     75.3   78.2   80.7\nt2 <- t1 %>% pivot_wider(names_from = year, values_from = median_life_expectancy)\nt2 %>% rename(Continent = continent) %>%\n  arrange(-`2007`) %>%\n  kable(digits = 1) %>%\n  column_spec(1, bold=TRUE) %>%\n  kable_styling(full_width = FALSE)"},{"path":"pivot.html","id":"pivot-longer","chapter":"12 Reshaping data","heading":"12.2 Pivot longer","text":"Sometimes data provided “wide” format, like summary table . often convient data entry visual inspection. Suppose wanted use years table shown aesthetic plot, grouping variable summarise operation. can’t! might want pivot table make longer.pivot_longer undoes pivot_wider operation. need give set variables stacked name new variable filled column headings. ’s perform inverse pivot_wider shown . can describe sequence variables giving first one, colon (:), last one. Since variable names just numbers (standard column names data tables), need put backticks around . (plain expression 1987:2007 interpreted quite differently R. Try console. )important difference original table t1 recovered table t3: year variable t1 integer (numeric) year variable t3 character (text). matter want calculate new year variable put quantitative scale. hablar package makes really easy convert variables one type another:dataset tidyr package counts tuberculosis cases country year. wide format many columns (new…) describing diagnosis method, sex, age category. also lot missing data data shown wide format.Let’s pivot data make long.original data 7240 observations 60 columns (4 ’ve kept 56 pivoted). result new table who_long 6 columns (4+2) 56 x 7240 = 405,440 rows. Let’s see many count data missing.lot ! fact 81% data original matrix NA. let’s discard using na.omit filter(!.na(counts)). can also use values_drop_na = TRUE pivot_longer function call. make much smaller table. look smaller table, ’ll see counts equal 0. NA simply mean 0. (never use NA mean 0; mean missing. people .)","code":"\nt3 <- t2 %>% pivot_longer(cols = `1987`:`2007`, names_to = \"year\", values_to = \"median_life_expectancy\")\nt3## # A tibble: 15 x 3\n##    continent year  median_life_expectancy\n##    <fct>     <chr>                  <dbl>\n##  1 Africa    1987                    51.6\n##  2 Africa    1997                    52.8\n##  3 Africa    2007                    52.9\n##  4 Americas  1987                    69.5\n##  5 Americas  1997                    72.1\n##  6 Americas  2007                    72.9\n##  7 Asia      1987                    66.3\n##  8 Asia      1997                    70.3\n##  9 Asia      2007                    72.4\n## 10 Europe    1987                    74.8\n## 11 Europe    1997                    76.1\n## 12 Europe    2007                    78.6\n## 13 Oceania   1987                    75.3\n## 14 Oceania   1997                    78.2\n## 15 Oceania   2007                    80.7\nt3 %>% convert(int(year))## # A tibble: 15 x 3\n##    continent  year median_life_expectancy\n##    <fct>     <int>                  <dbl>\n##  1 Africa     1987                   51.6\n##  2 Africa     1997                   52.8\n##  3 Africa     2007                   52.9\n##  4 Americas   1987                   69.5\n##  5 Americas   1997                   72.1\n##  6 Americas   2007                   72.9\n##  7 Asia       1987                   66.3\n##  8 Asia       1997                   70.3\n##  9 Asia       2007                   72.4\n## 10 Europe     1987                   74.8\n## 11 Europe     1997                   76.1\n## 12 Europe     2007                   78.6\n## 13 Oceania    1987                   75.3\n## 14 Oceania    1997                   78.2\n## 15 Oceania    2007                   80.7\nwho_long <- who %>% pivot_longer(new_sp_m014:newrel_f65, names_to = \"category\", values_to = \"counts\")\nhead(who_long)## # A tibble: 6 x 6\n##   country     iso2  iso3   year category     counts\n##   <chr>       <chr> <chr> <int> <chr>         <int>\n## 1 Afghanistan AF    AFG    1980 new_sp_m014      NA\n## 2 Afghanistan AF    AFG    1980 new_sp_m1524     NA\n## 3 Afghanistan AF    AFG    1980 new_sp_m2534     NA\n## 4 Afghanistan AF    AFG    1980 new_sp_m3544     NA\n## 5 Afghanistan AF    AFG    1980 new_sp_m4554     NA\n## 6 Afghanistan AF    AFG    1980 new_sp_m5564     NA\nwho_long %>% summarize(count_NA = sum(is.na(counts)))## # A tibble: 1 x 1\n##   count_NA\n##      <int>\n## 1   329394\nwho_long <- who_long %>% filter(!is.na(counts))"},{"path":"pivot.html","id":"separate-and-unite","chapter":"12 Reshaping data","heading":"12.3 Separate and Unite","text":"category variable combines three pieces information together one label. can decode category three columns: diagnosis, sex, age group? separate function made . easiest way use separate variable separating consistently structured character column, new_rel_f_2534. ’s case : values start new_ missing underscore new. Also underscore sex age group. bit pre-processing using stringr package use separate.First, ’ll remove “new” “new_” (described concisely “regular expression” using new_*). ’ll change _f _f_ _m _m_. first start learning kinds manipulations, check lot cases sure transformations worked way expect. lot os str_ functions stringr package help kinds manipulations.Now, use separate convert category three columns using underscore separator.Now can use dplyr methods group_by summarize count cases sex, age group, diagnosis, country, year. can use new variables data visualizations facets colours.Sometimes want reverse operation: combining two columns together. example, biological data variables genus species, might want combine two, since species usually described together (Homo genus, sapiens species name). ’s job unite.","code":"\nwho_long %>% mutate(category = str_remove(category, \"new_*\"),\n                    category = str_replace(category, \"_f\", \"_f_\"),\n                    category = str_replace(category, \"_m\", \"_m_\")\n                    ) %>% \n  head()## # A tibble: 6 x 6\n##   country     iso2  iso3   year category  counts\n##   <chr>       <chr> <chr> <int> <chr>      <int>\n## 1 Afghanistan AF    AFG    1997 sp_m_014       0\n## 2 Afghanistan AF    AFG    1997 sp_m_1524     10\n## 3 Afghanistan AF    AFG    1997 sp_m_2534      6\n## 4 Afghanistan AF    AFG    1997 sp_m_3544      3\n## 5 Afghanistan AF    AFG    1997 sp_m_4554      5\n## 6 Afghanistan AF    AFG    1997 sp_m_5564      2\nwho_new <- who_long %>% mutate(category = str_remove(category, \"new_*\"),\n                    category = str_replace(category, \"_f\", \"_f_\"),\n                    category = str_replace(category, \"_m\", \"_m_\")\n                    ) %>% \n  separate(col = category, into = c(\"diagnosis\", \"sex\", \"age_group\"), sep=\"_\")\nwho_new %>% head()## # A tibble: 6 x 8\n##   country     iso2  iso3   year diagnosis sex   age_group counts\n##   <chr>       <chr> <chr> <int> <chr>     <chr> <chr>      <int>\n## 1 Afghanistan AF    AFG    1997 sp        m     014            0\n## 2 Afghanistan AF    AFG    1997 sp        m     1524          10\n## 3 Afghanistan AF    AFG    1997 sp        m     2534           6\n## 4 Afghanistan AF    AFG    1997 sp        m     3544           3\n## 5 Afghanistan AF    AFG    1997 sp        m     4554           5\n## 6 Afghanistan AF    AFG    1997 sp        m     5564           2"},{"path":"pivot.html","id":"suggested-reading","chapter":"12 Reshaping data","heading":"12.4 Suggested reading","text":"R4DS Section 12.3 PivotingR4DS Sextion 12.4 Separate UniteVignette kableExtra formatting tables. See next lesson lot topic.Vignette stringr manipulating text variables.","code":""},{"path":"format-tables.html","id":"format-tables","chapter":"13 Format tables","heading":"13 Format tables","text":"’re spending lot time course making graphic visualizations data. one lesson take detour learn make nice looking tables text numbers . bunch packages (see Assignment X). ’ll use kable table formatting function lesson (packages knitr kableExtra).Let’s use simple table demonstrate main features. want text, numbers, many rows columns. ’ll summarize data palmerpenguins table small table.function kable turns formatted table.","code":"## # A tibble: 5 x 4\n##   species   island    count body_mass_g\n##   <fct>     <fct>     <int>       <dbl>\n## 1 Adelie    Biscoe       44       3710.\n## 2 Adelie    Dream        56       3688.\n## 3 Adelie    Torgersen    51       3706.\n## 4 Chinstrap Dream        68       3733.\n## 5 Gentoo    Biscoe      123       5076.\nkable(t1)"},{"path":"format-tables.html","id":"header-rows","chapter":"13 Format tables","heading":"13.1 Header rows","text":"Often want rename reformat column headings. two ways : using rename change actual column names formatting table, using column formatting just affect table appearance. can rename just one column using rename, second version (col.names) need provide column names correct order.","code":"\nt1 %>% rename(`Body mass (g)` = body_mass_g) %>% kable()\nt1 %>% kable(col.names = c(\"Species\", \"Island\", \"Count\",  \"Body mass (g)\"))"},{"path":"format-tables.html","id":"column-alignment","chapter":"13 Format tables","heading":"13.2 Column alignment","text":"Commonly numbers right justified text left justified. ’s ’s done automatically. can specify column left, centre, right justified using letters l, c, r column. ’ll center justify numbers demonstrate.","code":"\nt1 %>% kable(align = \"llcc\")"},{"path":"format-tables.html","id":"formatting-numbers","chapter":"13 Format tables","heading":"13.3 Formatting numbers","text":"number comes calculation (mean) lot decimal places displayed unless change . can control number decimal places show using rounding. (Use negative number digits round left decimal point, example digits=-1 round tens place.) Give either one number use columns, provide vector control number digits separately column.can add comma (space SI . European styles) separate thousands millions using format.args = list(big.mark = \",\"). See help format options.","code":"\nt1 %>% kable(digits = 1, format.args = list(big.mark = \",\"))"},{"path":"format-tables.html","id":"color-highlights-and-other-styles","chapter":"13 Format tables","heading":"13.4 Color, highlights, and other styles","text":"lot options changing appearance text kableExtra package. interested, look vignette linked reading.two styles use frequently alternating shading help read across rows making columns wide enough display data.","code":"\nt1 %>% kable() %>% kable_styling(full_width = FALSE, bootstrap_options = \"striped\")"},{"path":"format-tables.html","id":"captions","chapter":"13 Format tables","heading":"13.5 Captions","text":"can add caption table caption argument kable.\nTable 13.1: number average mass penguins species island.\n","code":"\nt1 %>% kable(caption = \"The number and average mass of penguins by species and island.\")"},{"path":"format-tables.html","id":"putting-it-all-together","chapter":"13 Format tables","heading":"13.6 Putting it all together","text":"Usually want combine features get look want. goal always make table clearly displays data.\nTable 13.2: number average mass penguins species island.\n","code":"\nt1 %>% kable(digits = 1, format.args = list(big.mark = \",\"),\n             col.names = c(\"Species\", \"Island\", \"n\", \"Body mass (g)\"),\n             caption=\"The number and average mass of penguins by species and island.\") %>%\n  kable_styling(full_width = FALSE, bootstrap_options = \"striped\")"},{"path":"format-tables.html","id":"adding-row-and-column-totals","chapter":"13 Format tables","heading":"13.7 Adding row and column totals","text":"frequently make tables counts categorical variables. tables can helpful add column row totals. Sometimes want report totals percentages grand total. janitor package makes easy add totals percentages rows columns.’ll start matrix counts showing number countries life expectancy 75 years year continent.Now add row totals. sum computed first column since assumed label.think , ’ll realize doesn’t make much sense! let’s add column totals instead. first column ignored, assuming label.tables formatted differently compared data.frames tibbles, can still reformatted expect using %>% kable() %>% kable_styling().Incidentally, janitor package powerful table generating function tabyl counting started section . still need filter retain rows life expectancy 75 years. columns reported alphabetically instead according order appear original dataset.","code":"\nt1 <- gapminder %>% filter(lifeExp > 75) %>%\n  group_by(year, continent) %>%\n  dplyr::summarize(n = n()) %>%\n  pivot_wider(names_from = \"continent\", values_from = \"n\", values_fill = 0)## `summarise()` regrouping output by 'year' (override with `.groups` argument)\nt1## # A tibble: 7 x 6\n## # Groups:   year [7]\n##    year  Asia Europe Americas Oceania Africa\n##   <int> <int>  <int>    <int>   <int>  <int>\n## 1  1977     1      5        0       0      0\n## 2  1982     2      7        1       0      0\n## 3  1987     3     11        2       1      0\n## 4  1992     5     17        3       2      0\n## 5  1997     6     19        5       2      0\n## 6  2002     7     20        7       2      1\n## 7  2007     9     22       10       2      1\nt1 %>% adorn_totals()##   year Asia Europe Americas Oceania Africa\n##   1977    1      5        0       0      0\n##   1982    2      7        1       0      0\n##   1987    3     11        2       1      0\n##   1992    5     17        3       2      0\n##   1997    6     19        5       2      0\n##   2002    7     20        7       2      1\n##   2007    9     22       10       2      1\n##  Total   33    101       28       9      2\nt1 %>% adorn_totals(where = \"col\") ##  year Asia Europe Americas Oceania Africa Total\n##  1977    1      5        0       0      0     6\n##  1982    2      7        1       0      0    10\n##  1987    3     11        2       1      0    17\n##  1992    5     17        3       2      0    27\n##  1997    6     19        5       2      0    32\n##  2002    7     20        7       2      1    37\n##  2007    9     22       10       2      1    44\ngapminder %>% filter(lifeExp > 75) %>%\n  tabyl(year, continent) #  %>% adorn_totals(where=\"col\")##  year Africa Americas Asia Europe Oceania\n##  1977      0        0    1      5       0\n##  1982      0        1    2      7       0\n##  1987      0        2    3     11       1\n##  1992      0        3    5     17       2\n##  1997      0        5    6     19       2\n##  2002      1        7    7     20       2\n##  2007      1       10    9     22       2"},{"path":"format-tables.html","id":"adding-grouping-for-rows-and-columns","chapter":"13 Format tables","heading":"13.8 Adding grouping for rows and columns","text":"Sometimes desirable add grouping label series columns. example, table showing totals , can add header “Continent” appropriate columns. kable formatted table using function add_header_row. function takes argument vector pairs: labels column number columns label span. must enough lables span columns. add blank label first last column (spanning 1 column ), label “Continent” spanning 5 continents.can also helpful add grouping rows. example, label first 5 rows part 20th century last 2 rows part 21st century. add row labels one time, giving label row numbers rows header span. kableExtra function group_rows.","code":"\nt1 %>% adorn_totals(where = \"col\") %>%\n  kable() %>%\n  add_header_above(c(\" \" = 1, \n                  \"Continent\" = 5,\n                  \" \" = 1)) %>%\n  kable_styling(full_width = FALSE)\nt1 %>% adorn_totals(where = \"col\") %>%\n  kable() %>%\n  group_rows(\"20th century\", 1, 5) %>%\n  group_rows(\"21st century\", 6, 7) %>%\n  kable_styling(full_width = FALSE)"},{"path":"format-tables.html","id":"further-reading-8","chapter":"13 Format tables","heading":"13.9 Further reading","text":"Using kable format tablesVignette using kable kableExtrahttps://people.ok.ubc.ca/jpither/modules/Tables_markdown.html","code":""},{"path":"help.html","id":"help","chapter":"14 Getting help and asking questions","heading":"14 Getting help and asking questions","text":"learning new subject skill, lot questions. Detailed questions particular skill. General questions topic. Big-picture questions apply material. knowing begin, make progress, questions ask!Regardless question, asking questions well superpower. ? question way crystallizing uncertainty mind specific topic. specific question, easier answer, likely response helpful . Often carefully posing question lead answer . Broad general questions valuable , primarily help develop organize questions. Asking questions struggling answer important part learning thinking.","code":""},{"path":"help.html","id":"asking-questions-to-learn","chapter":"14 Getting help and asking questions","heading":"14.1 Asking questions to learn","text":"examples questions ’ve asked R data visualization:add error bars scatter plot?customize colours plot?change axis labels?Now ’ll show steps recommend answer questions. idea solve problem, steps take may need ask someone help. solved problem , easier second time, remember part solution. solved problem several times, steps useful, may need hint remember answer.","code":""},{"path":"help.html","id":"start-with-google","chapter":"14 Getting help and asking questions","heading":"14.1.1 Start with google","text":"idea solve problem, go google. ’s often good add “R” “tidyverse” “ggplot” search query. searches ’ve found helpful questions :error barsplot coloursaxis labelsI look link first page two uses reference ’ve found helpful. like tidyverse ggplot2 documentation, “R Graph Gallery” online courses (one UBC linked .)Using incognito mode google get results influenced search history recommend following starting places (lots links ’ll find fine ):error barsplot coloursaxis labels","code":""},{"path":"help.html","id":"find-an-example","chapter":"14 Getting help and asking questions","heading":"14.1.2 Find an example","text":"web pages find helpful lots examples. Sometimes realize many ways interpret idea head examples help figure really want. often search three google links find example like – output looks right code doesn’t look complicated.","code":""},{"path":"help.html","id":"look-at-the-documentation","chapter":"14 Getting help and asking questions","heading":"14.1.3 Look at the documentation","text":"link axis labels picked just help page labs. can see typing “labs” help search box Rstudio. maybe didn’t know search “labs” – ’s google helps.R help pages format part useful beginners “Examples” section bottom. Cut paste examples help page “labs” console see function works.","code":""},{"path":"help.html","id":"reproduce-an-example","chapter":"14 Getting help and asking questions","heading":"14.1.4 Reproduce an example","text":"Cut paste example help page web page R session. doesn’t work right away, check () installed package typed required “library()” function, (b) defined objects needed task – sometimes defined near top web examples help page. example, “labs” help page, first example creates plot stores object called p. skip first part example, rest examples won’t work.","code":""},{"path":"help.html","id":"modify-the-example","chapter":"14 Getting help and asking questions","heading":"14.1.5 Modify the example","text":"Test understanding modifying example little bit. need, try removing parts don’t want. skill suggest every lesson course – experiment code works minimize frustration.Gradually turn example want, changing one feature time. Using data instead data example. Using preferences (colours, font size, text titles, etc.).","code":""},{"path":"help.html","id":"make-notes-to-explain-the-solution","chapter":"14 Getting help and asking questions","heading":"14.1.6 Make notes to explain the solution","text":"strongly suggest keep experiments notes separate R markdown file, call something appropriate (“drawing-errorbars”) put folder called something like “examples”. Knit document moving sure works complete.","code":""},{"path":"help.html","id":"example-learning-how-to-draw-error-bars","chapter":"14 Getting help and asking questions","heading":"14.2 Example: learning how to draw error bars","text":"Skim R cookbook pageThe data fine – quantitative data categorical data groupingThe first plot looks like want, least approximately!Uh oh! need variable called tgc created ToothGrowth (part R) using function summarySE (don’t .)Reading , see summarySE defined near bottom page. looks complicated! Think bit.Cut paste function definition, look result. see. just need use group_by summarize compute means, sample sizes, qt (looks value t-table)make version summarySE just sure understand . Mine simpler – just calculation instead creating new function. Making simpler example great way understand complicated version .Great – produces output summarySE(ToothGrowth). (used different name mean column need len compute standard deviation compute mean. use function help page write summarize instead dplyr::summarize ’ll get error example uses plyr package different definition summarize. ’ve bumped error lot, recognize right away. might stump first time experience .)Cut paste example, modified use data (mean_len instead len):Get rid lines, becasuse don’t want .Now, drop favourite data, palmer penguins, making changes absolutely necessary. overlapping points problem mentioned help page, borrowed ’s position_dodge idea. also noticed web page used se instead larger ci draw error bars, changed .","code":"\nmy_summarySE <- ToothGrowth %>% group_by(supp, dose) %>%\n    dplyr::summarize(N = n(),\n              mean_len = mean(len),\n              sd = sd(len),\n              se = sd / sqrt(N),\n              ci = se * qt(0.975, N-1))## `summarise()` regrouping output by 'supp' (override with `.groups` argument)\nggplot(my_summarySE, aes(x=dose, y=mean_len, colour=supp)) + \n    geom_errorbar(aes(ymin=mean_len-se, ymax=mean_len+se), width=.1) +\n    geom_line() +\n    geom_point()\nggplot(my_summarySE, aes(x=dose, y=mean_len, colour=supp)) + \n    geom_errorbar(aes(ymin=mean_len-se, ymax=mean_len+se), width=.1) +\n    geom_point()\nlibrary(palmerpenguins)\nmy_summarySE <- penguins %>% na.omit() %>%\n  group_by(species, island) %>%\n    dplyr::summarize(N = n(),\n              mean_mass = mean(body_mass_g),\n              sd = sd(body_mass_g),\n              se = sd / sqrt(N),\n              ci = se * qt(0.975, N-1))## `summarise()` regrouping output by 'species' (override with `.groups` argument)\npd <- position_dodge(0.2) # move them .05 to the left and right\nggplot(my_summarySE, aes(x=species, y=mean_mass, colour=island)) + \n    geom_errorbar(aes(ymin=mean_mass-ci, ymax=mean_mass+ci), width=.1, position = pd) +\n    geom_point(position=pd)"},{"path":"help.html","id":"asking-question-in-this-course","chapter":"14 Getting help and asking questions","heading":"14.3 Asking question in this course","text":"Asking good questions can challenging, especially asynchronous learning. classroom, ’s fairly easy: Can give another example? calculation? answer mean? Many questions might ask person don’t translate well contexts: email, office hours, online forums, immediate context group discussion missing. ’s add context ask question.describe several different ways get answers questions. Knowing method use skill, provide guidance well. ’s important ask questions – want ask questions, much consider part assigned work formulate questions.","code":""},{"path":"help.html","id":"starting-out","chapter":"14 Getting help and asking questions","heading":"14.3.1 Starting out","text":"start course bunch computer tasks (installing R Rstudio, installing R packagesm understanding basics Rstudio, working git github). range easy difficult depending previous experience. tried provide written video information guide , get stuck , work associated “task” point course, ask help right away.","code":""},{"path":"help.html","id":"learning-r-basics","chapter":"14 Getting help and asking questions","heading":"14.3.2 Learning R basics","text":"start write R commands make R markdown documents encounter problems arising typos (forgetting, knowing place) commas, brackets, backticks, quotation marks, pipes (%>%), many bits syntax necessary communcation computer. error messages frequently hard decipher. best way learn solve problems following: take working R markdown document example R code change slightly. Make prediction happen get computer process code. Compare happens predicted. regularly can reliably predict outcomes changes can think . “playing computer” head – try understand react input. something happens don’t understand: ask someone . Describe , thought happen, really happened.","code":""},{"path":"help.html","id":"problem-solving","chapter":"14 Getting help and asking questions","heading":"14.3.3 Problem solving","text":"developed fluency working R, start learn solve problems. means trying accomplish data visulization task, make single plot, use colour way, change kind plot, add text axis, thousands tasks. start just tasks ’ve given later trying achieve goals solving problems. method described useful : working example, change way predict result. Make changes think lead good outcomes, also make playful “silly” changes lead poor quality graphs still help learn use tools. kind experimentation essential develop robust accurate mental model R () computer software works.","code":""},{"path":"help.html","id":"learning-new-methods-r","chapter":"14 Getting help and asking questions","heading":"14.3.4 Learning new methods R","text":"tools available within R extensive can never learn taught course textbook website. really master R need learn learn new tools.R functions help pages – accessed help tab Rstudio prefacing function ‘?’ R console. help pages specific style require practice learn read . One best features help page, especially starting , examples bottom page. Usually can simply cut pasted console can observe results see function author intended used.Many R packages vignettes. extended documents intended explain use key feature package. can find vignettes web page found software (CRAN github) using vignette function. Read help page – especially examples – see use vignette function.focussing tidyverse set packages. tidyverse website contains help, examples, reference documentation packages. web pages combine features books, tutorials, vignettes, help pages. worth time! Keep eye cheatsheets especially helpful learn basics package.One many reasons using git GitHub course make easier ask question. problem R markdown document making function work way think just don’t know interpret results calculation, can ask . know much information give ? make easy? Send email question – trying , problem error message, think might going wrong. , can put computer code R markdown document, commit changes project, push Github. tell name repository file ’ll full set code lead problem. make much easier help . (Note can see private repositories access , example course work repositories. use repositories share files ask questions.)","code":""},{"path":"help.html","id":"solving-computer-problems-debugging","chapter":"14 Getting help and asking questions","heading":"14.4 Solving computer problems (“Debugging”)","text":"two kinds computer problems,code something, want, andyour code gives error, result, don’t know .problems can frustrating, second kind especially difficult starting .sophisticated tools debugging R, won’t discuss course.recommendation kinds problem : simplify something works understand going . add one step time. adapting code found somewhere, make sure original example works. Develop “mental model” computer , test modifying code. creative relaxed. Try hard get frustrated! Errors really important part learning – help develop deeper powerful understanding tools trying use.","code":""},{"path":"help.html","id":"suggestions-for-asking-questions","chapter":"14 Getting help and asking questions","heading":"14.4.1 Suggestions for asking questions","text":"suggestions:Explain context (material video, course notes, assignment – one?, just something wondering )Explain context (material video, course notes, assignment – one?, just something wondering )Say know (topic X, question asks Y)Say know (topic X, question asks Y)Say trying (understand argument, perform calculation, fix error code)Say trying (understand argument, perform calculation, fix error code)Say think comes next think stuck (’m trying figure X, don’t know plot looks like Y)Say think comes next think stuck (’m trying figure X, don’t know plot looks like Y)","code":""},{"path":"help.html","id":"asking-a-complete-question","chapter":"14 Getting help and asking questions","heading":"14.4.2 Asking a complete question","text":"trying solve problem R, code working expect, make smallest possible example problem can. called “reproducible example” – meaning person asking help can make problem repeat computer. R package help create examples called reprex, don’t need course.reprex function tests code see ’ve included necessary enable someone else understand code. includes libraries using variables must defined. Select code demonstrates problem, copy clipboard. Type reprex() R Console. example complete, appear preview window lower right. can cut pasted email.","code":""},{"path":"help.html","id":"what-does-this-unknown-function-do","chapter":"14 Getting help and asking questions","heading":"14.4.3 What does this unknown function do?","text":"another important kind question – -unfamiliar-R-function ? bit easier since don’t need translate goal question R, just need figure function .might wondering position_dodge . ’s fairly obvious step--step example, try figure reading help page. ’s bit hard understand, able get function moves (dodges) horizontal position point, error bar, geom.","code":""},{"path":"help.html","id":"how-to-learn-material-in-this-course","chapter":"14 Getting help and asking questions","heading":"14.5 How to learn material in this course","text":"course goals summarized welcome course. One important learning learn use new tools data visualization. sort learning hard worthwhile. ’s also great transferrable skill. can master material course learn keep learning, ’ll able apply learned wide range computing skills.","code":""},{"path":"help.html","id":"getting-help","chapter":"14 Getting help and asking questions","heading":"14.6 Getting help","text":"R studio tips presented animated GIFsLearning resources R studio","code":""},{"path":"help.html","id":"more-advanced-help","chapter":"14 Getting help and asking questions","heading":"14.7 More advanced help","text":"forgot teach R\nincluding Debugging tools\nincluding Debugging tools","code":""},{"path":"working-models.html","id":"working-models","chapter":"15 Working with models","heading":"15 Working with models","text":"far focussed aspects data visualzation:making graphical displays data,transforming summarizing data,displaying data summaries tables figures.Models another way condense data highlight patterns. Models sometimes used statistical inference, ’s focus course. use models tools adding features visualization.R can used make huge number models. look two broad classes six lessons:regression smoothing one variable function another, andtransforming, simplification, grouping observations data many (2) variables.","code":""},{"path":"working-models.html","id":"adding-smooths-to-a-visualization","chapter":"15 Working with models","heading":"15.1 Adding smooths to a visualization","text":"lesson focus visualizing models smooth data.\nnext two lessons take closer look models, particular getting diagnostic information model fits making data frames quantitative output models.First, ’ll take subset gapminder data make simple scatterplot.Now add lines highlight trends data.First use linear regression add straight line.can change formula curves. want smoothed line follows data, use B-spline degree 3 (cubic).Another way describe cubic spline generalized additive model (GAM). model quite bit sophisticated previous spline. Depending data, model fitting process add remove oscillations (“wiggles”) curve.Another data smoothing method called LOESS (locally estimated scatterplot smoothing) require describe model (line, cubic spline, etc.) data. Instead model takes small subsets data along independent variable makes many models (usually first second degree polynomials) joins together.final example can try quantile regression. make lines approximate specific quantile (10%, 50%, 90% shown ) instead mean. might good idea data particular since year range countries spanning large distribution GDP per capita, analysis allows us see short, median, long life expectancies changed time. slope 10 90 percentiles seems similar, median life expectancy increased faster, countries shifted low life expectancy high life expectancy.","code":"\ngp <- gapminder %>% filter(continent == \"Europe\")\np1 <- gp %>% ggplot(aes(x = year, y = log10(gdpPercap))) +\n  geom_point(alpha = 0.5) + theme_bw()\np1\np1 + geom_smooth(method = \"lm\", formula = y ~ x)\np1 + geom_smooth(method = \"lm\", \n                 formula = y ~ splines::bs(x, df=5, degree=3))\np1 + geom_smooth(method = \"gam\", \n                 formula = y ~ s(x, bs = \"cs\"))\np1 + geom_smooth(method = \"loess\",\n                 formula = y ~ x)\np1 + geom_quantile(formula = y ~ x, \n                   method = \"rq\", \n                   lambda = 1, quantiles = c(0.1, 0.50, 0.90))"},{"path":"working-models.html","id":"putting-several-models-on-a-single-plot","chapter":"15 Working with models","heading":"15.2 Putting several models on a single plot","text":"example ’ll show can plot one smooth plot (easily, adding multiple smooths together +) add legend control colours used line. can learn colours cheatsheet can get list colour names function colors().","code":"\np1 + geom_smooth(method = \"lm\", \n                 formula = y ~ x, \n                 aes(color = \"Linear\", fill = \"Linear\")) +\n  geom_smooth(method = \"loess\", \n              formula = y ~ x, \n              aes(color = \"LOESS\", fill = \"LOESS\")) + \n  scale_color_manual(name = \"Smooth\",  \n                     values = c(\"salmon\", \"limegreen\" ) ) + \n  scale_fill_manual(name = \"Smooth\", \n                    values = c(\"salmon\", \"limegreen\" ) ) + \n  theme(legend.position = \"top\")"},{"path":"working-models.html","id":"smooths-on-facetted-plots","chapter":"15 Working with models","heading":"15.3 Smooths on facetted plots","text":"Smoothing works really easily facetted plots. Simply adding facet function plot make different smooth facet.make lots facets, one country, add smooth panel.ideal facetted plot – many facets (countries) text labels don’t fit well space available. might draw plot like explore data plan analysis plot.","code":"\np1 + facet_wrap(~country) +\n  geom_smooth(method = \"lm\",\n              formula = y ~ x)"},{"path":"working-models.html","id":"summary-1","chapter":"15 Working with models","heading":"15.4 Summary","text":"’ve learned add linear regressions (lm), smooths (gam, loess) plots.","code":""},{"path":"working-models.html","id":"further-reading-9","chapter":"15 Working with models","heading":"15.5 Further reading","text":"next lesson look linear models bit detail, showing extract residuals, predictions, confidence intervals.Healy Chapter 6 Working models","code":""},{"path":"linear-models.html","id":"linear-models","chapter":"16 Linear models","heading":"16 Linear models","text":"Linear regression powerful technique finding line approximates set data. approximation good one, linear model must appropriate data, can sometimes determined reasoning processes generate data, sometimes justified based statistical properties data. use linear models tool without elaboration methods theoretical background; learn different statistics course.explore create linear model, can include lot straight lines, discuss add models visualization.","code":""},{"path":"linear-models.html","id":"making-linear-models","chapter":"16 Linear models","heading":"16.1 Making linear models","text":"always make linear models variables data frame. Designate one variable response variable, attempt predict using one variables, called predictors. restricted variables data frame; can transform variables first, example squaring, taking logarithms, applying function. Additionally, can use categorical (factor) variables predictors combination quantitative variables. aware variables transformations add list predictors, likely correlated model hard interpret. issues discussed statistics courses regression.data frame created, write linear model “formula” object, meaning equation ~ instead = indicate modelling left hand side allowing specific model mismatch predictors response.seen price diamond increases bit faster linearly mass diamond increases, try linear model quadratic model data diamonds dataframe.can write formulas regression lines using equatiomatic package. (get equations formatted properly, need add results='asis' {r} line R markdown document. equations display correctly knitted document, show LaTeX code Rstudio preview.) present work correctly functions mathematical transformations like log, exp, poly(x, 2), ’ll show linear models .\\[\n\\operatorname{price} = \\alpha + \\beta_{1}(\\operatorname{carat}) + \\epsilon\n\\]\\[\n\\begin{aligned}\n\\operatorname{price} &= \\alpha + \\beta_{1}(\\operatorname{carat}) + \\beta_{2}(\\operatorname{clarity}_{\\operatorname{SI2}}) + \\beta_{3}(\\operatorname{clarity}_{\\operatorname{SI1}})\\ + \\\\\n&\\quad \\beta_{4}(\\operatorname{clarity}_{\\operatorname{VS2}}) + \\beta_{5}(\\operatorname{clarity}_{\\operatorname{VS1}}) + \\beta_{6}(\\operatorname{clarity}_{\\operatorname{VVS2}}) + \\beta_{7}(\\operatorname{clarity}_{\\operatorname{VVS1}})\\ + \\\\\n&\\quad \\beta_{8}(\\operatorname{clarity}_{\\operatorname{}}) + \\beta_{9}(\\operatorname{color}_{\\operatorname{E}}) + \\beta_{10}(\\operatorname{color}_{\\operatorname{F}}) + \\beta_{11}(\\operatorname{color}_{\\operatorname{G}})\\ + \\\\\n&\\quad \\beta_{12}(\\operatorname{color}_{\\operatorname{H}}) + \\beta_{13}(\\operatorname{color}_{\\operatorname{}}) + \\beta_{14}(\\operatorname{color}_{\\operatorname{J}}) + \\epsilon\n\\end{aligned}\n\\]can fill results showing numeric coefficients equations:\\[\n\\operatorname{price} = -2256.36 + 7756.43(\\operatorname{carat}) + \\epsilon\n\\]\\[\n\\begin{aligned}\n\\operatorname{price} &= -6699.95 + 8856.23(\\operatorname{carat}) + 2832.65(\\operatorname{clarity}_{\\operatorname{SI2}})\\ + \\\\\n&\\quad 3795.47(\\operatorname{clarity}_{\\operatorname{SI1}}) + 4466.1(\\operatorname{clarity}_{\\operatorname{VS2}}) + 4785.79(\\operatorname{clarity}_{\\operatorname{VS1}})\\ + \\\\\n&\\quad 5234.16(\\operatorname{clarity}_{\\operatorname{VVS2}}) + 5351.85(\\operatorname{clarity}_{\\operatorname{VVS1}}) + 5718.23(\\operatorname{clarity}_{\\operatorname{}})\\ - \\\\\n&\\quad 216.45(\\operatorname{color}_{\\operatorname{E}}) - 314.92(\\operatorname{color}_{\\operatorname{F}}) - 509.09(\\operatorname{color}_{\\operatorname{G}})\\ - \\\\\n&\\quad 985.01(\\operatorname{color}_{\\operatorname{H}}) - 1441.77(\\operatorname{color}_{\\operatorname{}}) - 2340.83(\\operatorname{color}_{\\operatorname{J}})\\ + \\\\\n&\\quad \\epsilon\n\\end{aligned}\n\\]results jumping point lot exploration.","code":"\nlinear_model1 <- lm(price ~ carat, data = diamonds)\nsummary(linear_model1)## \n## Call:\n## lm(formula = price ~ carat, data = diamonds)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -18585.3   -804.8    -18.9    537.4  12731.7 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -2256.36      13.06  -172.8   <2e-16 ***\n## carat        7756.43      14.07   551.4   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1549 on 53938 degrees of freedom\n## Multiple R-squared:  0.8493, Adjusted R-squared:  0.8493 \n## F-statistic: 3.041e+05 on 1 and 53938 DF,  p-value: < 2.2e-16\nquadratic_model1 <- lm(price ~ poly(carat, 2), \n                       data = diamonds)\nsummary(quadratic_model1)## \n## Call:\n## lm(formula = price ~ poly(carat, 2), data = diamonds)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -26350.0   -724.2    -35.9    445.8  12881.1 \n## \n## Coefficients:\n##                  Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)     3.933e+03  6.631e+00   593.1   <2e-16 ***\n## poly(carat, 2)1 8.539e+05  1.540e+03   554.4   <2e-16 ***\n## poly(carat, 2)2 3.757e+04  1.540e+03    24.4   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1540 on 53937 degrees of freedom\n## Multiple R-squared:  0.851,  Adjusted R-squared:  0.851 \n## F-statistic: 1.54e+05 on 2 and 53937 DF,  p-value: < 2.2e-16\nlinear_model2 <- lm(price ~ carat + clarity + color, \n                    data = diamonds %>% mutate(clarity = factor(clarity, ordered=FALSE), \n                                               color = factor(color, ordered=FALSE)))\nsummary(linear_model2)## \n## Call:\n## lm(formula = price ~ carat + clarity + color, data = diamonds %>% \n##     mutate(clarity = factor(clarity, ordered = FALSE), color = factor(color, \n##         ordered = FALSE)))\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -17310.9   -678.0   -192.2    473.0  10313.2 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -6699.95      47.20 -141.94   <2e-16 ***\n## carat        8856.23      12.10  731.86   <2e-16 ***\n## claritySI2   2832.65      44.77   63.27   <2e-16 ***\n## claritySI1   3795.47      44.50   85.30   <2e-16 ***\n## clarityVS2   4466.10      44.69   99.93   <2e-16 ***\n## clarityVS1   4785.79      45.40  105.42   <2e-16 ***\n## clarityVVS2  5234.16      46.72  112.03   <2e-16 ***\n## clarityVVS1  5351.85      48.03  111.42   <2e-16 ***\n## clarityIF    5718.23      52.01  109.95   <2e-16 ***\n## colorE       -216.45      18.53  -11.68   <2e-16 ***\n## colorF       -314.92      18.72  -16.82   <2e-16 ***\n## colorG       -509.09      18.33  -27.78   <2e-16 ***\n## colorH       -985.01      19.49  -50.54   <2e-16 ***\n## colorI      -1441.77      21.90  -65.84   <2e-16 ***\n## colorJ      -2340.83      27.03  -86.60   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1170 on 53925 degrees of freedom\n## Multiple R-squared:  0.914,  Adjusted R-squared:  0.9139 \n## F-statistic: 4.092e+04 on 14 and 53925 DF,  p-value: < 2.2e-16\nlibrary(equatiomatic)\nextract_eq(linear_model1)\nextract_eq(linear_model2, wrap=TRUE)\nextract_eq(linear_model1, use_coefs=TRUE, fix_signs=TRUE)\nextract_eq(linear_model2, use_coefs=TRUE, terms_per_line = 3,\n           fix_signs=TRUE, wrap=TRUE)"},{"path":"linear-models.html","id":"smoothing-on-facets","chapter":"16 Linear models","heading":"16.2 Smoothing on facets","text":"geom_smooth function especially powerful facetted plots. smooth automatically computed plotted facet separately.can fit lines using lm well, using color clarity variables regression equation. way facet_* geom_smooth combine together makes visualization lines easy.Notice ’ve moved color=cut ggplot function geom_point function aesthetic points. colour specified first ggplot function, geom_smooth “inherit” aesthetic mapping make separate smooth cut (5 lines per panel). enough data panels cuts good job, revised plot draw one smooth per facet. move color=cut back ggplot call see result changes.","code":"\ndiamonds %>% \n  filter(color %in% c(\"D\", \"F\", \"H\", \"J\"), \n         clarity %in% c(\"SI1\", \"VS1\", \"IF\")) %>%\n  ggplot(aes(x=carat, y=price)) + \n  geom_point(aes(color=cut)) +\n  facet_grid(color ~ clarity) + \n  scale_colour_viridis_d(begin=0, end =0.8) +\n  geom_smooth(method = \"lm\", formula = y ~ poly(x,2),\n              color = \"black\", size = 0.5) "},{"path":"linear-models.html","id":"robust-regression","chapter":"16 Linear models","heading":"16.3 Robust regression","text":"demonstrated importance visualizing data start course appealing example Anscombe’s quartet. set four data sets means, standard deviations, correlation. ’ll show plot four lines single plot avoid least one problems outliers using robust regression MASS package.Robust regression designed less influenced outliers.\nRobust regression big improvement group 3, little effect problems. (Try formula = y ~ poly(x,2) fix panel 2. fix problem panel 4.)","code":"\np1 <- anscombe %>%\n pivot_longer(everything(),\n   names_to = c(\".value\", \"set\"),\n   names_pattern = \"(.)(.)\"\n ) %>% ggplot(aes(x = x, y = y)) +\n  geom_point() + \n  facet_wrap(~ set) \n# p1 + geom_smooth(method=\"lm\") # Try this instead\np1 + geom_smooth(method=MASS::rlm) # , formula  = y ~ poly(x,2))"},{"path":"linear-models.html","id":"predicting-quantiles","chapter":"16 Linear models","heading":"16.4 Predicting quantiles","text":"can also try predict quantiles data. make linear model 0.05, 0.50 (median), 0.95 quantiles.","code":"\ndiamonds %>% filter(cut == \"Ideal\", color == \"G\") %>%\n  ggplot(aes(x=carat, y = price)) + \n  geom_point() +\n  geom_quantile(method = rqss, formula = y ~ x,\n                lambda = 1, quantiles = c(0.05, 0.5, 0.95))"},{"path":"linear-models.html","id":"quantitative-model-output","chapter":"16 Linear models","heading":"16.5 Quantitative model output","text":"broom package functions obtain model coefficients compute residuals, predictions, confindence intervals. Healy also shows use broom fit many models (model facet) Section 6.6, skip steps.Get coefficients (standard errors, t-statistic, p-value confidence intervals) model using tidy.second model effect level clarity price (relative base case I1). ’s can plot regression coefficients dot plots uncertainties using output tidy.can also done easily using coefplot:can get statistics model using glance. don’t discuss results, taken statistics course topics regression recognize least results.augment function makes easy plot residuals predicted values many models (see ?augment). can use augment model object get data frame data used model plus fitted (predicted) values, residuals, quantities. can add data provided model object including data = diamonds augment function (output shown.)generate new data, can make plot predictions easily.course, overly complicated plotting straight line, method can adopted many models.","code":"\ntidy(linear_model1, conf.int = TRUE) %>% kable(digits = 1)\ntidy(linear_model2, conf.int = TRUE) %>%\n  filter(str_starts(term, \"clarity\")) %>%\n  ggplot(aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high)) + \n  geom_pointrange()\nlibrary(coefplot)\ncoefplot(linear_model2, sort = \"magnitude\", intercept = FALSE)\nglance(linear_model1) %>% kable()\naugment(linear_model1, interval = \"prediction\") %>% head() %>% kable(digits = 2)\n# augment(linear_model1, interval = \"prediction\", data = diamonds) %>% head()\nnew_data = tibble(carat = seq(0.20, 5.01, 0.01))\naugment(linear_model1, newdata = new_data, interval = \"prediction\") %>%\n  ggplot(aes(x = carat, y = .fitted, ymin = .lower, ymax = .upper)) + \n  geom_ribbon(fill=\"darkblue\", alpha = 0.5) + \n  geom_line(color=\"blue\")"},{"path":"linear-models.html","id":"revisiting-models-from-the-previous-lesson","chapter":"16 Linear models","heading":"16.5.1 Revisiting models from the previous lesson","text":"tidy, glance augment convenient, sometimes want simpler methods get model results. show make models predictions model types previous lesson.models can fitted independently making plot. , get complex object called fitted model can used give lot information model. Healy discusses look model output, skip two exceptions. look difference model data (called residuals) making predictions models.fit models generated look summary output model. ’ll start computing log(GDP) number years since 1950 use variables models.linear model fitting straight line data (slope, intercept):robust version line less influenced outliers:fit splines two ways: using lm using generalized additive models:LOESS smooth:finally quantile regression. quantile predicted model given tau; ’ve selected 10 percentile . lambda parameter ","code":"\ngp <- gapminder %>% filter(continent == \"Europe\") %>%\n  mutate(year1950 = year - 1950,\n         logGDP = log10(gdpPercap))\nm1 <- lm(logGDP ~ year1950, data = gp)\nsummary(m1)## \n## Call:\n## lm(formula = logGDP ~ year1950, data = gp)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -0.79487 -0.15384  0.05888  0.20269  0.45675 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 3.7416631  0.0271072  138.03   <2e-16 ***\n## year1950    0.0107310  0.0007931   13.53   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.2597 on 358 degrees of freedom\n## Multiple R-squared:  0.3383, Adjusted R-squared:  0.3365 \n## F-statistic: 183.1 on 1 and 358 DF,  p-value: < 2.2e-16\nlibrary(MASS)\nm2 <- rlm(logGDP ~ year1950, data = gp)\nsummary(m2)## \n## Call: rlm(formula = logGDP ~ year1950, data = gp)\n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -0.82123 -0.17437  0.03441  0.17481  0.43542 \n## \n## Coefficients:\n##             Value    Std. Error t value \n## (Intercept)   3.7575   0.0264   142.2993\n## year1950      0.0110   0.0008    14.2157\n## \n## Residual standard error: 0.2592 on 358 degrees of freedom\nm3 <- lm(logGDP ~ splines::bs(year1950, df = 5, degree=3), data = gp)\nm4 <- mgcv::gam(logGDP ~ s(year1950), data = gp)\n# summary(m3) # this is a bit hard to read, so I don't show it here.\n# summary(m4) # same comment here!\nm5 <- loess(logGDP ~ year1950, data = gp)\n# summary(m5)\nm6 <- quantreg::rq(logGDP ~ year1950, data= gp, \n                     tau = 0.1)\nsummary(m6)## Warning in rq.fit.br(x, y, tau = tau, ci = TRUE, ...): Solution may be nonunique## \n## Call: quantreg::rq(formula = logGDP ~ year1950, tau = 0.1, data = gp)\n## \n## tau: [1] 0.1\n## \n## Coefficients:\n##             coefficients lower bd upper bd\n## (Intercept) 3.36938      3.23544  3.47966 \n## year1950    0.00939      0.00692  0.01221"},{"path":"linear-models.html","id":"computing-and-plotting-residuals","chapter":"16 Linear models","heading":"16.5.2 Computing and plotting residuals","text":"important visualization model compare observations predictions model. difference called residual. (residual variation data described model.) function residuals applied model object gives access values makes easy plot.can make histograms residuals:Using bind_cols bind_rows combine variables observations one large table, can plot residuals several models:can see distribution (histogram) residuals fairly similar three models. defintely negative residuals larger magnitude positive residuals. modal residuals bigger zero. suggests points model “predicts” (model prediction larger observed data) common result prediction (model prediction smaller observed value.)commonly want compare residuals one independent variable, dependent variable, predicted values. easy adding predictions residuals original data.Note models generally don’t make predictions missing data, year GDP data missing, country year, problems code . easiest solution filter rows data table missing data.making predictions, can also generate confidence prediction intervals add measure uncertainty visualization. plotting purposes may want generate uniform grid along x-axis make predictions values. ’s can . ’ve used summarize determine range years since 1950 (shown). always cautious interpreting predictions, especially predictions values outside observed values original data.confidence intervals lot narrower prediction intervals. confidence interval gives measure uncertainty mean value log GDP per capita year, prediction interval gives measure uncertainty prediction new observation log GDP per capita. prediction new observation much uncertain knowledge mean data.technical observations. predict generate data frame; makes matrix, use as_tibble convert tibble variable names work expected. predict functions linear models, GAMs, LOESS, etc different functions important differences. can see spline can calculate prediction confidence intervals output upper lower limits interval. LOESS predict function calculates standard error estimated value; value must scaled added predicted value generate uncertainty estimate.","code":"\ntibble(residuals = residuals(m1)) %>%\n  ggplot(aes(x = residuals)) + geom_histogram(bins = 20)\nresiduals <- bind_rows(\n  bind_cols(model = \"linear\", residual = residuals(m1)),\n  bind_cols(model = \"spline\", residual = residuals(m3)),\n  bind_cols(model = \"loess\", residual = residuals(m5))\n)\nresiduals %>% ggplot(aes(x = residual, fill = model)) +\n  geom_histogram(bins=20)\nresiduals %>% ggplot(aes(x = residual)) + \n  geom_histogram(bins=20) + facet_grid(model ~ .)\ngp1 <- gp %>% mutate(linear_residuals = residuals(m1),\n              linear_predictions = predict(m1))\ngp1 %>%  ggplot(aes(x = logGDP, \n                    y = linear_predictions)) + \n  geom_point() +\n  geom_abline(aes(intercept = 0, slope=1))\ngp1 %>%  ggplot(aes(x = linear_predictions, \n                    y = linear_residuals)) +\n  geom_point()\nnew_data <- tibble(year1950 = seq(from = 2, to = 57, by = 1))\npredictions1 <- predict(m3, new_data, interval = \"prediction\") %>% as_tibble()\npredictions2 <- predict(m5, new_data, se=TRUE) %>% as_tibble()\nbind_cols(new_data, predictions1) %>%\n  ggplot(aes(x = year1950, y = fit)) + \n  geom_ribbon(aes(ymin = lwr, ymax = upr), fill = \"blue\", alpha = 0.4) + \n  geom_line(color = \"blue\") +\n  geom_point(data = gp, aes(x = year1950, y = logGDP))\nbind_cols(new_data, predictions2) %>%\n  ggplot(aes(x = year1950, y = fit)) + \n  geom_ribbon(aes(ymin = fit -se.fit, ymax = fit + se.fit), fill = \"blue\", alpha = 0.4) + \n  geom_line(color = \"blue\") +\n  geom_point(data = gp, aes(x = year1950, y = logGDP))"},{"path":"linear-models.html","id":"further-reading-10","chapter":"16 Linear models","heading":"16.6 Further reading","text":"Healy Chapter 6 Work modelsDocumentation equationomatic including instructions installation.","code":""},{"path":"smoothing.html","id":"smoothing","chapter":"17 GAM and LOESS smoothing","heading":"17 GAM and LOESS smoothing","text":"lesson show create GAM LOESS models perform basic tasks interact R model objects functions create. keeping goals course, primarily focus using models visualization attempt detailed statistical analysis might use particular model inference. means restrict attention basic uses models using one predictor (x) one response (y) variable.","code":""},{"path":"smoothing.html","id":"generalized-additive-models","chapter":"17 GAM and LOESS smoothing","heading":"17.1 Generalized Additive Models","text":"Generalized additive models kind linear regression, instead finding coefficients predictor variables (e.g., intercepts, slopes), model finds “smooth” response function predictor. Typically means piecewise cubic function (spline) used approximate relationship two variables. can compute predicted values, confindence prediction intervals, show smooth response function arose model. don’t provide simple list coefficients like linear regression, spline curve defined many numbers usually informative .Generalized additive models commonly used theoretical motivation functional relationship variables studied. ’ll look Mauna Loa atmospheric CO2 concentration. data increase year year well-established interannual oscillations, clear function either patterns.start using last decade data Lesson 1.plot atmospheric CO2 concentration time.next plot shows observation, minus annual mean, function time year actual year. year’s observations overlapped.GAM fits pairs data using gam function mgcv package.\nplot function mgcv package, ’m using ggplot function called draw gratia package.Depending goal, may find second plot smooth – interannual oscillations smoothed completely. can increase number “knots” (setting k=25) spline capture oscillation, way smoothing normally used:summary function GAM fits broom functions glance tidy give access data, interpretation output beyond scope course:often useful compute residuals extract predicted values.generate new data (dates), can plot predictions . Since model piecewise cubic function, extrapolations often dramatically unreliable. downward facing cubic last “bump” simply continued, comically bad results. Extrapolation models, especially smooths, somewhere risky foolish!want confidence intervals fitted values, use confint function together name smooth extracting. aware function include intercept (grand mean) model, values centred zero.can also use lm fit splines; similar GAMs important differences. mgcv package lot features available lm.can use augment generate data plot combine original data.spline closely traces data, increase df 26 . increases numbers knots separate cubics used approximate data.","code":"\nmy_theme = theme_linedraw() + theme(text = element_text(size = 14))\np1 <- co2 %>% ggplot(aes(decimal_date, co2_avg)) + geom_point() + my_theme +\n  labs(x = \"Year (decimal)\", y = \"Atmospheric CO2 (ppm)\")\np1\np2 <- co2 %>% ggplot(aes(year_fraction, co2_anomaly)) + geom_point() + my_theme +\n  labs(x = \"Year fraction (decimal)\", y = \"Atmospheric CO2 anomaly (ppm)\")\np2\ng1 <- gam(co2_anomaly ~ s(year_fraction, bs=\"cs\"), data = co2)\ndraw(g1, residuals=TRUE, rug=FALSE)\ng2 <- gam(co2_avg ~ s(decimal_date, bs=\"cs\"),  data = co2)\ndraw(g2, residuals=TRUE, rug=FALSE) \ng3 <- gam(co2_avg ~ s(decimal_date, bs=\"cs\", k = 25),  data = co2)\ndraw(g3, residuals=TRUE, rug=FALSE) \nsummary(g1)## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## co2_anomaly ~ s(year_fraction, bs = \"cs\")\n## \n## Parametric coefficients:\n##              Estimate Std. Error t value Pr(>|t|)\n## (Intercept) 3.364e-15  2.673e-02       0        1\n## \n## Approximate significance of smooth terms:\n##                    edf Ref.df     F p-value    \n## s(year_fraction) 8.296      9 530.7  <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## R-sq.(adj) =  0.976   Deviance explained = 97.8%\n## GCV = 0.092244  Scale est. = 0.085038  n = 119\nglance(g1) %>% kable()\ntidy(g1) %>% kable()\nco2 %>% add_residuals(g1) %>% add_fitted(g1) %>% kable() %>%  scroll_box(height = \"200px\")\nnew_data <- tibble(decimal_date = seq(2017, 2022, by = 0.05))\nnew_data %>% add_fitted(g3) %>%\n  ggplot(aes(decimal_date, .value)) + \n  geom_line(color = \"blue\", size = 2) +\n  geom_point(aes(y= co2_avg), data = co2) + my_theme + xlim(2017, 2022)\nconfint(g1, \"s(year_fraction)\", level = 0.95) %>% kable() %>%  scroll_box(height = \"200px\")\nconfint(g1, \"s(year_fraction)\", level = 0.95) %>% \n  ggplot(aes(year_fraction)) + \n  geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.25) + \n  geom_line(aes(y = est)) + my_theme\ns1 <- lm(co2_avg ~ splines::bs(decimal_date, df = 5), data = co2)\ntidy(s1) %>% kable(digits = 2)\nglance(s1) %>% kable(digits = 2)\na1 <- augment(s1, data = co2, se_fit = TRUE, interval=\"prediction\") \na1 %>%  ggplot(aes(decimal_date)) + \n  geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.2) + \n  geom_line(aes(y= .fitted)) +\n  geom_point(aes(y = co2_avg)) + \n  my_theme"},{"path":"smoothing.html","id":"locally-estimated-scatterplot-smoothing-loess","chapter":"17 GAM and LOESS smoothing","heading":"17.2 Locally Estimated Scatterplot Smoothing (LOESS)","text":"LOESS smooths constructed making large number quadratic (possibly linear) regression lines window moves along x-axis. degree fits width window (details) can adjusted. predictions many local regressions computed plotted “smooth” data. usually just imagine line drawn data way allows track fluctuations without specifying model.GAMs, summary function particularly easy interpret explore details, can see quadratic model “span” 0.75, meaning 75% data used regression. (weighting point regression varies function x, resulting continuous change predictions.)can use predict, residuals augment model objects lm fits previous lesson.line drawn using 12 points, might want generate smoother prediction creating new set dates. also add original data plot.LOESS function predict outside range data provided, select range new_data carefully get line start end near first last points.Now make two plots contrast results different sized windows (span) degree local regression models.LOESS fits slow take lot memory compared methods (time storage requirements increase like square number points), usually used small data sets.","code":"\nl1 <- loess(co2_anomaly ~ year_fraction, data = co2)\nsummary(l1)## Call:\n## loess(formula = co2_anomaly ~ year_fraction, data = co2)\n## \n## Number of Observations: 119 \n## Equivalent Number of Parameters: 4.58 \n## Residual Standard Error: 0.4647 \n## Trace of smoother matrix: 5  (exact)\n## \n## Control settings:\n##   span     :  0.75 \n##   degree   :  2 \n##   family   :  gaussian\n##   surface  :  interpolate      cell = 0.2\n##   normalize:  TRUE\n##  parametric:  FALSE\n## drop.square:  FALSE\naugment(l1, se_fit = TRUE) %>% kable() %>%  scroll_box(height = \"200px\")\naugment(l1, se_fit = TRUE) %>%\n  ggplot(aes(x = year_fraction, y = .fitted)) + \n  geom_line() + \n  geom_ribbon(aes(ymin = .fitted - 2*.se.fit, ymax = .fitted + 2*.se.fit), alpha = 0.20) + \n  my_theme\nnew_data = tibble(year_fraction = seq(min(co2$year_fraction), \n                                      max(co2$year_fraction),\n                                      length = 100))\naugment(l1, newdata = new_data, se_fit = TRUE) %>%\n  ggplot(aes(x = year_fraction, y = .fitted)) + \n  geom_line() + \n  geom_ribbon(aes(ymin = .fitted - 2*.se.fit,\n                  ymax = .fitted + 2*.se.fit), \n              alpha = 0.20) + \n  geom_point(aes(y = co2_anomaly), data = co2) +\n  my_theme\nl2 <- loess(co2_avg ~ decimal_date, data = co2, \n            degree = 1, span = 0.05)\nl3 <- loess(co2_avg ~ decimal_date, data = co2, \n            degree = 1, span = 0.25)\nnew_data = tibble(decimal_date = seq(min(co2$decimal_date), \n                                      max(co2$decimal_date),\n                                     length = 300))\na2 <- augment(l2, newdata = new_data, se_fit = TRUE) \na3 <- augment(l3, newdata = new_data, se_fit = TRUE) \nggplot(a2, aes(x = decimal_date, y = .fitted)) + \n  geom_line(col=\"green\") + \n  geom_ribbon(aes(ymin = .fitted - 2*.se.fit, \n                  ymax = .fitted + 2*.se.fit), \n              alpha = 0.20, fill=\"green\") + \n  geom_point(aes(y = co2_avg), data = co2) +\n  geom_line(data = a3, \n            col=\"blue\") + \n  geom_ribbon(data = a3, \n              aes(ymin = .fitted - 2*.se.fit, \n                  ymax = .fitted + 2*.se.fit), \n              alpha = 0.20, fill=\"blue\") + \n  my_theme"},{"path":"smoothing.html","id":"further-reading-11","chapter":"17 GAM and LOESS smoothing","heading":"17.3 Further reading","text":"LOESS (Wikipedia)Generalized additive models (Wikipedia)","code":""},{"path":"collaboration.html","id":"collaboration","chapter":"18 Collaborating with GitHub","heading":"18 Collaborating with GitHub","text":"lesson ’ll describe basics collaborating project GitHub. simple collaboration model; complex workflows possible. (particular, won’t forks, branches, pull requests. encourage learn , don’t need simple collaboration .) ’ll assume able work git repository hosted GitHub using RStudio assignments course.","code":""},{"path":"collaboration.html","id":"the-basics","chapter":"18 Collaborating with GitHub","heading":"18.1 The basics","text":"collaborative project, create repository team give team member write access repository. start, always creating (cloning) project onto computer GitHub.now least three copies repository: remote GitHub, copy computer, copy teammate’s computer. independent . edit file, make changes files computer “working directory”. Eventually stage commit changes local repository. need sychronize changes GitHub , eventually, teammate needs get changes .","code":""},{"path":"collaboration.html","id":"push-and-pull","chapter":"18 Collaborating with GitHub","heading":"18.2 Push and pull","text":"Getting changes GitHub called “pulling” (arrow Rstudio git panel). Sending committed changes GitHub called “pushing” (arrow git panel.)suggest sit work start pulling changes GitHub. work. Stage commit changes. Finally, stop work day, push changes GitHub.","code":""},{"path":"collaboration.html","id":"changes-that-dont-conflict","chapter":"18 Collaborating with GitHub","heading":"18.3 Changes that don’t conflict","text":"person edits file 1.rmd person B edits file 2.rmd, commit edits push GitHub, conflict changes made person. need pull changes made teammate complete version.]teammate pushed changes GitHub, try push changes without first getting version, get error message git, displayed pop-window:way resolve problem close message box, pull remote version GitHub. two likely outcomes :told conflictsYou told unresolvable conflicts need addressIn situation ’ve described , changes conflicts, git merge changes. still need push changes GitHub clicking arrow.","code":""},{"path":"collaboration.html","id":"resolving-conflicts-in-the-repository","chapter":"18 Collaborating with GitHub","heading":"18.4 Resolving conflicts (in the repository)","text":"person person B edit file “time” (meaning, person chance push edits GitHub can pull edits computer begin work) second person push changes file may get message conflict.Git records changes line line file (see line numbers left margin Rstudio editing window.) edits made person different lines edits made person B, git automatically merge two versions.people edit line, git know resolve conflicts. pull remote version computer, file edited show conflicting changes, like :need edit file fix problems. Git doesn’t supervise , outside rules. Just read versions, decide want, delete anything don’t want. stage, commit, push changes.Note, “conflict” resolution doesn’t help partner actually disagree something! problem can solved software. Git simply helps manage editing file knowing proposed changed disagree.","code":""},{"path":"collaboration.html","id":"reviewing-diffs","chapter":"18 Collaborating with GitHub","heading":"18.5 Reviewing diffs","text":"sit work project, always start pulling remote version computer. make sure partner’s latest work. see message “Already date.” know partner didn’t make changes since worked files. see message, git tell files changed. can review changes using “diff” tool Rstudio’s git pane.Open “diff” pane click History (button upper left). clicking commit message top panel, can see changes made files. bottom panel show changes, highlighting new lines green deleted lines red. Differences (“diffs”) recorded one line time, change edit, usually see pairs red green lines old version red new version green. text new, old version, see just green. lines deleted replaced anything, see just red lines.","code":""},{"path":"collaboration.html","id":"working-directly-through-the-github-website","chapter":"18 Collaborating with GitHub","heading":"18.6 Working directly through the GitHub website","text":"find workflow described easy use strongly suggest lets use features Rstudio collaboration tools GitHub. ways interact GitHub ’ll describe briefly.","code":""},{"path":"collaboration.html","id":"you-can-edit-files-directly-through-the-github-website","chapter":"18 Collaborating with GitHub","heading":"18.6.1 You can edit files directly through the GitHub website","text":"Find file want edit. Click link see contents file. (works .Rmd files, complicated files.) Click pencil (“edit”) icon upper right area window file shown. Make edits. Scroll bottom window click “commit” main branch.edits particularly handy trying edit tablet someone else’s computer.","code":""},{"path":"collaboration.html","id":"you-can-upload-or-download-files-directly-to-your-repository-through-the-website.","chapter":"18 Collaborating with GitHub","heading":"18.6.2 You can upload or download files directly to your repository through the website.","text":"main window project, beside bright green ‘Code’ button, click “Add file”. can upload new file repository.","code":""},{"path":"collaboration.html","id":"further-reading-12","chapter":"18 Collaborating with GitHub","heading":"18.7 Further reading","text":"exercises first link helpful, although written using git command line tutorial instead buttons Rstudio.Collaboration tutorial University Toronto, including case two people working together without team lead managing changesSoftware Carpentry lessons git githubUsing github collaboration software package (MIT general circulation model)compareThis add-Rstudio help visualize resolve merge conflicts.Using git Rstudio","code":""},{"path":"data-sources.html","id":"data-sources","chapter":"19 Finding and accessing data","heading":"19 Finding and accessing data","text":"Data available huge number sites internet run governments, NGOs, companies, industry associations, research projects, individuals. data come variety formats many easy read R, quite challenging. lesson introduce sources data. Partly help start learn navigate variety data sources, course part reason get thinking data might use project. information project see description evaluation page.","code":""},{"path":"data-sources.html","id":"finding-data","chapter":"19 Finding and accessing data","heading":"19.1 Finding data","text":"","code":""},{"path":"data-sources.html","id":"data-in-r-packages","chapter":"19 Finding and accessing data","heading":"19.1.1 Data in R packages","text":"Many datasets available part R packages. easiest use, often small designed demonstration purposes. example, gapminder package contains small portion data available gapminder website.go-datasets used demonstrating many simple visualizations:mtcars many well-known data datasets packagepenguins palmerpenguins packagegapminder gapminder package (see website Gapminder)diamonds, mpg, economics, midwest, msleep ggplot2 packagenycflights13 dbplyr packagegss_sm, gss_cat, gss_sib, gss_lon gss_lon socviz packageThe function datasets package datasets.load display list datasets R packages installed computer. much information dataset, know names, can read help page dataset.","code":""},{"path":"data-sources.html","id":"tidy-tuesday","chapter":"19 Finding and accessing data","heading":"19.1.2 Tidy Tuesday","text":"Tidy Tuesday project encourage people develop skills data visualization analysis using tidyverse packages R.\nweek new data set posted participants experiment create new visualzations. people share work GitHub social media.Tidy Tuesday website describes project catalog available datasets previous weeks.R package access data called tidytuesdayR. Examples using package ","code":""},{"path":"data-sources.html","id":"r-packages-for-accessing-data","chapter":"19 Finding and accessing data","heading":"19.1.3 R packages for accessing data","text":"many packages designed primarily provide access large collections data. examples.OECD data OECDcansim data Statistics Canadacancensus data Canadian census National household survey. need create account get API key use package. package documentation shows .","code":""},{"path":"data-sources.html","id":"websites-with-data-collections","chapter":"19 Finding and accessing data","heading":"19.1.4 Websites with data collections","text":"Naturally websites curate lists data available sites. ’ve found useful.World Data curated set 3000 charts documentation open source data.awesome public datasets project collects high quality public data, organized thematically.one person’s collection data various sourcesr-dir list freely available datasetsWorld Bank economic development indicators","code":""},{"path":"data-sources.html","id":"canadian-covid-data","chapter":"19 Finding and accessing data","heading":"19.1.5 Canadian COVID data","text":"Many countries organizations developed collections COVID-related data. sources Canada.Federal, BC, AB, SK, MB, , QC, NB, PE, NS,","code":""},{"path":"data-sources.html","id":"examples-of-accessing-data","chapter":"19 Finding and accessing data","heading":"19.2 Examples of accessing data","text":"","code":""},{"path":"data-sources.html","id":"gapminder","chapter":"19 Finding and accessing data","heading":"19.2.1 Gapminder","text":"Gapminder distributes many datasets, , collected organizations redistributing. webpage help search, browse access data. Using webpage found data population countries years 1800-2100 (many missing data, interpolated data, course many years projections). R code read work data. data 195 countries 302 years. selected five countries make simple plot.","code":"\npop <- read_csv(\"static/population_total.csv\")## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   .default = col_double(),\n##   country = col_character()\n## )\n## ℹ Use `spec()` for the full column specifications.\npop %>% filter(country %in% c(\"Canada\", \"China\", \"Chile\", \"Germany\", \"United States\")) %>%\n  pivot_longer(`1800`:`2100`, names_to = \"years\", values_to = \"population\") %>%\n  mutate(years = as.numeric(years)) %>%\n  ggplot(aes(x = years, \n             y = population, \n             color = fct_reorder(country, population, max, .desc=TRUE))) +\n  geom_line(size=2) +\n  scale_y_log10(labels = trans_format(\"log10\", math_format(10^.x))) +\n  labs(color = \"Country\")"},{"path":"data-sources.html","id":"consumer-price-index-in-canada","chapter":"19 Finding and accessing data","heading":"19.2.2 Consumer price index in Canada","text":"One measure inflation effect prices. table Statistics Canada reports 1 million rows data measure. Statistics Canada tables extreme version “long” data, usually require lot filtering get just rows want. want make use dpylr functions summarize count study structure data.Let’s look data Canada whole.world data many compliations data across many countries. table listing causes death time countries. link csv file page can easily read R. often case, large table (nearly 7000 observations 37 variables). need explore data bit understand . one simple plot can made.course, probably interesting plot per capita deaths; least, enable different sort comparison.","code":"\n# Population and projection in a huge table with 2 million rows, 300 MB of data\n# cansim::get_cansim(\"17100057\")  \ncpi <- cansim::get_cansim(\"18-10-0004-01\")## Accessing CANSIM NDM product 18-10-0004 from Statistics Canada## Parsing data## Folding in metadata\ncpi %>% filter(`Products and product groups` == \"All-items\") %>%\n  count(GEO)## # A tibble: 30 x 2\n##    GEO                                                    n\n##    <chr>                                              <int>\n##  1 Alberta                                              508\n##  2 British Columbia                                     508\n##  3 Calgary, Alberta                                     600\n##  4 Canada                                              1284\n##  5 Charlottetown and Summerside, Prince Edward Island   564\n##  6 Edmonton, Alberta                                    600\n##  7 Halifax, Nova Scotia                                 600\n##  8 Iqaluit, Nunavut                                     217\n##  9 Manitoba                                             508\n## 10 Montréal, Quebec                                     600\n## # … with 20 more rows\ncpi %>% filter(`Products and product groups` == \"All-items\",\n               GEO == \"Canada\") %>%\n  select(REF_DATE, VALUE) %>%\n  mutate(date = lubridate::ym(REF_DATE)) %>%\n  ggplot(aes(x = date, y = VALUE)) +\n  geom_line() + \n  labs(x = \"Date\", y = \"All items CPI\",\n       title = \"Consumer price index in Canada\",\n       caption = \"Scaled so that 2002 = 100\") + \n  scale_y_log10()\ndeath <- read_csv(\"static/annual-number-of-deaths-by-cause.csv\", guess_max = 10000)## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   .default = col_double(),\n##   Entity = col_character(),\n##   Code = col_character(),\n##   `Number of executions (Amnesty International)` = col_character()\n## )\n## ℹ Use `spec()` for the full column specifications.\ndeath %>% filter(Entity %in% c(\"Canada\", \"China\", \"Germany\", \"United States\"),\n                 Year == 2015) %>%\n  select(Entity, `Deaths - Road injuries - Sex: Both - Age: All Ages (Number)`:`Terrorism (deaths)`) %>%\n  pivot_longer(`Deaths - Road injuries - Sex: Both - Age: All Ages (Number)`:`Terrorism (deaths)`,\n               names_to = \"Cause\", values_to = \"Deaths\") %>%\n  mutate(Cause = str_remove(Cause, \"Deaths - \") %>% \n           str_remove(\" - Sex: Both - Age: All Ages \\\\(Number\\\\)\")) %>%\n  ggplot(aes(x = Deaths, y = fct_reorder(Cause, Deaths), \n             color = Entity)) +\n  geom_point() +\n  scale_x_log10()## Warning: Transformation introduced infinite values in continuous x-axis"},{"path":"data-sources.html","id":"other-r-packages-related-to-data-collection","chapter":"19 Finding and accessing data","heading":"19.3 Other R packages related to data collection","text":"Sometimes way find data table website document. datapasta package useful common reformatting tasks required copy--paste.Sometimes data want available graph – just points lines numeric data . variety “data thief” tools extracting quantitative data images, example, web app WebPlotDigitizer.","code":""},{"path":"data-sources.html","id":"describing-data","chapter":"19 Finding and accessing data","heading":"19.4 Describing data","text":"done work find data, also want research learn “5 Ws” data. addition variables observation represents, want know collected , , , . ’s good idea write “readme” summarize learn. term project asked provide information datasets analyze, also aware online guides provide advice documenting data.","code":""},{"path":"data-sources.html","id":"distribution-of-data","chapter":"19 Finding and accessing data","heading":"19.5 Distribution of data","text":"want distribute analysis data redistribute original data, please sure respect terms use data. Many people encourage use FAIR data usage principles.","code":""},{"path":"data-sources.html","id":"further-reading-13","chapter":"19 Finding and accessing data","heading":"19.6 Further reading","text":"Importing data R4DSRoger Peng’s notes importing dataAn older comprehensive guide importing data","code":""},{"path":"reproduce.html","id":"reproduce","chapter":"20 Reproducible reports","heading":"20 Reproducible reports","text":"’ve seen throughout course combine computer code, data, tabular graphical resultss, natural language writing explain communicate work. R markdown documents great tool writing reports ensuring reproducible. lesson examine features R markdown help customize reports, make easier revise, make effective data analysis communication tools.","code":""},{"path":"reproduce.html","id":"what-is-reproducibility-and-why-should-i-care","chapter":"20 Reproducible reports","heading":"20.1 What is reproducibility and why should I care?","text":"Many people use R interactive computer tool. means sit keyboard, type series commands, store results want. ’s like fancy calculator. fantastic way explore data, learn R, test ideas quickly. work reproducible. need recording everything done reproduce analysis. need change small step work, need repeat steps.course, using R slightly disciplined way, least assigned work. every project, create new R markdown file, write computer instructions code “chunks”, interspersed English (natural human language) explanations. Rstudio, can still use R interactively mode, clicking “play” button chunk seeing output. analysis done, can “knit” whole document. two important things:code executed order top bottom, andthe results kept new file.may experience course preparing R markdown file, trying knit , discovering error. error evidence R markdown document complete, rely , able repeat steps later . first way R markdown aids reproducing work giving easy way test instructions complete. can knit file today, can turn computer, come back week, confident able reproduce work .stressed value communication course. purposes just want communicate sending someone knitted report. work team, communication just knitted report, includes instructions needed recreate report. R markdown great . analyses require just one R markdown file. require data. also learned use R projects, version control, share files using GitHub. Now can write document show someone else reproduce work, gathering data making report, can confident able make steps work even add work time-efficient way.","code":""},{"path":"reproduce.html","id":"what-are-barriers-to-reproducibility-and-how-i-can-overcome-them","chapter":"20 Reproducible reports","heading":"20.2 What are barriers to reproducibility and how I can overcome them?","text":"","code":""},{"path":"reproduce.html","id":"file-paths","chapter":"20 Reproducible reports","heading":"20.2.1 File paths","text":"complex project, multiple directories, possibly many data files. reading data file, need refer file name. Make sure never use way files organized computer part script. particular never write anything like:way work someone else’s computer! reorganize Documents folder, won’t even work computer! instead?using R packages organizing files project folder (sub-folders) created just project. good first step. package provides useful function allows refer file relative directory .Rproj file stored. important make R code work someone else’s computer. ’s use :code works computer, R project, give whole folder collaborator, don’t need worry organize files.Sometimes think dataset large put project folder. data may used multiple projects, don’t want multiple copies. ? best options : put common data files GitHub repository (public private), deposit data online repository osf.io, create R data package manage data computer computers collaborators. method prefer depend many factors including size data, often changes, whether public, allowed redistribute .","code":"my_data <- read_csv(\"/Users/airwin/Documents/Stats-project/data/my_data.csv\")my_data <- read_csv(here(\"static\", \"annual-number-of-deaths-by-cause.csv\"))"},{"path":"reproduce.html","id":"caching-time-consuming-computations","chapter":"20 Reproducible reports","heading":"20.2.2 Caching time-consuming computations","text":"R markdown great way manage analysis notebook, every time want update analysis, need recalculate everything document. possible store (cache) results code chunk giving name setting cache=TRUE. store results computation markdown file recomputed, stored results used. can save time, also lead unpredictable results depending results one code chunk external data influence cached code chunk.example using code chunk header {r test_caching, cache=TRUE}:going use feature, read caching Rmarkdown. page describes --caching method recommend well.","code":"\ns1 <- summarize(mpg, count = n()) \ns1## # A tibble: 1 x 1\n##   count\n##   <int>\n## 1   234"},{"path":"reproduce.html","id":"finding-and-installing-r-packages","chapter":"20 Reproducible reports","heading":"20.2.3 Finding and installing R packages","text":"R packages can obtained several sources. common sources CRAN, Bioconductor, GitHub. widely used packages CRAN checked regularly sure still work. Anyone can distribute package GitHub make available, packages missing level quality control. used Bioconductor course; CRAN-like repository forcussed bioinformatics computations.Installing new package CRAN easy. put appropriate library function call R markdown document, missing package, Rstudio offer download . package GitHub, Rstudio won’t able help. usual process search package Google, install . help colleagues write installation command next library function call, preface comment character # stop code executed. (example top source file: click “view source” lower right window.)","code":""},{"path":"reproduce.html","id":"make-your-report-look-good","chapter":"20 Reproducible reports","heading":"20.3 Make your report look good","text":"easy read report better report. (Formatting turn bad report good one, good formatting can help make good results easier digest.)Specific recommendations:Use headings (lines starting one #.) Always put blank line heading row.Use bulletted numbered lists (start seqeunce lines * 1.) appropriateFormat code nicely. Use style guide. use automatic code formatter styler (see ). Leave blank line code chunk blocks.Format output nicely. includes tables figures. (See .)knit report, read formatted version, revise markdown source, repeat.examples formatting tips, see source file: click “view source” lower right window.Headings make markdown document easier navigate . Look “show outline” button upper right Rstudio’s editing pane.","code":""},{"path":"reproduce.html","id":"code-formatting","chapter":"20 Reproducible reports","heading":"20.4 Code formatting","text":"tidyverse style guide. Google , revised tidyverse guide. ’s worthwhile reading guides. Code formatted standard way easier read easier someone else read.carelessly formatted code.code (output) formatted using styler:suggest write neat easy read code markdown documents. Don’t use automatic tidying excuse make messy code.","code":"gapminder %>% filter(continent ==\"Europe\") %>% group_by(country) %>% summarize(mean_life_exp = mean(lifeExp), mean_GDP = mean(gdpPercap)) %>% ggplot(\naes(color = mean_life_exp, x = log10(mean_GDP), y=fct_reorder(country, mean_life_exp))) + geom_point()\ngapminder %>%\n  filter(continent == \"Europe\") %>%\n  group_by(country) %>%\n  summarize(mean_life_exp = mean(lifeExp), mean_GDP = mean(gdpPercap)) %>%\n  ggplot(\n    aes(color = mean_life_exp, x = log10(mean_GDP), y = fct_reorder(country, mean_life_exp))\n  ) +\n  geom_point()"},{"path":"reproduce.html","id":"customization-of-result-reporting-in-r-markdown","chapter":"20 Reproducible reports","heading":"20.5 Customization of result reporting in R markdown","text":"first line code chunk can simple {r} can also include many options braces. markdown book describes options available. demonstrate chunk options related figures formatting output.Knitting document usually stops error encountered. safety measure alert document reproducible becuase errors. rare occasions may want use option error=TRUE allow error messages appear knitted output stop knitting process.can output graphics multiple file formats adding dev = c(\"png\", \"pdf\") (formats) chunk options. files deleted unless reqest kept, easily done caching results least one code chunk.can use chunk options control whether knitted document includes:code (echo=FALSE hide)results (results='hide')messages (message=FALSE hide)warnings (warning=FALSE hide)plots (fig.show='hide')everything (include=FALSE)can also stop code evaluated setting eval=FALSE.multiple lines code output chunk, knitted document contain several blocks code output space blocks. blocks can combined one setting collapse=TRUE.R code formatted standardized way easier others read. can get code automatically reformatted using tidy=TRUE formatR package. styler package another approach automatic reformatting R code. Use tidy='styler' code chunk options.can change size figure using fig.width = 6 fig.height=4 6 4 lengths inches. can also use .width=\"85%\" set width figure proportion document width. can center figure horizontally using fig.align='center'.can use R variables code chunk options.","code":"\n1 + \"A\"## Error in 1 + \"A\": non-numeric argument to binary operator\nmpg %>% ggplot(aes(displ, hwy)) + geom_point()"},{"path":"reproduce.html","id":"documenting-which-packages-you-use","chapter":"20 Reproducible reports","heading":"20.6 Documenting which packages you use","text":"use R long enough enough people, discover R packages get revised don’t always work way used . can major impediment reproducibility. simplest solution problem document R packages use analysis adding line code end report lists packages version numbers use. looking knitted output, user trouble (possibly future!) can look see packages changed.want produce bibliographic citations packages can use report package:absolutely guarantee can use R code future, applications benefit keeping copies required packages computer system. packrat checkpoint packages can help manage packages. never felt need level reproducibility, find reassuring know tools exist.","code":"\nsessionInfo()## R version 4.0.3 (2020-10-10)\n## Platform: x86_64-apple-darwin17.0 (64-bit)\n## Running under: macOS Mojave 10.14.6\n## \n## Matrix products: default\n## BLAS:   /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib\n## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib\n## \n## locale:\n## [1] en_CA.UTF-8/en_CA.UTF-8/en_CA.UTF-8/C/en_CA.UTF-8/en_CA.UTF-8\n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] gapminder_0.3.0 here_1.0.1      report_0.2.0    forcats_0.5.0  \n##  [5] stringr_1.4.0   dplyr_1.0.2     purrr_0.3.4     readr_1.4.0    \n##  [9] tidyr_1.1.2     tibble_3.0.4    ggplot2_3.3.2   tidyverse_1.3.0\n## \n## loaded via a namespace (and not attached):\n##  [1] Rcpp_1.0.6           lubridate_1.7.9.2    assertthat_0.2.1    \n##  [4] rprojroot_2.0.2      digest_0.6.27        R6_2.5.0            \n##  [7] cellranger_1.1.0     backports_1.2.1      reprex_0.3.0        \n## [10] evaluate_0.14        httr_1.4.2           pillar_1.4.7        \n## [13] rlang_0.4.9          readxl_1.3.1         rstudioapi_0.13     \n## [16] jquerylib_0.1.3      R.utils_2.10.1       R.oo_1.24.0         \n## [19] effectsize_0.4.3-1   rmarkdown_2.6.4      styler_1.3.2        \n## [22] labeling_0.4.2       munsell_0.5.0        broom_0.7.4         \n## [25] compiler_4.0.3       modelr_0.1.8         xfun_0.19           \n## [28] pkgconfig_2.0.3      parameters_0.11.0.1  htmltools_0.5.0.9003\n## [31] downlit_0.2.1        insight_0.13.0.1     tidyselect_1.1.0    \n## [34] bookdown_0.21.6      fansi_0.4.1          crayon_1.3.4        \n## [37] dbplyr_2.0.0         withr_2.3.0          R.methodsS3_1.8.1   \n## [40] rappdirs_0.3.1       grid_4.0.3           jsonlite_1.7.2      \n## [43] gtable_0.3.0         lifecycle_0.2.0      DBI_1.1.0           \n## [46] magrittr_2.0.1       bayestestR_0.8.2.1   scales_1.1.1        \n## [49] cli_2.2.0            stringi_1.5.3        farver_2.0.3        \n## [52] fs_1.5.0             xml2_1.3.2           bslib_0.2.3.9000    \n## [55] ellipsis_0.3.1       generics_0.1.0       vctrs_0.3.6         \n## [58] tools_4.0.3          R.cache_0.14.0       glue_1.4.2          \n## [61] hms_0.5.3            yaml_2.2.1           colorspace_2.0-0    \n## [64] rvest_0.3.6          knitr_1.30           haven_2.3.1         \n## [67] sass_0.2.0.9005\nreport::cite_packages()  ##   - H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016.\n##   - Hadley Wickham (2019). stringr: Simple, Consistent Wrappers for Common String Operations. R package version 1.4.0. https://CRAN.R-project.org/package=stringr\n##   - Hadley Wickham (2020). forcats: Tools for Working with Categorical Variables (Factors). R package version 0.5.0. https://CRAN.R-project.org/package=forcats\n##   - Hadley Wickham (2020). tidyr: Tidy Messy Data. R package version 1.1.2. https://CRAN.R-project.org/package=tidyr\n##   - Hadley Wickham and Jim Hester (2020). readr: Read Rectangular Text Data. R package version 1.4.0. https://CRAN.R-project.org/package=readr\n##   - Hadley Wickham, Romain François, Lionel Henry and Kirill Müller (2020). dplyr: A Grammar of Data Manipulation. R package version 1.0.2. https://CRAN.R-project.org/package=dplyr\n##   - Jennifer Bryan (2017). gapminder: Data from Gapminder. R package version 0.3.0. https://CRAN.R-project.org/package=gapminder\n##   - Kirill Müller (2020). here: A Simpler Way to Find Your Files. R package version 1.0.1. https://CRAN.R-project.org/package=here\n##   - Kirill Müller and Hadley Wickham (2020). tibble: Simple Data Frames. R package version 3.0.4. https://CRAN.R-project.org/package=tibble\n##   - Lionel Henry and Hadley Wickham (2020). purrr: Functional Programming Tools. R package version 0.3.4. https://CRAN.R-project.org/package=purrr\n##   - Makowski, D., Lüdecke, D., & Ben-Shachar, M.S. (2020). Automated reporting as a practical tool to improve reproducibility and methodological best practices adoption. CRAN. Available from https://github.com/easystats/report. doi: .\n##   - R Core Team (2020). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.\n##   - Wickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686\n# See also report::report(sessionInfo())"},{"path":"reproduce.html","id":"using-other-languages-with-r-markdown","chapter":"20 Reproducible reports","heading":"20.7 Using other languages with R markdown","text":"R markdown primarily designed work R, many software tools commonly combined R. specific tools outside goals course, valuable learn connections R, R markdown computer tools.data science, many people work python programming language. Python works R markdown much way R. Instead starting code chunk {r}, begin {python}. ’s exampleThis example requires R package reticulate working python interpreter R can find.can use language julia R markdown well R package JuliaCall julia installed computer.langauges excellent tools using directly can can directly connected R functions, method available R markdown. Related topic interoperation computing langauges, departing topic R markdown, can also write C++ code R session execute compiled code directly R.SQL language describing queries widely used style database. R contains tools interacting SQL databases, can aslo generate SQL code dplyr functions.using tools making work reproducible? R markdown flexible tool lets use just R, workflow contains steps external R, can sometimes still included report.","code":"import random\nrandom.seed(8678309)  # Set a random seed to make the work reproducible\n[ random.random() for i in range(10) ]## [0.3384735123832189, 0.9944778375442942, 0.27482639950589893, 0.8162715855993294, 0.1201299523948246, 0.6565046831819024, 0.36766801924268533, 0.02960201494828596, 0.1228032738500725, 0.7724028393148923]f(x) = x ^ 2## f (generic function with 1 method)f.(1:5)## 5-element Array{Int64,1}:\n##   1\n##   4\n##   9\n##  16\n##  25\nlibrary(dbplyr)\nlibrary(RSQLite)\ncon <- DBI::dbConnect(RSQLite::SQLite(), dbname = \":memory:\")\ncopy_to(con, palmerpenguins::penguins, \"penguins\")\npenguins <- tbl(con, \"penguins\")\npenguins_aggr <-\n  penguins %>%\n  group_by(species) %>%\n  summarize(\n    N = n(),\n    across(ends_with(\"mm\"), sum, .names = \"TOT_{.col}\"),\n    across(ends_with(\"mm\"), var, .names = \"VAR_{.col}\"),\n    across(ends_with(\"mm\"), mean, .names = \"AVG_{.col}\"),\n  )\npenguins_aggr## # Source:   lazy query [?? x 11]\n## # Database: sqlite 3.34.1 [:memory:]\n##   species     N TOT_bill_length… TOT_bill_depth_… TOT_flipper_len…\n##   <chr>   <int>            <dbl>            <dbl>            <int>\n## 1 Adelie    152            5858.            2770.            28683\n## 2 Chinst…    68            3321.            1253.            13316\n## 3 Gentoo    124            5843.            1843.            26714\n## # … with 6 more variables: VAR_bill_length_mm <dbl>, VAR_bill_depth_mm <dbl>,\n## #   VAR_flipper_length_mm <dbl>, AVG_bill_length_mm <dbl>,\n## #   AVG_bill_depth_mm <dbl>, AVG_flipper_length_mm <dbl>\ncapture.output(show_query(penguins_aggr))## [1] \"<SQL>\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n## [2] \"SELECT `species`, COUNT(*) AS `N`, SUM(`bill_length_mm`) AS `TOT_bill_length_mm`, SUM(`bill_depth_mm`) AS `TOT_bill_depth_mm`, SUM(`flipper_length_mm`) AS `TOT_flipper_length_mm`, VARIANCE(`bill_length_mm`) AS `VAR_bill_length_mm`, VARIANCE(`bill_depth_mm`) AS `VAR_bill_depth_mm`, VARIANCE(`flipper_length_mm`) AS `VAR_flipper_length_mm`, AVG(`bill_length_mm`) AS `AVG_bill_length_mm`, AVG(`bill_depth_mm`) AS `AVG_bill_depth_mm`, AVG(`flipper_length_mm`) AS `AVG_flipper_length_mm`\"\n## [3] \"FROM `penguins`\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n## [4] \"GROUP BY `species`\"\nrm(con)"},{"path":"reproduce.html","id":"further-reading-14","chapter":"20 Reproducible reports","heading":"20.8 Further reading","text":"Project workflow R4DSGenerating SQL dbplyrPeng. Reproducible research computatonal science. 10.1126/science.1213847LeVeque et al. Reproducible research scientific computingSandve et al. Ten simple rules reproducible computational research. 10.1371/journal.pcbi.1003285","code":""},{"path":"pca.html","id":"pca","chapter":"21 Principal component analysis","heading":"21 Principal component analysis","text":"Datasets said high-dimensional several quantitative (categorical) variables recorded observation. Visualizing datasets can challenging, visualizations work best two dimensions difficult visualize 4 dimensions simultaneously. Many plots pairs variables can displayed, projections require viewer try reconstruct complex interactions among variables. Ordination suite techniques creating projections high-dimensional data, usually 2 3 dimensions. name refers goal ordering observations two dimensional plane observations close high-dimensional space still close projected 2-dimensional space. features original dataset can maintained – information lost – care must taken interpreting ordination plots. course examine Principal Component Analysis (lesson) metric non-metric dimensional analysis (next). many techniques dimensionality reduction.Principal component analysis (now , PCA) defines new variables weighted sums (.k.. linear combinations) variables data. sums called principal components. principal components can used new axes data, defining new coordinates point. underlying transformation rotation (usually scaling) used form new coordinate system. coordinate along axis known first, second, etc., principal component. rotation chosen maximize variance first principal component. second principal component perpendicular first, chosen much remaining variation possible along axis. . way can select many first principal components like smaller set variables represent much variation original data possible.studied linear algebra, want know principal component analysis performed following steps:center data origin subtracting mean variable (optionally scale variable standard deviation),compute covariance matrix (optionally correlation matrix),compute eigenvalues covariance matrix.eigenvalues corresponding eigenvectors sorted largest smallest.\nproportion variance explained principal component proportional eigenvalues.\nrotation matrix orthogonal matrix composed eigenvalues.\nexplained applied linear algebra course (Math 2040) section 11.12 Peter Selinger’s book textbook.","code":""},{"path":"pca.html","id":"example-1","chapter":"21 Principal component analysis","heading":"21.1 Example","text":"simple example two dimensions really helpful. one PCA two variables, can just plot data normal scatterplot, demonstration shows principal components chosen.First, let’s look regular scatterplot two variables reasonably strong linear relationship. ’ve used coord_fixed force scale vertical horizontal axes, make plot easier compare next plot draw.Now let’s perform PCA. three results: amount variation accounted principal component, directions principal components along original axes, coordinates observations along principal component axes.tidy functions let obtainthe percent total variance projected along (“explained ”) principal component (determined eigenvalues)directions original axes along new principal component axes (rotation)original data transformed new principal component axes (scores)can perform calculations “hand” following linear algebra instructions:“scores” output equal original data multiplied rotation matrix.Now ’ll plot data projected onto principal components. Notice wide thin (especially compared previous plot) data rotated arrange much variation possible horizontal direction.easy way display results PCA make biplot using ggfortify package. biplot shows observations black dots original axes red vectors. option scale=0 keeps scaling original plot. normal usage coord_fixed() original plot use scale=0 plot.Normal use autoplot allow changing scale two principal components (scale = 1) allow axes scaled independently (coord_fixed()):autoplot function convenient can customize many features using options ggbiplot. like know exactly plot drawn check understanding, ’ll show reproduce plot using augment ggplot.can make plot (called biplot) raw data using scaling factors (lam, scaling) commonly used plots:want scores don’t care scaling, can just use augment ggplot:","code":"\ncars %>% ggplot(aes(x=speed, y=dist)) + geom_point() + coord_fixed()\npca1 <- cars %>% prcomp()\npca1 %>% tidy(matrix = \"eigenvalues\") %>% kable()\npca1 %>% tidy(matrix = \"rotation\") %>% kable()\npca1 %>% tidy(matrix = \"scores\") %>% \n  pivot_wider(names_from = \"PC\", names_prefix = \"PC_\", values_from = \"value\") %>% \n  kable() %>% scroll_box(height = 50)\ncarsM <- scale(as.matrix(cars), center = TRUE, scale = FALSE)  # If scale = TRUE, then use correlation matrix below\nB1 <- cov(carsM)  \nB2 <- (t(carsM) %*% carsM ) / (nrow(carsM) - 1)  # divide (M^T * M) by N-1 to get covariance matrix\nsqrt(eigen(B1)$values)## [1] 26.12524  3.08084\neigen(B1)$vectors##           [,1]       [,2]\n## [1,] 0.1656479 -0.9861850\n## [2,] 0.9861850  0.1656479\nrotation <- pca1 %>% tidy(matrix = \"rotation\") %>% pull(value) %>% matrix(2, 2)  # also available as  pca1$rotation\ncenter <- cars %>% summarize(speed = mean(speed), dist = mean(dist)) # also available as pca1$center\nscores1 <- pca1 %>% tidy(matrix = \"scores\") %>% pull(value) %>% matrix(ncol = 2, byrow = TRUE)\n# scores2 <- t((t(cars) - pca1$center)) %*% pca1$rotation\nscores2 <- scale(cars, center = TRUE, scale = FALSE) %*% rotation\npca1 %>% tidy(matrix = \"scores\") %>% \n  pivot_wider(names_from=\"PC\", names_prefix = \"PC_\", values_from = \"value\") %>%\n  ggplot(aes(x=PC_1, y=PC_2)) + geom_point() + coord_fixed()\nautoplot(pca1, data= cars, loadings=TRUE, loadings.label=TRUE, scale=0) + coord_equal()## Warning: `select_()` is deprecated as of dplyr 0.7.0.\n## Please use `select()` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_warnings()` to see where this warning was generated.\nautoplot(pca1, data= cars, loadings=TRUE, loadings.label=TRUE, scale=1, variance_percentage = TRUE)\nlam <- pca1$sdev[1:2] * sqrt(nrow(pca1$x))\nscaling <- min(apply(abs(scores2), 2, max) / apply(abs(rotation), 2, max) / lam) * 0.8\nve <- pca1$sdev^2 / sum(pca1$sdev^2)\nscores2 %>% as_tibble() %>% ggplot(aes(V1/lam[1], V2/lam[2])) + geom_point()  + \n  geom_segment(aes(x = 0, y = 0, xend = V1*scaling, yend = V2*scaling), \n               arrow = arrow(length = unit(0.25,\"cm\")),\n               color = \"red\",\n               data = as_tibble(rotation)) +\n  labs(x = paste0(\"PC1: \", round(ve[1]*100, 2), \"%\"),\n       y = paste0(\"PC2: \", round(ve[2]*100, 2), \"%\"))## Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if `.name_repair` is omitted as of tibble 2.0.0.\n## Using compatibility `.name_repair`.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_warnings()` to see where this warning was generated.\npca1 %>%\n  augment(cars) %>%\n  ggplot(aes(x=.fittedPC1, y= .fittedPC2)) +   # divide by lam[1] and lam[2] to get the scaled version\n  geom_point()"},{"path":"pca.html","id":"second-example-penguins.","chapter":"21 Principal component analysis","heading":"21.1.1 Second example: penguins.","text":"palmer penguin data 4 quantitative variables. scale mean 0 standard deviation 1, since units magnitude numbers comparable. colour points speices make patterns easier see.autoplot quirks: variable names must quoted colour must spelled ‘u’. (ggplot functions allow alternate spellings - color without ‘u’, summarize ‘s’ instead ‘z’.) don’t know easy way use ggrepel package autoplot avoid overprinting text arrows dots.Gentoo penguins mostly distinguished highest body mass. Adélie Chinstrap penguins similar masses, distinguished dimensions bills flippers. can use frame.type shade areas containing\ndata species highlight points concentrated (color).Without PCA, attempt see patterns making complex array scatterplots pair variables.practice seeing many pairwise differences pairs plot can revealed single PCA.customized ggplot PCA results. simplifed work first example using conventional scaling; instead just picked scales arrows looked good. Need fix .","code":"\npenguins_no_na = na.omit(penguins)\npca2 <- prcomp(penguins_no_na %>% dplyr::select(flipper_length_mm, body_mass_g, bill_length_mm, bill_depth_mm), scale=TRUE )\nautoplot(pca2, data = penguins_no_na, loadings=TRUE, loadings.label=TRUE,\n         colour='species', shape='island')\nautoplot(pca2, data = penguins_no_na, loadings = TRUE, loadings.label = TRUE,\n         colour = 'species', shape = 'island', \n         frame.type = \"norm\", frame.level = 0.90)   # frame.type convex, norm, euclid, t; see ?ggbiplot\npenguins_no_na %>% \n  dplyr::select(flipper_length_mm, body_mass_g, bill_length_mm, bill_depth_mm, species) %>% \n  ggpairs(aes(color=species))\nrotation2 <- pca2 %>% \n  tidy(matrix = \"rotation\") %>%\n  pivot_wider(names_from = PC, names_prefix = \"PC\", values_from = value) \npca2 %>%\n  augment(penguins_no_na) %>%\n  ggplot() +\n  geom_point(aes(x = .fittedPC1, y = .fittedPC2, color = species, shape = island)) +\n  geom_segment(data = rotation2, mapping = aes(x = 0, xend = 3*PC1, y = 0, yend = 3*PC2), color = \"blue\",\n               arrow = arrow(angle = 20, type = \"closed\"))  +\n  geom_label_repel(data = rotation2,\n                  aes(x = 3*PC1, y = 3*PC2, label = column), \n                  color = \"darkblue\", fill = \"#FFFFFF80\",\n                  arrow = arrow(angle = 20, type = \"closed\")) +\n  labs(x = \"PC 1\", y = \"PC 2\")"},{"path":"pca.html","id":"further-reading-15","chapter":"21 Principal component analysis","heading":"21.2 Further reading","text":"Claus Wilke’s PCA tutorialExample PCA iris datahttps://juliasilge.com/blog/stack-overflow-pca/PCA using tidymodelsPCA","code":""},{"path":"mds.html","id":"mds","chapter":"22 Multidimensional scaling","heading":"22 Multidimensional scaling","text":"Multidimensional scaling (MDS) another approach ordination. purpose similar goals PCA, methods bit different. MDS, starting point similarity, distance matrix, providing measurements pairs data. Many different functions can used compute similarity matrix. Commonly distance functions used. quantitative data skewed distributions, good way interpret distance points, data may converted ranks (1, 2, 3, …) similarity measure computed; method called non-metric multidimensional scaling (NMDS) recognition fact information presented related distance.","code":""},{"path":"mds.html","id":"cities-on-a-map","chapter":"22 Multidimensional scaling","heading":"22.0.1 Cities on a map","text":"easy understand example MDS starts matrix giving distance pair cities set. MDS visualization scatters points across plane, reconstructing geographic separation points.dataset built database world cities, selected cities 5 million plus cities Canada. included maximum 4 cities per country one one region globe strongly concentrated points. can get data simplemaps make subset.Now calculate distance pairs cities. ’ve shown two ways – using great circle distance along surface Earth, using distance projects surface Earth onto plane first. goal reconstruct map shown , use projected distance. like instead show great-circle distances cities plane, use geodesic distance.Perform MDS (principal coordinates analysis). direction \ntwo main axes reversed relative original map; ’ve reversed x y axes match customary view world.","code":"\ncities <- read_csv(\"static/selected_cities.csv\")## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   city = col_character(),\n##   city_ascii = col_character(),\n##   lat = col_double(),\n##   lng = col_double(),\n##   country = col_character(),\n##   iso2 = col_character(),\n##   iso3 = col_character(),\n##   admin_name = col_character(),\n##   capital = col_character(),\n##   population = col_double(),\n##   id = col_double()\n## )\nggplot(cities, aes(x=lng, y=lat)) + \n  geom_point() +\n  geom_text_repel(aes(label=city), size=2) \nmymap <- get_stamenmap(bbox = c(left = -150, bottom = -60, right = 175, top = 75), zoom=3, maptype = \"terrain-background\")\nggmap(mymap) + \n  geom_point(data = cities, aes(x=lng, y=lat)) +\n  geom_text_repel(data = cities, aes(x =lng, label=city), size=2) \ncity_distance <- dist(cities %>% dplyr::select(lng, lat) %>% as.matrix()) #  distance in equirectangular projection\n  # https://en.wikipedia.org/wiki/Equirectangular_projection\nmds1 <- cmdscale(city_distance)\ncolnames(mds1) <- c(\"V1\", \"V2\")\nbind_cols(cities, as_tibble(mds1)) %>%\n  ggplot(aes(x = V1, y = V2)) + \n  geom_point() + \n  geom_text_repel(aes(label = city), size=2) +\n  scale_x_reverse() + scale_y_reverse() +\n  labs(title = \"Map reconstructed from equirectangular distance matrix\",\n       x = \"\", y = \"\")\ncity_distance <- rdist.earth(cities %>% dplyr::select(lng, lat) %>% as.matrix(), \n                             miles = FALSE) # geodesic distance\nmds1 <- cmdscale(city_distance)\ncolnames(mds1) <- c(\"V1\", \"V2\")\nbind_cols(cities, as_tibble(mds1)) %>%\n  ggplot(aes(x = V1, y = V2)) + \n  geom_point() + \n  geom_text_repel(aes(label = city), size=2) +\n  scale_x_reverse() + scale_y_reverse() +\n  labs(title = \"Map reconstructed from great-circle distance matrix\",\n       x = \"\", y = \"\")"},{"path":"mds.html","id":"nmds-example","chapter":"22 Multidimensional scaling","heading":"22.1 NMDS example","text":"Morse code way sending text messages using just two symbols: dot dash, designed transmitted person clicking key make sounds receiver listening sounds translating message arrives.dataset created part experiment measure rate patterns sounds one symbol confused sounds different symbol. matrix symmetric dissimilarity measure. Rows columns vary across 36 symbols tested (26 letters 10 numeric digits). diagonals 0s. diagonal values large sounds likely confuesed. Smaller dissimilarities correspond symbols likely confused. small excerpt table shown.Use function metaMDS package vegan perform NMDS ordination. ordiplot function shows objects dissimilarity matrix two-dimensional “ordination plot”. Points closer together likely confused (less dissimilar).next plot compares distances original data distances represented ordination. ordination represents original data well, close straight line. point every pairwise comparison. case 36 * 35 / 2 = 630 distances compare. labeled points largest distortion imposed ordination.can also access points ordination make “ordiplot” using ggplot. relative position points plat thing matters – rotation translation plot contains information.might want understand NMDS analysis terms properties Morse Code signals. table length (1-5) ratio short long (dots dashes) signals symbol. envfit function finds direction variables increases rapidly across ordination plane. summary reports direction correlation variables position ordination plot. arrow “length” follows pattern ordination well, arrow ratio short long accounts half variation ordination plot.arrows show direction rapid average increase variable.method reproduce plot using ggplot. First use str(ef) examine structure result envfit. plot points arrows using ggplot.","code":"\nmorse.dist <- read.delim('https://raw.githubusercontent.com/zdealveindy/anadat-r/master/data/morsecodes-dist.txt',\n                          row.names = 1, head = T)\nnames(morse.dist) <- rownames(morse.dist)\nmorse.dist[1:5,1:5] %>% kable() %>% row_spec(0, monospace=TRUE) %>% \n  column_spec(1, monospace=TRUE) %>%\n  kable_styling(full_width = FALSE)\nNMDS <- metaMDS(morse.dist, trace=0)\nNMDS## \n## Call:\n## metaMDS(comm = morse.dist, trace = 0) \n## \n## global Multidimensional Scaling using monoMDS\n## \n## Data:     morse.dist \n## Distance: user supplied \n## \n## Dimensions: 2 \n## Stress:     0.1800255 \n## Stress type 1, weak ties\n## Two convergent solutions found after 20 tries\n## Scaling: centring, PC rotation \n## Species: scores missing\nordiplot(NMDS, cex = 1.5, type = 't')\n# stressplot(NMDS)\nsymbols <- rownames(NMDS$points)\nNMDS[c(\"dist\", \"dhat\", \"iidx\", \"jidx\")] %>% as_tibble() %>% \n  mutate(comparison = paste0(symbols[iidx], \"/\", symbols[jidx]),\n         comparison2 = case_when( abs(dist-dhat) < 40 ~ \"\", TRUE ~ comparison)) %>%\n  ggplot(aes(dist, dhat)) + \n  geom_point(size=0.5, color=\"blue\") + \n  geom_text_repel(aes(label = comparison2)) +\n  theme_bw()\nNMDS$points %>% as_tibble(rownames = \"Symbol\") %>%\n  ggplot(aes(x = MDS1, y = MDS2 )) +\n  geom_text(aes(label=Symbol)) + \n  theme_bw()\n  # geom_point(size = 0.5) + \n  # geom_text_repel(aes(label = Symbol))\nmorse.attr <- read.delim('https://raw.githubusercontent.com/zdealveindy/anadat-r/master/data/morsecodes-attr.txt',\n                         row.names = 1, head = T)\nef <- envfit(NMDS, morse.attr)\nef## \n## ***VECTORS\n## \n##                     NMDS1    NMDS2     r2 Pr(>r)    \n## length            0.88381 -0.46784 0.9287  0.001 ***\n## ratio.short.long -0.39383 -0.91918 0.5067  0.001 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## Permutation: free\n## Number of permutations: 999\nordiplot(NMDS, cex = 1.5, type = 't')## species scores not available\nplot(ef)\narrows1 <- ef$vectors$arrows %>% as_tibble(rownames = \"code\")\nas_tibble(NMDS$points, rownames = \"code\") %>%\n  ggplot(aes(x = MDS1, y = MDS2, label = code)) + \n  geom_text() +\n  geom_text(data = arrows1, aes(x = 25*NMDS1, y = 25*NMDS2)) +\n  geom_segment(data = arrows1, aes(x = 20*NMDS1, y = 20*NMDS2, xend = 0, yend = 0)) +\n  theme_bw()"},{"path":"mds.html","id":"further-reading-16","chapter":"22 Multidimensional scaling","heading":"22.2 Further reading","text":"Vegan package ggvegan packagehttps://jonlefcheck.net/2012/10/24/nmds-tutorial--r/https://rpubs.com/collnellphd/GWU_nmdsMorse code experiment description analysis","code":""},{"path":"k-means.html","id":"k-means","chapter":"23 K-means clustering","heading":"23 K-means clustering","text":"PCA MDS ways exploring “structure” data many variables. methods arrange observations across plane approximation underlying structure data. K-means another method illustrating structure, goal quite different: point assigned one \\(k\\) different clusters, according proximity . , analyst, must specify number clusters advance. Sometimes obviously correct number clusters, times construct many different clusterings select one best represents data. Clustering can combined PCA MDS used labels ordination visualizations. many methods clustering; look one course.","code":""},{"path":"k-means.html","id":"make-clusters-from-points","chapter":"23 K-means clustering","heading":"23.1 Make clusters from points","text":"Let’s start making 3 clusters quantitative variables Palmer penguins data. omit missing data scale variable mean 0 standard deviation 1. don’t want different scales variable measured give weight one variable compared . (might choose give one variable weight, don’t want simply consequence units used report variables.)kclust object reports means (centroid) cluster membership observation (1-3). also get sum squared deviations cluster mean observation. compared total sums squares, sum squared deviations mean one cluster. example, 72% total sums squares within clusters remainder (28%) clusters. tells us three main clusters account almost 75% squared deviations. measure one used linear regression, minimizes total sum squared deviations regression line observation.data can presented easy use table tidy:Categorical variables (species) can added resuls using augment done models. can pick two variables plot along cluster identity species. colours show cluster number shapes show species. can see clusters perfectly separate observations species, strong similarity. means variables selected mostly, completely, sufficient distingush three species. Remember used 4 variables classification, just two shown .can add center cluster plot, since clustering done data scaled mean 0 standard deviation 1, must careful scale data well.can make table number species cluster using summarize. Adélie penguins make cluster 1, 8 observations appearing cluster 3. Chinstrap penguins make cluster 3, 5 observations cluster 1. Gentoo penguins cluster 2 species penguin cluster. result seem reasonable given previous exploration done data.","code":"\npenguin_q <- penguins %>% select(species, \n                                 flipper_length_mm, bill_length_mm, bill_depth_mm, body_mass_g) %>%\n  na.omit() \nkclust1 <- kmeans(penguin_q %>% select(-species) %>% scale(),\n                 centers = 3)\nkclust1## K-means clustering with 3 clusters of sizes 132, 123, 87\n## \n## Cluster means:\n##   flipper_length_mm bill_length_mm bill_depth_mm body_mass_g\n## 1        -0.8899121     -1.0465260     0.4858415  -0.7694891\n## 2         1.1571696      0.6562677    -1.0983711   1.0901639\n## 3        -0.2857869      0.6600059     0.8157307  -0.3737654\n## \n## Clustering vector:\n##   [1] 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 3 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n##  [38] 1 1 1 1 1 3 1 1 1 1 1 3 1 1 1 3 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 3 1 1 1 3 1\n##  [75] 3 1 1 1 3 1 3 1 1 1 1 1 1 1 1 1 3 1 1 1 3 1 1 1 3 1 3 1 1 1 1 1 1 1 3 1 3\n## [112] 1 3 1 3 1 1 1 1 1 1 1 3 1 1 1 1 1 3 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n## [149] 1 1 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n## [186] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n## [223] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n## [260] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 3\n## [297] 1 3 3 3 3 3 3 3 1 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 3 3 3 3\n## [334] 3 3 3 3 3 3 3 3 3\n## \n## Within cluster sum of squares by cluster:\n## [1] 122.1477 143.1502 112.9852\n##  (between_SS / total_SS =  72.3 %)\n## \n## Available components:\n## \n## [1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n## [6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"\ntidy(kclust1) %>% kable(digits = 2)\nkc1 <- augment(kclust1, penguin_q)\nggplot(kc1, aes(x=bill_length_mm, y = bill_depth_mm, color=.cluster, shape=species)) + \n  geom_point() + theme_bw()\nkc1 <- augment(kclust1, penguin_q)\nggplot(kc1, aes(x = scale(bill_length_mm), \n                y = scale(bill_depth_mm))) + \n  geom_point(aes(color = .cluster, shape = species)) +\n  geom_point(data = tidy(kclust1), aes(color = cluster), \n             size = 10, shape = \"o\", show.legend = FALSE) + theme_bw()\naugment(kclust1, data = penguin_q) %>%\n  count(.cluster, species)## # A tibble: 5 x 3\n##   .cluster species       n\n##   <fct>    <fct>     <int>\n## 1 1        Adelie      127\n## 2 1        Chinstrap     5\n## 3 2        Gentoo      123\n## 4 3        Adelie       24\n## 5 3        Chinstrap    63"},{"path":"k-means.html","id":"example-2","chapter":"23 K-means clustering","heading":"23.2 Example 2","text":"Let’s take look dataset lot groups. mpg dataset several quantitative variables might useful classifying cars (displ, cyl, cty, hwy). can make series clusterings data see well correspond class car (compact, subcompact, etc).Compare clusters class cars. many classes car clusters.use glance get see sums squares partitioned. ’ll add fifth variable measures proportion sums squares within compared total.can decide many clusters make? Let’s compute proportion sums squares accounted clustering 2, 3, 4, etc., clusters. use functions broom accomplish including nest map.one object lot information – tidy glance results 9 clusterings plus augmented data . Let’s extract 3 different tables make results easier work .can score cluster according sums squares follows:Seven clusters slightly worse 6, ’s probably many. decrease happens 4 5 clusters, may enough.Let’s plot clusters. ’ll show number cylinders using symbol; 4 show, won’t many look .can try make facetted plot, showing car classification clusters. 7 classes 9 clusters, make 63 facets, lot look . ’ll select just classifications 4, 5, 6 clusters.can see classes cars (except 2 seaters) get divided multiple clusters. clustering 4 quantiative variables separate cars according class.","code":"\nkclust2 <- kmeans(mpg %>% select(displ, cyl, cty, hwy) %>% scale, \n                  centers = 4)\ntidy(kclust2)## # A tibble: 4 x 7\n##    displ     cyl     cty    hwy  size withinss cluster\n##    <dbl>   <dbl>   <dbl>  <dbl> <int>    <dbl> <fct>  \n## 1 -1.05  -1.14    1.10    1.05     75    78.4  1      \n## 2 -0.299 -0.135   0.0717  0.229    61    31.7  2      \n## 3  1.29   1.31   -1.01   -0.976    70    47.5  3      \n## 4  0.251  0.0689 -0.596  -0.860    28     4.62 4\naugment(kclust2, mpg) %>% count(.cluster, class)## # A tibble: 18 x 3\n##    .cluster class          n\n##    <fct>    <chr>      <int>\n##  1 1        compact       33\n##  2 1        midsize       16\n##  3 1        subcompact    23\n##  4 1        suv            3\n##  5 2        compact       14\n##  6 2        midsize       23\n##  7 2        minivan        8\n##  8 2        pickup         3\n##  9 2        subcompact     7\n## 10 2        suv            6\n## 11 3        2seater        5\n## 12 3        midsize        2\n## 13 3        pickup        20\n## 14 3        subcompact     5\n## 15 3        suv           38\n## 16 4        minivan        3\n## 17 4        pickup        10\n## 18 4        suv           15\nglance(kclust2) %>% mutate(proportion_within = tot.withinss / totss)## # A tibble: 1 x 5\n##   totss tot.withinss betweenss  iter proportion_within\n##   <dbl>        <dbl>     <dbl> <int>             <dbl>\n## 1   932         162.      770.     2             0.174\nkclusts2 <- \n  tibble(k = 1:9) %>%\n  mutate(\n    kclust = map(k, ~kmeans(mpg %>% select(displ, cyl, cty, hwy) %>% scale,\n                            centers = .x)),\n    tidied = map(kclust, tidy),\n    glanced = map(kclust, glance),\n    augmented = map(kclust, augment, mpg)\n  )\nclusters2    <- kclusts2 %>% unnest(cols = c(tidied))\nassignments2 <- kclusts2 %>% unnest(cols = c(augmented))\nclusterings2 <- kclusts2 %>% unnest(cols = c(glanced))\nclusterings2 %>% mutate(proportion_within = tot.withinss / totss) %>%\n  ggplot(aes(x = k, y = proportion_within)) + \n  geom_line() + geom_point() + theme_bw()\np1 <- ggplot(assignments2, aes(x = cty, y = displ)) +\n        geom_point(aes(color = .cluster, shape=factor(cyl)), alpha = 0.8) + \n        facet_wrap(~ k) + theme_bw()\np1\np2 <- assignments2 %>% filter(k >= 4, k <= 6) %>%\n  ggplot(aes(x = cty, y = displ)) +\n        geom_point(aes(color = .cluster, shape = factor(cyl)), alpha = 0.8) + \n        facet_grid(k ~ class, scales = \"free\") + theme_bw()\np2"},{"path":"k-means.html","id":"further-reading-17","chapter":"23 K-means clustering","heading":"23.3 Further reading","text":"two sources provide detail k-means clustering works.Notes K-means tidymodels packageChapter K-means Roger Peng’s book","code":""},{"path":"slides.html","id":"slides","chapter":"24 Making slides for presentations","heading":"24 Making slides for presentations","text":"Since data visualization ultimately communication, often need talk people ’ve learned. lesson ’ll provide suggestions make good presentation data visualization analysis. ’ll show use R markdown Rstudio make visual aids presentation.","code":""},{"path":"slides.html","id":"what-makes-a-good-presentation","chapter":"24 Making slides for presentations","heading":"24.1 What makes a good presentation?","text":"good presentation tells story engages audience, clear purpose advanced predictable arc introduction evidence conclusion. many ways design good presentation, people find practice reflection works personal goals audience key part trajectory.","code":""},{"path":"slides.html","id":"why-we-make-slides","chapter":"24 Making slides for presentations","heading":"24.2 Why we make slides","text":"Visual aides, commonly called slides, can help communicate audience. Computer software makes easy generate lots slides full text presenter reads. generally bad approach audience’s attention focussed reading listening result tend less engaged presentation. , course, many different opinions topic!data visualization, make slides display visualization! ’s primary reason slide, slides focus visualization. visualization large enough seen everyone watching. much easier eveyone watches presenation teleconferencing. classroom, slide far away, must careful put much slide make element slide small.","code":""},{"path":"slides.html","id":"how-to-make-slides-using-rstudio","chapter":"24 Making slides for presentations","heading":"24.3 How to make slides using Rstudio","text":"several packages help make slides R markdown. method use well integrated Rstudio. create presentation, select menu File > New File > R Presentation. R markdown document, give sample file edit tells basics formatting. R markdown tools already know text formatting, list making, titles work . course, can insert R code blocks output included well. described help available menu Help > Markdown quick reference.important new idea start new slide. ’s simple. Just write title slide line , put line equals signs (least 3) next line.","code":""},{"path":"slides.html","id":"formatting-tricks","chapter":"24 Making slides for presentations","heading":"24.4 Formatting tricks","text":"","code":""},{"path":"slides.html","id":"hiding-code","chapter":"24 Making slides for presentations","heading":"24.4.1 Hiding code","text":"Usually presenation don’t want show computer code – complex easily digested audience. (course, naturally, bit exception!) can hide output writing start code block like :{r echo=FALSE}main options showing code, results code, warning messages, errors summarized . option fig.cap=\"Message\" particularly useful adding text. (options : echo, eval, include, warning, message, can TRUE FALSE.)","code":""},{"path":"slides.html","id":"changing-the-size-and-position-of-a-plot","chapter":"24 Making slides for presentations","heading":"24.5 Changing the size and position of a plot","text":"following code chunk options let control size position plot:.width = \"70%\" (value, quotation marks)fig.align = \"center\" (left, right)figure formatting options look ","code":""},{"path":"slides.html","id":"hiding-a-title","chapter":"24 Making slides for presentations","heading":"24.6 Hiding a title","text":"Adding title: false row equals signs hide title, making room graphic.","code":""},{"path":"slides.html","id":"two-column-formatting","chapter":"24 Making slides for presentations","heading":"24.7 Two column formatting","text":"want divide slide left right column, put row three stars (***) material left right sides. can adjust amount space used side adding left: 70% (example) row equals signs starts slide.","code":""},{"path":"slides.html","id":"summary-2","chapter":"24 Making slides for presentations","heading":"24.8 Summary","text":"introduction making slides R. ’ve picked method relatively easy use well integrated Rstudio. lot options, tasks R.","code":""},{"path":"slides.html","id":"further-reading-18","chapter":"24 Making slides for presentations","heading":"24.9 Further reading","text":"Introduction making slide presentations RstudioRstudio’s notes making slide presentationsPatrick Winston’s video speak effectivelyLots information using markdown R markdown, presented slide formatHow make R markdown presentation slides","code":""},{"path":"testing.html","id":"testing","chapter":"25 Checking your work","heading":"25 Checking your work","text":"","code":""},{"path":"testing.html","id":"an-introduction-to-testing","chapter":"25 Checking your work","heading":"25.1 An introduction to testing","text":"’ve made data visualization. looks great. calculations necessary single Rmd file – reading data, organizing data, creating figure. can revise data reproduce plot time want.thought occurs – know visualization correct? computer saves us time calculations us, price can’t keep track everything .problem data? Maybe data analyzed lot observations – many check hand. maybe data fine, something went wrong read R.\nlots ways errors creep . Missing values thought none. Unexpected levels factors (many ). Detectable errors data impossible values.best idea counteract problems testing. secret get computer perform tests . lesson discuss two kinds testing: checking data checking calculations.lot testing done even start R: (hope ) packages use carefully tested sure work intended. Still – might misunderstand packages supposed . might make typo use wrong variable name somewhere. might get logic calculation wrong. test work many ways can.important reason test catch mistakes. Possibly second important reason testing – explicit – can help people use analysis confidence . includes future!","code":""},{"path":"testing.html","id":"checking-analysis-and-visualizations","chapter":"25 Checking your work","heading":"25.2 Checking analysis and visualizations","text":"preliminary analysis, develop testing plan. Methods can help:Check errors dataPerform analysis small subset data can understand without computer help. “sample calculation” method testingPerform analysis simulated fake “data” designed test certain cases (independent variables, strong dependence, etc.) allow check methods interpretationPerform calculations visualizations two different ways, check understanding. especially useful fast slow way calculation. Use slow way check fast method.","code":""},{"path":"testing.html","id":"data-errors","chapter":"25 Checking your work","heading":"25.3 Data errors","text":"kinds errors can appear data?Misspellings, upper/lower case inconsistency, extra spacesDuplicated observationsMiss-coded missing data (-999, 0)Inconsistently formatted dates timesImpossible values arising typographical errorsData wrong columnsAll data can look correct, methods may changed, creating “silent” errorsWhy data sometimes errors?answer , need know process used create data. data output particular machine software package errors? data typed single person? many different people, may different understandings data collection goals, involved? data collected long period time, machines, people, goals may changed?can find errors data?Make summary tables cross-check summariesLook missing dataCheck sure correct number variables (columns) rows (observations) presentPlot histograms densitiesWrite tests test data belong legitimate set valuesWhat errors?Keep original data, can revert change case misunderstandingLog changes describe errorWrite tests check future errrosCommunicate people collected data people receive analysis","code":""},{"path":"testing.html","id":"sample-data-to-test","chapter":"25 Checking your work","heading":"25.3.1 Sample data to test","text":"following data collected class students evaluating ability identify jelly bean flavour blindfolded testing. Much sense taste comes smell, two treatments: control participant blindfolded treatment participant blindfolded blocked nose reduce sense smell. Groups students entered data single Google docs spreadsheet exported csv file .dataset lot problems, typical data entered group people directly involved systematic analysis data software package like R. (attuned problems data errors.) Take look file see many problems can find continuing.always look data. first look, View, skim (skimr package), glimpse functions useful identify problems.many columns heading purely missing data. getting rid columns, let’s sure missing using miss_var_summary function naniar package.Now get rid data.dlookr package provides similar table, plus adds count number distinct values variable.least 12% missing values variable, may rows completely missing. take another look data see lot rows NA. Let’s get rid .\nFirst find rows NA. First count number missing data row (mutate) remove rows every variable missing (filter). Whenever clean data, like preview happen modifying dataset.Now remove :still don’t know thse variables mean, already one thing stand . variable accuracy_0_incorrect_1_correct presumably 0 1, three different values. may care initials investigator, might concerned fact 88 missing values (50 blank rows removed.)","code":"\njelly <- read_csv(here(\"static/jelly-bean-data.csv\")) %>% clean_names()## Warning: Missing column names filled in: 'X7' [7], 'X8' [8], 'X9' [9],\n## 'X10' [10], 'X11' [11], 'X12' [12], 'X13' [13], 'X14' [14], 'X15' [15],\n## 'X16' [16], 'X17' [17], 'X18' [18], 'X19' [19], 'X20' [20], 'X21' [21],\n## 'X22' [22], 'X23' [23], 'X24' [24], 'X25' [25], 'X26' [26], 'X27' [27]## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   .default = col_logical(),\n##   Initials = col_character(),\n##   `Group (choose from drop down)` = col_character(),\n##   `Trial #` = col_double(),\n##   Flavour = col_character(),\n##   `Reaction time (in sec)` = col_character(),\n##   `Accuracy (0=incorrect, 1=correct)` = col_double()\n## )\n## ℹ Use `spec()` for the full column specifications.\n# jelly %>% kable() %>% scroll_box()\nglimpse(jelly)## Rows: 261\n## Columns: 27\n## $ initials                       <chr> \"PKL\", \"PKL\", \"PKL\", \"LAG\", \"LAG\", \"LA…\n## $ group_choose_from_drop_down    <chr> \"control\", \"control\", \"control\", \"expe…\n## $ trial_number                   <dbl> 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, NA…\n## $ flavour                        <chr> \"orange\", \"strawberry\", \"cherry\", \"ora…\n## $ reaction_time_in_sec           <chr> \"7.2\", \"7.6\", \"10.1\", \"10.15\", \"12.24\"…\n## $ accuracy_0_incorrect_1_correct <dbl> 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, NA…\n## $ x7                             <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x8                             <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x9                             <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x10                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x11                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x12                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x13                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x14                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x15                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x16                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x17                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x18                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x19                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x20                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x21                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x22                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x23                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x24                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x25                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x26                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n## $ x27                            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n# skimr::skim(jelly)\njelly %>% miss_var_summary() %>% kable() %>% kable_styling(full_width = FALSE)\njelly <- jelly %>% select(-(x7:x27))\ndiagnose(jelly) %>% kable() %>% kable_styling(full_width = FALSE)\njelly %>% rowwise() %>%\n  mutate(n_na = sum(is.na(across()))) %>% \n  filter(n_na == ncol(jelly)) %>%\n  head() %>% kable()\njelly <- jelly %>% rowwise() %>%\n  mutate(n_na = sum(is.na(across()))) %>% \n  ungroup() %>%\n  filter(n_na < ncol(jelly)) %>%\n  select(-n_na)"},{"path":"testing.html","id":"data-quality-assurance","chapter":"25 Checking your work","heading":"25.4 Data quality assurance","text":"can get report data using pointblank package. (See documentation linked reading examples.) Let’s test things:values accuracy variable 0 1?reaction time trial_number numeric? (know answer already, ’ll show test condition.)negative reaction times?rows distinct? (’s unlikely, impossible get result twice.)First write tests.Now can use tests get report. (report shown. Experiment functions .)Reaction time (seconds) text number. Let’s fix . Probably non-numeric values , otherwise data read numeric. let’s look rows first. try convert text number text doesn’t look like number, ’ll get NA instead. filter NAs get created convert text number. R give us message alert us fact NAs created.One obviously error. (Lemon number!) careful analysis, contact person recorded data (’s initials ) find went wrong. thing NA, time didn’t get recorded. now, ’ll just throw away numbers.pointblank package also helpful function produce structured report whole dataset. (results shown .)","code":"\nmy_test <- jelly %>% \n  create_agent(actions = action_levels(warn_at = 1)) %>%\n  col_vals_in_set(accuracy_0_incorrect_1_correct, c(0,1)) %>%\n  col_is_numeric(vars(trial_number, reaction_time_in_sec)) %>%\n  col_vals_gt(reaction_time_in_sec, 0) %>%\n  rows_distinct() \nmy_test %>% interrogate() \njelly %>% filter(is.na(as.numeric(reaction_time_in_sec))) %>%\n  kable() %>% kable_styling(full_width = FALSE)## Warning in mask$eval_all_filter(dots, env_filter): NAs introduced by coercion\njelly <- jelly %>% \n  mutate(reaction_time_in_sec = as.numeric(reaction_time_in_sec)) %>%\n  filter(!is.na(reaction_time_in_sec))\njelly %>% scan_data()"},{"path":"testing.html","id":"data-cleaning","chapter":"25 Checking your work","heading":"25.5 Data cleaning","text":"Freshly collected tabulated data often “dirty”: errors data typographical errors, impossible values, simply detail appropriate analysis. Preparing dataset analysis called data cleaning can complex lengthy task least complext analyzing data. Although common tasks performed data cleaning, every dataset presents set challenges. ’s reason usually use “clean” data courses.Data cleaning tasks individual can take considerable creativity. ’ll just try .Let’s look values flavour. seems like lot .definitely duplication. ’ll one correction – changing letters lower case differences capitalization don’t duplicate flavours. (simple change eliminates 13 different values flavour.)\nlook closely data, find spelling errors, different codings (, +, neither), one missing flavour.Use learned tidy data. changes ’ll make continuing analysis.","code":"\njelly %>% count(flavour) %>% arrange(-n) %>% \n  kable() %>% kable_styling(full_width = FALSE)\njelly %>% mutate(flavour = tolower(flavour)) %>%\n  count(flavour) %>% arrange(-n) %>% \n  kable() %>% kable_styling(full_width = FALSE)\njelly <- jelly %>% \n  mutate(flavour = tolower(flavour),\n         flavour = case_when(flavour == \"cocnut\" ~ \"coconut\", \n                             TRUE ~ flavour), \n         flavour = str_replace(flavour, \" and \", \" \"),\n         flavour = str_replace(flavour, \"[/+]\", \" \"),\n         flavour = str_squish(flavour))"},{"path":"testing.html","id":"analyze-a-subset-of-your-data","chapter":"25 Checking your work","heading":"25.6 Analyze a subset of your data","text":"Let’s compute average reaction time correct incorrect answers flavour treatment. count number observations grouping .fairly simple calculation, serves demonstrate “manual check” method. Filter just incorrect, experimental results apple flavours. Check number rows average match.Looks good!","code":"\njelly %>% group_by(flavour, group_choose_from_drop_down, accuracy_0_incorrect_1_correct) %>%\n  summarize(count = n(),\n            mean_reaction_time = mean(reaction_time_in_sec),\n            .groups = \"drop\") %>% \n  kable() %>% kable_styling(full_width = FALSE)\njelly %>% filter(flavour == \"apple\",\n                 accuracy_0_incorrect_1_correct == 0,\n                 group_choose_from_drop_down == \"experimental\") %>% \n  kable() %>% kable_styling(full_width = FALSE)"},{"path":"testing.html","id":"use-fake-data-where-you-already-know-the-answer","chapter":"25 Checking your work","heading":"25.7 Use fake data, where you already know the answer","text":"example bit contrived, good example idea. ’ll create simple data compute averages using exactly code wrote . ’ll put NA one row just see happens.know exactly ’m expecting. Stop decide reading .","code":"\nmy_jelly <- tribble(\n  ~group_choose_from_drop_down, ~ flavour, ~ reaction_time_in_sec, ~ accuracy_0_incorrect_1_correct,\n  \"experimental\", \"lime\", 1, 1,\n  \"experimental\", \"lime\", 2, 1,\n  \"experimental\", \"lemon\", 3, 1,\n  \"control\", \"lemon\", 4, 1,\n)\nmy_jelly %>% kable() %>% kable_styling(full_width = FALSE)\nmy_jelly %>% group_by(flavour, group_choose_from_drop_down, accuracy_0_incorrect_1_correct) %>%\n  summarize(count = n(),\n            mean_reaction_time = mean(reaction_time_in_sec),\n            .groups = \"drop\") %>% \n  kable() %>% kable_styling(full_width = FALSE)"},{"path":"testing.html","id":"do-you-calculations-two-different-ways","chapter":"25 Checking your work","heading":"25.8 Do you calculations two different ways","text":"Suppose weren’t really confident knew mean ? Even simple functions like sd (standard deviation) median might think . can check ? Let’s write function based sum, length, division.Excellent! got answers.’s introduction testing calculations. good checks make calculate test analysis. next step write computer code checks answers well, giving sample data calculation code along known answers. package (course!) helping : testthat tinytest (links ). won’t using course, take time learn course.","code":"\nmy_mean = function(x) sum(x) / length(x)\nmy_jelly %>% group_by(flavour, \n                      group_choose_from_drop_down, \n                      accuracy_0_incorrect_1_correct) %>%\n  summarize(count = length(flavour),\n            mean_reaction_time = my_mean(reaction_time_in_sec),\n            .groups = \"drop\") %>%\n  kable() %>% kable_styling(full_width = FALSE)"},{"path":"testing.html","id":"at-the-end-of-your-analysis","chapter":"25 Checking your work","heading":"25.9 At the end of your analysis","text":"Provide relatively simple dataset together analysis results can used verify code working way future, someone develops new way analysing data can use comparisonDocument testing processes used data computer code later users know problems looked forDocument problems found data steps took fix problemsDescribe weaknesses method anticipate might cause problems future users","code":""},{"path":"testing.html","id":"lessons-for-this-course","chapter":"25 Checking your work","heading":"25.10 Lessons for this course","text":"integrating testing work course. lesson alert problem, ensure know many people think carefully , show first steps developing good quality assurance plan. aware testing takes time – possibly much time “rest” work data analysis.","code":""},{"path":"testing.html","id":"further-reading-19","chapter":"25 Checking your work","heading":"25.11 Further reading","text":"Data cleaning overviewpointblank documentation examplesdlookr documentation examplesdataMaid documentation data cleaningFor testing R code, look tinytest testthat","code":""},{"path":"dynamic.html","id":"dynamic","chapter":"26 Dynamic graphics","heading":"26 Dynamic graphics","text":"short lesson ’ll introduce two kinds dynamic graphics. first graphic allows reader interact visualization. ’ve already seen 3d graphs can rotated, can also get information hovering data points. second kind creates animation add another dimension (time) visualization. can helpful “tell story”, can also challenging get speed animation right describe effectively audience. ’s Hans Rosling used animation (way back lesson 1) part oral presentation.","code":""},{"path":"dynamic.html","id":"reader-interactions","chapter":"26 Dynamic graphics","heading":"26.1 Reader interactions","text":"Visualizations designed respond interactions (clicks, mouse movement) reader can show additional detail provide opportunities new ways communication possible static visualization. , creator visualization, require reader interact work get full meaning, may find message communicated effectively.use javascript plotly package, easily combined ggplot graphics, create simple interactive visualizations.","code":""},{"path":"dynamic.html","id":"example-3","chapter":"26 Dynamic graphics","heading":"26.2 Example","text":"javascript package plot_ly can used R, Rstudio knitted HTML output. automatically shows coordinates point aim pointer . also provides ability pan zoom plot focus part data. mouse plot area, menu appears top graph. Experiment control know .plot_ly bit slow large dataset, ’ll use subset diamonds data.Plot_ly can lot example shows, including animation. lot documentation can find link Reading.","code":"\ndiamonds %>% slice_sample(n = 1000) %>%\n  plot_ly(x = ~ carat, \n          y = ~ price) %>%\n  add_markers(color = ~ color)"},{"path":"dynamic.html","id":"animations","chapter":"26 Dynamic graphics","heading":"26.3 Animations","text":"Let’s recreate version Rosling’s plot life expectancy function income time.First ’ll make plot just one year. animate plot changing year time animation.Now use functions gganimate package change year one frame next. use transition_state change plot along values year. animation produced just one function: transition_time(year) uses quantitative value year control display data time. code show year geom_text obvious.","code":"\ngapminder %>% \n  filter(year == 1957) %>%\n  ggplot() +\n  geom_text(aes(label = min(year)), x = 3.8, y = 50, size = 40, color = \"lightgray\") +\n  geom_point(aes(x = gdpPercap,\n             y = lifeExp,\n             size = pop,\n             color = continent)) +\n  theme_bw() +\n  scale_x_log10()\nanimation <- gapminder %>% \n  ggplot() +\n  geom_text(aes(label = format(round(year))), \n            x = 3.8, y = 50, \n            size = 40, color = \"lightgray\") +\n  geom_point(aes(x = gdpPercap,\n             y = lifeExp,\n             size = pop,\n             color = continent)) +\n  theme_bw() +\n  scale_x_log10() +\n  transition_time(year) +\n  labs(title = \"Animation frame {frame} of {nframes}\")\nanimate(animation, nframes = 75)"},{"path":"dynamic.html","id":"further-reading-20","chapter":"26 Dynamic graphics","heading":"26.4 Further reading","text":"Documentation plot_ly graphics RDocumentation gganimate, grammar animations","code":""},{"path":"mapping-1.html","id":"mapping-1","chapter":"27 Making maps","heading":"27 Making maps","text":"many ways make maps R. two general types : vector maps regions represented set points lines around region boundaries tile maps pre-drawn map downloaded cloud service Google maps. cases, points, lines, colour tiles can added display data map. Vector maps drawn series points can drawn using many different projections, giving freedom choose projection suitable map. Tile maps images can’t reprojected, can lot information form colours terrain, labels, points interest. Tile maps can used pan--zoom mode like many familiar online mapping tools.lesson look drawing vector maps.","code":""},{"path":"mapping-1.html","id":"vector-map","chapter":"27 Making maps","heading":"27.1 Vector map","text":"map 48 continental US states, quantiative variable used shade region. change variable used colour states, simply provide new dataset numeric column text column called “state”. map drawn ggplot, features ggplot including annotation, setting colour scales, labelling axes, etc., available work way visualizations created.map_data function works maps maps package, including two world maps (world world2) detailed maps France, Italy, New Zealand, USA states. maps package several datasets including list canadian cities population greater 1000. world large complex place often need obtain data map boundaries regions readily available package. guidance appears end lesson, can challenging task.surface Earth curved, choices need made plotting flat surface. choices called projections.\n’s map France using azimuthal equal area projection (see mapproj::mapproject() )Incidentally, frequently used projection USA Bonne. Revise USA map use projection adding following code + coord_map(\"bonne\", 45). (Albers: coord_map(\"albers\", 40, 100) Lambert: coord_map(\"lambert\", 40, 100)\nalso used, although Lambert makes USA look wide North.)Political boundaries world available “world” (centered Atlantic Ocean) “world2” (centered Pacific Ocean.)map Canada made 141 regions, separating islands, contain provincial boundaries.list 252 regions available world map (abbreviated ).map globe even Canada look good high latitudes, espcially either pole included. projection bit suitable regions. geom_map function perfect; creates stray lines region clipped projection.","code":"\nstates_map <- map_data(\"state\")\ncrimes <- as_tibble(USArrests, rownames=\"state\") %>% mutate(state = tolower(state))\nggplot(crimes, aes(map_id = state)) +\n    geom_map(aes(fill = Murder), map = states_map) +\n    expand_limits(x = states_map$long, y = states_map$lat) +\n  coord_map(\"albers\", 40, 100)\nmap_data <- map_data('france') \nggplot(data = map_data, aes(group = group, map_id=region)) + \n       geom_map(map = map_data,\n                  aes(x = long, y = lat),\n                  fill = \"white\", colour = \"#7f7f7f\", alpha = 0.5, size=0.5)  +\n  coord_map(\"azequalarea\")\nWorldData <- map_data('world')  \nggplot(WorldData, aes(map_id=region)) + \n  geom_map(map = WorldData,\n           aes(x = long, y = lat),\n                  fill = \"lightgray\", colour = \"#7f7f7f\", alpha = 0.5, size=0.5) +\n  theme_bw()## Warning: Ignoring unknown aesthetics: x, y\nmy_map <- map_data('world', region='Canada')  \nggplot(my_map, aes(map_id=region)) + \n  geom_map(map = my_map,\n           aes(x = long, y = lat),\n                  fill = \"white\", colour = \"#7f7f7f\", alpha = 0.5, size=0.5) +\n  theme_bw() +\n  coord_map(\"albers\", 60, 90)## Warning: Ignoring unknown aesthetics: x, y\nggplot(my_map, aes(map_id=region)) + \n  geom_map(map = my_map,\n           aes(x = long, y = lat),\n           size=0.5) +\n  theme_bw() +  coord_map(\"albers\", 60, 90)## Warning: Ignoring unknown aesthetics: x, y\nWorldData %>% pull(region) %>% unique() %>% head()## [1] \"Aruba\"       \"Afghanistan\" \"Angola\"      \"Anguilla\"    \"Albania\"    \n## [6] \"Finland\"\np1 <- ggplot(WorldData, aes(group=group, map_id=region)) + \n  geom_map(map = WorldData, aes(long, lat),\n                  fill = \"gray80\", colour = \"#7f7f7f\", alpha = 0.5, size=0.5) +\n  labs(x=\"\", y=\"\") + theme_bw() +\n  theme(axis.text = element_blank(), \n        axis.ticks = element_blank(), \n        rect = element_blank())## Warning: Ignoring unknown aesthetics: x, y\np2a <- p1 + coord_map(\"perspective\", 2.5, \n                      orientation=c(60, -100, 0))\n      # observer distance 2.5 Earth radii \np2b <- p1 + coord_map(\"perspective\", 2.5, \n                      orientation=c(-60, 80, 0)) \n      # try also orthographic, with no observer distance\np2a + p2b"},{"path":"mapping-1.html","id":"detailed-maps-of-canada","chapter":"27 Making maps","heading":"27.2 Detailed maps of Canada","text":"Detailed maps Canada part maps package R, need bit extra work. show obtain map files called “shapefiles” Statistics Canada learn use R. well worth learning many maps distributed format developed GIS software. don’t need repeat steps unless want make custom maps Canada.packages need get job done.followed instructions get transform shape files 2011 census divisions Canada. many options.\n2011 files marked archived content, trouble 2016 files. Choose ARCGis .shp file format. Pick cartographic boundary file. get zip file called gpr_000b11a_e.shapefiles detailed need simplified plotted R. code simplify detailed shapefiles simpler maps. processing took two hours computer, done store results file enable rapid reuse.","code":"\nlibrary(sf) # the base package manipulating shapes\nlibrary(rgdal) # geo data abstraction library\nlibrary(geojsonio) # geo json input and output\nlibrary(spdplyr) # the `dplyr` counterpart for shapes\nlibrary(rmapshaper) # the package that allows geo shape transformationcanada_raw = readOGR(dsn = \"~/Downloads/gcd_000b11a_e\", layer = \"gcd_000b11a_e\", encoding = 'latin1') \ncanada_raw_json <- geojson_json(canada_raw)  # takes a few minutes\ncanada_raw_sim <- ms_simplify(canada_raw_json) # also takes a few minutes\ngeojson_write(canada_raw_sim, file = \"static/canada_cd_sim.geojson\") "},{"path":"mapping-1.html","id":"draw-the-map","chapter":"27 Making maps","heading":"27.2.1 Draw the map","text":"Now preliminary work done can read map data R get mapmaking.official projection maps Canada Lambert conformal conic (“lcc”) following latitude longitude parameters.theme map remove axes, ticks, borders .Now draw map colours palette.list latitudes longitudes, can add points map.Convert latitude longitudes map coordinates.Make map projected points.’s easy focus Maritimes region Canada – just filter data include province census districts want. names map data can use filtering.’ve changed latitude longitude parameters projection values suitable part Canada.can also crop data drawn projected map. bit complex might expect since need sure specifying area plotted actual projected coordinates coordinate system. can easily get errors (invalid points projection), empty maps, croppings don’t look right. See link start paragraph several approaches.","code":"\ncanada_cd <- st_read(\"static/canada_cd_sim.geojson\", quiet = TRUE) \ncrs_string = \"+proj=lcc +lat_1=49 +lat_2=77 +lon_0=-91.52 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs\"\ntheme_map <- function(base_size=9, base_family=\"\") { \n    # require(grid)\n    theme_bw(base_size=base_size, base_family=base_family) %+replace%\n        theme(axis.line=element_blank(),\n              axis.text=element_blank(),\n              axis.ticks=element_blank(),\n              axis.title=element_blank(),\n              panel.background=element_blank(),\n              panel.border=element_blank(),\n              panel.grid=element_blank(),\n              panel.spacing=unit(0, \"lines\"),\n              plot.background=element_blank(),\n              legend.justification = c(0,0),\n              legend.position = c(0,0)\n        )\n}\nmap_colors <- RColorBrewer::brewer.pal(9, \"Pastel1\") %>% rep(2)   # 18 colours, 9 repeated\n\nggplot() +\n    geom_sf(aes(fill = PRUID), color = \"gray60\", size = 0.1, data = canada_cd ) +\n    coord_sf(crs = crs_string) + # 6\n  scale_fill_manual(values = map_colors) +\n    guides(fill = FALSE) +\n    theme_map() +\n    theme(panel.grid.major = element_line(color = \"white\"))\ncity_coords <- tribble( ~city, ~lat, ~long,\n\"Vancouver\",    49.2827,    -123.1207,\n\"Calgary\",  51.0447,    -114.0719,\n\"Edmonton\", 53.5461,    -113.4938,\n\"Toronto\",  43.6532,    -79.3832,\n\"Ottawa\",   45.4215,    -75.6972,\n\"Montreal\", 45.5017,    -73.5673,\n\"Halifax\", 44.6488, -63.5752)\nsf_cities = city_coords %>%\n    select(long, lat) %>% # 1\n    as.matrix() %>% # 2\n    st_multipoint(dim = 'XY') %>% \n    st_sfc() %>% \n    st_set_crs(4269)\nggplot() +\n    geom_sf(aes(fill = PRUID), color = \"gray60\", size = 0.1, data = canada_cd) +\n    geom_sf(data = sf_cities, color = '#001e73', alpha = 0.5, size = 3) + # 17\n    coord_sf(crs = crs_string) +\n    scale_fill_manual(values = map_colors) +\n    guides(fill = FALSE) +\n    theme_map() +\n    theme(panel.grid.major = element_line(color = \"white\"),\n          legend.key = element_rect(color = \"gray40\", size = 0.1))\ncanada_cd %>% pull(PRNAME) %>% unique()##  [1] \"Manitoba\"                                           \n##  [2] \"British Columbia / Colombie-Britannique\"            \n##  [3] \"Alberta\"                                            \n##  [4] \"Saskatchewan\"                                       \n##  [5] \"Ontario\"                                            \n##  [6] \"Quebec / Québec\"                                    \n##  [7] \"Newfoundland and Labrador / Terre-Neuve-et-Labrador\"\n##  [8] \"Nova Scotia / Nouvelle-Écosse\"                      \n##  [9] \"New Brunswick / Nouveau-Brunswick\"                  \n## [10] \"Prince Edward Island / Île-du-Prince-Édouard\"       \n## [11] \"Northwest Territories / Territoires du Nord-Ouest\"  \n## [12] \"Nunavut\"                                            \n## [13] \"Yukon\"\ncanada_cd %>% pull(CDNAME) %>% unique() %>% sample(10)##  [1] \"Simcoe\"                          \"Region 3\"                       \n##  [3] \"Lambton\"                         \"Northern Rockies\"               \n##  [5] \"La Jacques-Cartier\"              \"Prince Edward\"                  \n##  [7] \"Greater Sudbury / Grand Sudbury\" \"Cariboo\"                        \n##  [9] \"Division No.  7\"                 \"Lajemmerais\"\ncrs_string2 = \"+proj=lcc +lat_1=40 +lat_2=50 +lon_0=-75 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs\"\nggplot() +\n    geom_sf(aes(fill = PRUID), color = \"gray60\", size = 0.1, \n            data = canada_cd %>% filter(PRNAME %in% c(\"Nova Scotia / Nouvelle-Écosse\", \"New Brunswick / Nouveau-Brunswick\", \"Prince Edward Island / Île-du-Prince-Édouard\"))) +\n    # geom_sf(data = sf_cities, color = '#001e73', alpha = 0.5, size = 3) + # 17\n    coord_sf(crs = crs_string2) +\n    scale_fill_manual(values = map_colors) +\n    guides(fill = FALSE) +\n    theme_map() +\n    theme(panel.grid.major = element_line(color = \"white\"),\n          legend.key = element_rect(color = \"gray40\", size = 0.1))\ncrs_string2 = \"+proj=lcc +lat_1=40 +lat_2=50 +lon_0=-75 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs\"\nzoom_to <- c(-64.3683, 45.8979) # Sackville, New Brunswick; could try c(-63.5752, 44.6488)  # Halifax\nzoom_level <- 6\nC <- 40075016.686   # ~ circumference of Earth in meters\nx_span <- C / 2^zoom_level\ny_span <- C / 2^(zoom_level)\nzoom_to_xy <- st_transform(st_sfc(st_point(zoom_to), crs = 4326),\n                           crs = crs_string2)\ndisp_window <- st_sfc(\n    st_point(st_coordinates(zoom_to_xy - c(x_span / 2, y_span / 2))),\n    st_point(st_coordinates(zoom_to_xy + c(x_span / 2, y_span / 2))),\n    crs = crs_string2\n)\nggplot() +\n    geom_sf(aes(fill = PRUID), color = \"gray60\", size = 0.1, \n            data = canada_cd) +\n  # geom_sf(data = sf_cities, color = '#001e73', alpha = 0.5, size = 3) + # 17\n  geom_sf(data = zoom_to_xy, color = 'red') +\n  coord_sf(xlim = st_coordinates(disp_window)[,'X'],\n             ylim = st_coordinates(disp_window)[,'Y'],\n             crs = crs_string2, datum = crs_string2) +\n    scale_fill_manual(values = map_colors) +\n    guides(fill = FALSE) +\n    theme_map() +\n    theme(panel.grid.major = element_line(color = \"white\"),\n          legend.key = element_rect(color = \"gray40\", size = 0.1))"},{"path":"mapping-1.html","id":"just-the-map-please","chapter":"27 Making maps","heading":"27.2.2 Just the map, please","text":"file province boundaries can used without showing census district regions. ’ve added latitude-longitude grid map.Map making complex least two reasons: obtaining data describe complex political boundaries using suitable projections data. lesson introduced simple solutions problems gave starting point learning complexity making customized maps.","code":"\ncanada_prov <- geojson_read(\"https://gist.githubusercontent.com/mikelotis/2156d7c170d10d2c77cb79424fe2137d/raw/7a13748ed7ea5ba64876c77c53b6cb64dd5c3ab0/canada-province.geojson\", what=\"sp\") %>% st_as_sf()\n\nggplot() +\n    geom_sf(aes(fill = name), \n            color = \"gray60\", size = 0.1, \n            data = canada_prov ) +\n    coord_sf(crs = crs_string) + \n  scale_fill_manual(values = map_colors) +\n    guides(fill = FALSE) +\n    theme_map() +\n    theme(panel.grid.major = element_line(color = \"lightgray\"),\n          panel.grid.minor = element_line(color = \"lightgray\")) +\n  scale_x_continuous(breaks = seq(-160, 0, 10)) +\n  scale_y_continuous(breaks = seq(40, 85, 5))"},{"path":"mapping-1.html","id":"further-reading-21","chapter":"27 Making maps","heading":"27.3 Further reading","text":"WilkeHealyMapping example MDS lesson.collection maps 30 day challengeMaps using ggmap + openstreetmapsThe PROJ tool projecting map coordiatesR journal article mapping mapmiscFinding fixing problems simple feature geometry book, especially section 8.4","code":""},{"path":"mapping-1.html","id":"maps-of-canada","chapter":"27 Making maps","heading":"27.3.1 Maps of Canada","text":"blog used source material detailed maps CanadaProvince census division shape files Statistics CanadaElection data boundaries chloropleths populated weighted chloroplethsA map showing wind turbines Maritimes","code":""},{"path":"mapping-2.html","id":"mapping-2","chapter":"28 Mapping part two","heading":"28 Mapping part two","text":"Many online services generate tile maps. Generally small number maps available free maps require subscription. causal use free service tier almost always sufficient. keep track usage sometimes need sign API key. first example unusual can use maps without account. Tools services sort mapping change frequently, lesson shows use two different services.","code":""},{"path":"mapping-2.html","id":"tiled-maps-with-leaflet","chapter":"28 Mapping part two","heading":"28.1 Tiled maps with leaflet","text":"previous lesson made maps show geographical data using map outlines R packages.\nlesson look making maps build detailed basemaps online mapping systems. Google maps well known service; OpenStreetMap community-built free alternative. use leaflet package.Let’s make map place marker location Mathematics Statistics Department. can pan zoom map within Rstudio knitted output.Let’s use city database used MDS lesson label 61 cities selected lesson.several different basemaps, tiles, can use. fun one look – changes frequently radar map USA Iowa State.’s common see “chloropleth” maps USA geographic regions coloured show quantitative categorical variable, population density election results. maps less common Canada due two main factors: geographic concentration population cities means area maps even less informative USA latitude range Canada makes severe challenges plotting whole-country territory province chloropleth maps commonly used projections. Nevertheless, possible. ’s demonstration random numbers “data”.","code":"\nm <- leaflet() %>%\n  addTiles() %>%  # Add default OpenStreetMap map tiles\n  addMarkers(lng=-63.5932, lat=44.63697, popup=\"Math & Stats, Dalhousie U\")\nm  # Print the map\ncities <- read_csv(\"static/selected_cities.csv\")## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   city = col_character(),\n##   city_ascii = col_character(),\n##   lat = col_double(),\n##   lng = col_double(),\n##   country = col_character(),\n##   iso2 = col_character(),\n##   iso3 = col_character(),\n##   admin_name = col_character(),\n##   capital = col_character(),\n##   population = col_double(),\n##   id = col_double()\n## )\nm2 <- leaflet(data = cities) %>%\n  addTiles() %>%\n  addCircleMarkers(~ lng, ~lat, label = ~city)\nm2\nm3 <- leaflet(data = cities) %>%\n  addTiles() %>%\n  addCircleMarkers(~ lng, ~lat, label = ~city) %>%\n  addWMSTiles(\"http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi\",\n    layers = \"nexrad-n0r-900913\",\n    options = WMSTileOptions(format = \"image/png\", transparent = TRUE),\n    attribution = \"Weather data © 2012 IEM Nexrad\") %>%\n  setView(-93.65, 42.0285, zoom = 4)\nm3\nlibrary(geojsonio)## \n## Attaching package: 'geojsonio'## The following object is masked from 'package:base':\n## \n##     pretty\npal <- colorNumeric(\"viridis\", NULL)  # make a viridis palette\ncanada <- geojson_read(\"https://gist.githubusercontent.com/mikelotis/2156d7c170d10d2c77cb79424fe2137d/raw/7a13748ed7ea5ba64876c77c53b6cb64dd5c3ab0/canada-province.geojson\", what=\"sp\")\nmy_values = runif(13, 0, 10) # random numbers between 0 and 10\ncanada %>% \n  leaflet() %>%\n  addTiles() %>%\n  addPolygons(fillColor = ~ pal(my_values)) %>%\n  addLegend(pal = pal, values = my_values, opacity = 1.0)"},{"path":"mapping-2.html","id":"tiled-map-with-ggmap","chapter":"28 Mapping part two","heading":"28.2 Tiled map with ggmap","text":"section use tile maps openstreetmap database rendered Stamen Maps. use ggmap package download draw map.two steps. First download tiles needed map specifyingthe bounding box degrees latitude longitude,zoom level map, andthe type tiles (terrain, terrain-background, etc. See help get_stamenmap .)Always start small zoom level – make big download lot unnecessary data, takes time imposes burden service.regular ggplot, can add lines points map easily, using latitude longitude coordinates. Placing text map readable attractive way can quite challenge.can also zoom urban areas.","code":"\nmymap_terrain <- get_stamenmap(bbox = c(left = -130, bottom = 41, right = -50, top = 60), zoom=4, maptype = \"terrain\")## Source : http://tile.stamen.com/terrain/4/2/4.png## Source : http://tile.stamen.com/terrain/4/3/4.png## Source : http://tile.stamen.com/terrain/4/4/4.png## Source : http://tile.stamen.com/terrain/4/5/4.png## Source : http://tile.stamen.com/terrain/4/2/5.png## Source : http://tile.stamen.com/terrain/4/3/5.png## Source : http://tile.stamen.com/terrain/4/4/5.png## Source : http://tile.stamen.com/terrain/4/5/5.png\nggmap(mymap_terrain)  \nmy_points <- tibble(lat = c(43+57/60, 49+53/60),\n                    lon = c(-59-55/60, -97-9/60),\n                    label = c(\"Sable Is.\", \"Winnipeg\")\n)\nggmap(mymap_terrain)  +\n  geom_point(data =my_points, color=\"brown\") + \n  geom_text(data = my_points, aes(label=label))\nmymap_halifax <- get_stamenmap(bbox = c(left = -63.6-0.1, bottom = 44.60, right = -63.6+0.1, top = 44.75), \n                               zoom=12, maptype = \"toner-lite\")## Source : http://tile.stamen.com/toner-lite/12/1323/1477.png## Source : http://tile.stamen.com/toner-lite/12/1324/1477.png## Source : http://tile.stamen.com/toner-lite/12/1325/1477.png## Source : http://tile.stamen.com/toner-lite/12/1323/1478.png## Source : http://tile.stamen.com/toner-lite/12/1324/1478.png## Source : http://tile.stamen.com/toner-lite/12/1325/1478.png## Source : http://tile.stamen.com/toner-lite/12/1323/1479.png## Source : http://tile.stamen.com/toner-lite/12/1324/1479.png## Source : http://tile.stamen.com/toner-lite/12/1325/1479.png\nggmap(mymap_halifax)  "},{"path":"mapping-2.html","id":"further-reading-22","chapter":"28 Mapping part two","heading":"28.3 Further reading","text":"Healy’s chapter 7 mappingWilke’s chapter 15 geospatial dataAn article describing ggmap worksA ggmap tutorial, showing use Google map services including geocoding (turning address location reverse) routing.Another well-developed approach mapping: mapview","code":""},{"path":"mapping-3.html","id":"mapping-3","chapter":"29 Alternatives to maps","heading":"29 Alternatives to maps","text":"Sometimes geospatial data doesn’t need shown map. small number categories – example provinces Canada – regular boxplot dotplot (scatterplot categorical axis) can work just fine. used seeing coloured maps United States, distort data ways people rarely recognize. example, often care number people affected factor maps serve confuse area population. tricks (tricks) like shading adjusting regions population size, perceptual problems persist. rarely see maps like Canada way population political power distributed different Canada compared USA.lesson look ways show data spatial dimensions ways don’t involve map. still reflect geographic nature data. methods show quantitative variable colour shading arranging space (sometimes time) along two spatial dimensions plot. result suffer many perceptual issues decoding colour shading quantitative comparisons. useful broad overviews data conveying general impressions, must always careful presentation doesn’t mislead reader.","code":""},{"path":"mapping-3.html","id":"heatmaps","chapter":"29 Alternatives to maps","heading":"29.1 Heatmaps","text":"Suppose want show combination spatial temporal data. geographic data important, location map important feature. example, consider data weekly cases COVID-19 5 regions Canada reported 2021-01-21. code select number cases identified broken age classes geographic regions. number cases presented shade blue using geom_tile.two common ways improve figure like . First ensure ordering categorical variables easily interpreted. remove hte “stated” age group order geographic regions west east follow Canadian convention. might swap x y axes align left-right flow west-east geography Canada.second approach group rows columns similar patterns side side. ggheatmap function ggheatmap package makes easy.analysis can tell number cases structured age (see tree left side plot) geographically. number people region different, might want account way. One approach compute cases per capita region, don’t data handy. alternative allocate number cases age classes proportions, dividing number cases region age group total region. can use scale accomplish scaling. Now color represents proportion COVID-19 cases age class, scaled within region.Matching previous visualization, see proportion cases higher people age 60 older compared younger groups. now also see highest proportion cases (20% ) inviduals aged 80 Quebec 20-29 age group BC Yukon. distribution cases across ages similar Ontario + Nunavut BC + Yukon.","code":"\ncovid <- cansim::get_cansim(\"13-10-0775-01\")## Accessing CANSIM NDM product 13-10-0775 from Statistics Canada## Parsing data## Folding in metadata\n# covid2 <- get_cansim(\"13-10-0774-01\")  # related data with extra information\ncovid_ss <- covid %>% filter(GEO != \"Canada\", Gender == \"Total, all genders\", `Age group` != \"Total, all age groups\") %>%\n  filter(Statistics == \"Community exposures\") \ncovid_ss %>%\n  ggplot(aes(y = GEO, x = `Age group`, fill = VALUE)) + \n  geom_tile() +\n  theme(axis.text.x = element_text(angle = 90))\ncovid_ss2 <- covid_ss %>% filter(`Age group` != \"Not stated, age group\")\nregions <- c(\"BC + Yukon\", \"Prairies + NWT\",\n             \"ON + NU\", \"QC\", \"Atlantic\")\ncovid_ss3 <- covid_ss2 %>%\n  mutate(GEO = fct_recode(GEO, \"BC + Yukon\" = \"British Columbia and Yukon Region\",\n              \"Prairies + NWT\" = \"Prairies and Northwest Territories Region\",\n              \"ON + NU\" = \"Ontario and Nunavut Region\",\n             \"QC\"  =  \"Quebec Region\", \n             \"Atlantic\" = \"Atlantic Region\"))\ncovid_ss3 %>%\n  ggplot(aes(x = fct_relevel(GEO, regions),\n             y = `Age group`, fill = VALUE)) + \n  geom_tile() +\n  theme(axis.text.x = element_text(angle = 90))\ncovid_ss4 <- covid_ss3 %>% select(GEO, `Age group`, VALUE) %>%\n  pivot_wider(names_from = GEO, values_from = VALUE) \ndata.frame(covid_ss4 %>% select(-`Age group`), \n              row.names = covid_ss4 %>% pull(`Age group`)) %>%\n  ggheatmap()\ndata.frame(covid_ss4 %>% select(-`Age group`), \n              row.names = covid_ss4 %>% pull(`Age group`)) %>%\n  scale(center = FALSE, scale = colSums(.)) %>%\n  as.data.frame() %>%\n  ggheatmap()"},{"path":"mapping-3.html","id":"specialized-maps-of-the-usa","chapter":"29 Alternatives to maps","heading":"29.2 Specialized maps of the USA","text":"Customization visualization always possible, takes time develop. Maps USA common, huge number variations developed. kind heatmap:\nstate size states arranged approximate geographic representation USA. (Example adapted Healy Section 7.3.)","code":"\nlibrary(statebins)\nload(\"static/election.rda\")\nelection %>% ggplot(aes(state = state, fill = pct_trump)) +\n  geom_statebins() +\n  theme_statebins() +\n  labs(fill=\"Percent Trump\")"},{"path":"mapping-3.html","id":"summary-3","chapter":"29 Alternatives to maps","heading":"29.3 Summary","text":"Maps commonly used data visualization display data (quantitative categorical) geographical area, geography provide insight patterns data. Maps can misleading area region (province, state, country) may little message want communicate, area data visualization usually greater impact color hue brightness used encode primary data.reasons, consider alternatives maps even data clearly geographic. visualizations used course permit categorical variable can useful. lesson added one , heatmap, like map, except regions area “geographic” trend arranged along one axis.","code":""},{"path":"mapping-3.html","id":"further-reading-23","chapter":"29 Alternatives to maps","heading":"29.4 Further reading","text":"Healy Chapter 7 Maps","code":""},{"path":"factors-dates.html","id":"factors-dates","chapter":"30 Working with factors and dates","heading":"30 Working with factors and dates","text":"bonus topics.","code":""},{"path":"factors-dates.html","id":"working-with-strings","chapter":"30 Working with factors and dates","heading":"30.1 Working with strings","text":"making visualizations frequently useful manipulate text (“strings”) directly. Sometimes simplify text displayed graph. perhaps typographical error formatting problem text. stringr package contains many useful functions manipulating text strings. explain simple examples use frequently.common task remove leading, trailing, duplicated spaces string. str_squish function removes whitespace (including tabs, new lines, spaces) positions.particular letters symbols want remove, str_remove function can accomplish . can used literal strings patterns. Patterns allow use character classes, selecting specific sequences, complex symbolic descriptions strings. give couple simple examples patterns. str_remove matches ; str_remove_all matches pattern many times possible.pattern appears string, might want extract information. str_extract allows write pattern matches part string extract source material.Thinking patterns lot work prone error, pair functions glue unglue created perform common tasks combining text data separate .","code":"\nmy_string <- \"   A cat  is a small, living\n                    and furry animal.  \"\nmy_string2 <- str_squish(my_string)\nmy_string2## [1] \"A cat is a small, living and furry animal.\"\nstr_remove(my_string2, \"cat\")## [1] \"A  is a small, living and furry animal.\"\nstr_remove_all(my_string2, \"[aeiou]\")## [1] \"A ct s  smll, lvng nd frry nml.\"\nstr_remove_all(my_string2, \"[ ,\\\\.!]\")## [1] \"Acatisasmalllivingandfurryanimal\"\nsets <- c(\"A1\", \"A2\", \"B1\", \"B4\", \"C5\")\nstr_extract(sets, \"[0-9]\")## [1] \"1\" \"2\" \"1\" \"4\" \"5\"\nstr_extract(sets, \"[A-Z]\")## [1] \"A\" \"A\" \"B\" \"B\" \"C\"\nlibrary(glue)\nlibrary(unglue)\na <- 1\nb <- 6\nc <- 15.63\nmy_string3 <- glue(\"The numbers a, b, and c are {a}, {b}, and {c}, respectively. Their sum is {a+b+c}.\")\nmy_string3## The numbers a, b, and c are 1, 6, and 15.63, respectively. Their sum is 22.63.\nunglue(my_string3, \"The numbers a, b, and c are {a}, {b}, and {c}, respectively. Their sum is {d}.\")## $`1`\n##   a b     c     d\n## 1 1 6 15.63 22.63\nmy_strings1 <- tibble(greeting = c(\"My name is Andrew.\", \"My name is Li.\", \"My name is Emily.\"))\nunglue_unnest(my_strings1, greeting, \"My name is {name}.\", remove=FALSE)## # A tibble: 3 x 2\n##   greeting           name  \n## * <chr>              <chr> \n## 1 My name is Andrew. Andrew\n## 2 My name is Li.     Li    \n## 3 My name is Emily.  Emily"},{"path":"factors-dates.html","id":"working-with-factors","chapter":"30 Working with factors and dates","heading":"30.2 Working with factors","text":"Factors categorical variables set labels (“strings”) possible values variable. sometimes interpreted integers sometimes interpreted text. data visualization, primary concern mapping factors sequence colours, shapes, locations axis. R, factor given explicit order analyst, must order (scale), usually alphabetical. ordering rarely best one visualizations!forcats package series functions reordering factors. can used explicitly reorder factor value (level) quantitative value can used reorder factor.examples using mpg data set. First visualization without explicit reordering factors.transmission factor reordered according minimum value highway fuel economy.extract number gears transmission reorder transmission basis.many cateogories display graph, can helpful pick ones observations group remaining observations together “” category. ’s can accomplish .","code":"\nmpg %>% ggplot(aes(x = cty,\n                   y = trans)) +\n  geom_boxplot()\nmpg %>% ggplot(aes(x = cty,\n                   y = fct_reorder(trans, hwy, median))) +\n  geom_boxplot()\nmpg %>% unglue_unnest(trans, \"{trans_desc}({trans_code})\", remove=FALSE)  %>%\n  mutate(gears = str_extract(trans_code, \"[0-9]\") %>% as.numeric()) %>%\n  ggplot(aes(x = cty,\n             y = fct_reorder(trans, gears))) +\n  geom_boxplot() \nmpg %>% \n  ggplot(aes(x = cty,\n             y = fct_lump(trans, 4))) +\n  geom_boxplot() "},{"path":"factors-dates.html","id":"working-with-dates-and-times","chapter":"30 Working with factors and dates","heading":"30.3 Working with dates and times","text":"Dates times complex data work . Dates represented many formats. Times reported time zones. change depending time year location measurement. Dates futher complicated leap years local rules operating specific countries. Placing dates times plots, comparing observations made different times arithmetic datesThe package lubridate contains many functions help work dates times. data visualization purposes mostly use functions parse dates times (converting text date-time object), basic arithmetic, extract components date, format axis labels.","code":""},{"path":"factors-dates.html","id":"reading-dates","chapter":"30 Working with factors and dates","heading":"30.3.1 Reading dates","text":"family functions ymd, dmy, mdy, ymd_hms among others used turn text (table read file) date. strongly endorse use ISO 8601 date formatting. Illegal dates converted NA_Date.example times. can specify time zone want, sometimes can get away ignoring problem.functions remarkably powerful, example work formats like :people working late 20th century,\ncareful two digit years. Best use .want know much time passed since first observation, can arithmetic. Note data types column (character, date, time, double = numeric).Let’s add random data second table make scatter graph.lots options formatting date time axes. See help pages (particular examples, always).","code":"\ndt1 <- tibble(text_date = c(\"1999-01-31\", \"2000-02-28\", \"2010-06-28\", \"2024-03-14\", \"2021-02-29\"),\n             date = ymd(text_date))## Warning: 1 failed to parse.\ndt1## # A tibble: 5 x 2\n##   text_date  date      \n##   <chr>      <date>    \n## 1 1999-01-31 1999-01-31\n## 2 2000-02-28 2000-02-28\n## 3 2010-06-28 2010-06-28\n## 4 2024-03-14 2024-03-14\n## 5 2021-02-29 NA\ndt2 <- tibble(text_date = c(\"1999-01-31 09:14\", \"2000-02-28 12:15\", \"2010-06-28 23:45\", \n                            \"2024-03-14 07:00 AM\", \"2021-03-01 6:16 PM\"),\n             date_time = ymd_hm(text_date, tz=\"America/Halifax\"))  # UTC is assumed if not specified\ndt2## # A tibble: 5 x 2\n##   text_date           date_time          \n##   <chr>               <dttm>             \n## 1 1999-01-31 09:14    1999-01-31 09:14:00\n## 2 2000-02-28 12:15    2000-02-28 12:15:00\n## 3 2010-06-28 23:45    2010-06-28 23:45:00\n## 4 2024-03-14 07:00 AM 2024-03-14 07:00:00\n## 5 2021-03-01 6:16 PM  2021-03-01 18:16:00\nmdy(c(\"Jan 5, 1999\", \"Saturday May 16, 70\", \"8-8-88\", \"December 31/99\", \"Jan 1, 01\"))## [1] \"1999-01-05\" \"1970-05-16\" \"1988-08-08\" \"1999-12-31\" \"2001-01-01\"\ndt1 %>% arrange(date) %>%\n  mutate(elapsed = date - min(date, na.rm=TRUE),\n         t = as.numeric(elapsed))## # A tibble: 5 x 4\n##   text_date  date       elapsed       t\n##   <chr>      <date>     <drtn>    <dbl>\n## 1 1999-01-31 1999-01-31    0 days     0\n## 2 2000-02-28 2000-02-28  393 days   393\n## 3 2010-06-28 2010-06-28 4166 days  4166\n## 4 2024-03-14 2024-03-14 9174 days  9174\n## 5 2021-02-29 NA           NA days    NA\ndt2 %>% mutate(r = rnorm(n(), 20, 3)) %>%\n  ggplot(aes(x = date_time, y = r)) + \n  geom_point() +\n  scale_x_datetime(date_labels = \"%Y\\n%b-%d\")"},{"path":"factors-dates.html","id":"working-with-missing-data","chapter":"30 Working with factors and dates","heading":"30.4 Working with missing data","text":"Data often missing. Missing data encoded NA R, occasionally need know bit . ways can get tripped missing data.","code":""},{"path":"factors-dates.html","id":"reading-from-a-file","chapter":"30 Working with factors and dates","heading":"30.4.1 Reading from a file","text":"read data csv spreadsheet, empty cell (sometimes “NA”) interpreted missing data. value used represent NA, can use option na = read_csv read_excel. (read_excel makes missing values NA unless specify NA missing.)","code":""},{"path":"factors-dates.html","id":"computations-with-na","chapter":"30 Working with factors and dates","heading":"30.4.2 Computations with NA","text":"arithmetic computation NA result NA result.use functions turn vector single number (mean, min, median, etc.), sometimes want ignore missing values. option na.rm= useful .want know number observations, non-missing missing data, use n idiom sum(!.na(...)) sum(.na(...)) exclamation mark (!, sometimes called bang) means logical !.na means missing.missing data one columns want remove observations table missing data, can use na.omit.","code":"\n1 + NA## [1] NA\nInf + NA## [1] NA\nNA/0## [1] NA\nlog(NA)## [1] NA\ndt3 <- tibble(x = c(1, 5, 9, 14.5, NA, 21, NA))\ndt3 %>% summarize(mean_with_NA = mean(x),\n                  mean_no_NA = mean(x, na.rm = TRUE))## # A tibble: 1 x 2\n##   mean_with_NA mean_no_NA\n##          <dbl>      <dbl>\n## 1           NA       10.1\ndt3 %>% summarize(n_with_NA = n(),\n                  n_no_NA = sum(!is.na(x)),\n                  n_is_NA = sum(is.na(x)))## # A tibble: 1 x 3\n##   n_with_NA n_no_NA n_is_NA\n##       <int>   <int>   <int>\n## 1         7       5       2\nna.omit(dt3)## # A tibble: 5 x 1\n##       x\n##   <dbl>\n## 1   1  \n## 2   5  \n## 3   9  \n## 4  14.5\n## 5  21"},{"path":"factors-dates.html","id":"multi-panel-figures","chapter":"30 Working with factors and dates","heading":"30.5 Multi-panel figures","text":"patchwork\ncowplot\nhiding combining guides\nAdding tags\nCreating space legendmarginal plots (histograms, densities)","code":""},{"path":"factors-dates.html","id":"further-reading-24","chapter":"30 Working with factors and dates","heading":"30.6 Further reading","text":"blog post missing values data types","code":""},{"path":"factors-dates.html","id":"move-elsewhere","chapter":"30 Working with factors and dates","heading":"30.7 Move elsewhere","text":"","code":""},{"path":"factors-dates.html","id":"testing-data-and-calculations","chapter":"30 Working with factors and dates","heading":"30.7.1 Testing data and calculations","text":"","code":""},{"path":"factors-dates.html","id":"what-is-reproducibility-and-why-should-i-care-1","chapter":"30 Working with factors and dates","heading":"30.7.2 What is reproducibility and why should I care?","text":"","code":""},{"path":"colour.html","id":"colour","chapter":"31 Using colour well","heading":"31 Using colour well","text":"visualization uses colour effectively can easier understand remember gray-scale black white one. Careless use colour can create confusing ineffective visualizations. main ways colour used: indicate levels categorical variable, indicate values quantiative variable, highlight element data, advance graphic design goal.documents presentations contain one visualization. edit finalize visualizations, careful ensure use colour consistent appropriately contrasting visualizations considered set.lesson examine effective use colour visualizations show customize colour scales legends ggplot. ultimate goal communication, visualziation nearly complete must consider whether use colour effective helps primary secondary communication goals.","code":""},{"path":"colour.html","id":"disciplinary-cultural-and-human-elements","chapter":"31 Using colour well","heading":"31.1 Disciplinary, cultural, and human elements","text":"existing conventions use colour many disciplines. example, topographic maps consistent use green-brown scales show altitude. Temperature often indicated blue-red scale warm cold. abstract less commonly encountered settings, may obvious scheme use indicate larger/smaller positive/negative cultural patterns take . particular people want use red increases/larger values others may want use red mean decreases. good legend always included make meaning explicit. People different preferences colour, liking bold, saturated colours preferring muted, pastel colours. Usually extreme choices avoided make colour choices appealing wide audience possible. motivation using established colour scales already popular. Finally, aware fraction population degree colour vision deficiency. tools screen design concerns, easy remember guideline use red green visualization.","code":""},{"path":"colour.html","id":"how-will-the-colour-be-displayed","chapter":"31 Using colour well","heading":"31.2 How will the colour be displayed?","text":"visualizations likely displayed one three ways: computer monitor one meter one person’s eyes, projector many metres away eyes group people, paper. Within media, considerable variation – computer montors differ display colour, projectors may located bright dark room, paper can matte glossy – differences across media huge.look visualation computer monitor, able perceive fine colour differences small features relatively minor differences line thickness symbol size. Many differences “washed ” images displayed projector, either projector environment room light sources distance image observer. Light colours look nearly white various dark colours difficult distinguish projected. differences arise colour printed even dramatic. partly due fact mechanism showing colour different: computer display, light shines filter emitted particular colour combination, paper, dyes absorb incident light must layered blended together. Yellow-white combinations look great computer display may work sign front buisnesss (see figure).Include photo Inglis St sign yellow-white.","code":""},{"path":"colour.html","id":"naming-colours","chapter":"31 Using colour well","heading":"31.3 Naming colours","text":"order use colour, must identify way. many ways name colours: appeal rainbow spectrum, widely-used corporate names crayons printing Pantone, software systems unix X11, course huge variety common usage. rainbow contains colours order arranged wavelength, numbering misses huge number colours.computers, colours often identified using particular colour model:red-green-blue (RGB), refers three colours pixels montior spectrum colour sensors eye;cyan-magenta-yellow-black (CMYK) refers four colours used basic (“4 colour”) printing;hue-saturation-brightness (HSB), separates dimensions perception colour;hue-chroma-lightness (HCL), Munsell color system;many others!key difference schemes RGB CMYK mixing different amounts colour together, HSB similar schemes separate values different perceptual features: hue, saturation (chroma, colourfulness), brightness (lightness).names required identify colour, none names particularly helpful selecting colour, perceptual problem: need know colour looks like, looks like combination colours selected. palette problem: set colours use. easiest solution use palette someone else created already. list many palettes available R provided paletteer package. palettes collected GitHub repository.online interactive tools selecting colours:Color Brewer 2 shows colour palette map lets select discrete quantitative scales options hues number colours palette.HCL wizard good tool famiiarize HCL colour encodingCoolors emphsizes perceptual artistic elements might use select colours palette","code":""},{"path":"colour.html","id":"categorical-variables","chapter":"31 Using colour well","heading":"31.4 Categorical variables","text":"Categorical variables 5 fewer levels want highlight excellent use colour. 5 categories, becomes difficult quickly reliably distinguish colours map data colour legend.Let’s use palmer penguins data show three colours can selected: palette custom choices.viridis palette designed approximately uniform brightness (making suitable printing gray scale) colour-blind friendly. four different colour scales can select (option: magma = , inferno = B, plasma = C, viridis = D, cividis = E), plus select beginning ending location (begin, end: numbers 0 1). find start viridis yellow, usually adjust begin minimum.use scales can find paletteer. use ggthemes package palette hc_default.make custom scale use scale_color_manual. need give right number colours (extras ignored), function takes integer returns many colours.","code":"\npenguins %>% ggplot(aes(flipper_length_mm, bill_length_mm, color = species)) +\n  geom_point(size=3) + theme_bw() +\n  scale_color_viridis_d(begin = 0.1, end = 0.9, option = \"D\")\n# paletteer_d(\"ggthemes::hc_default\", n = 3)  # to see the colours\npenguins %>% ggplot(aes(flipper_length_mm, bill_length_mm, color = species)) +\n  geom_point(size=3) + theme_bw() +\n  scale_color_paletteer_d(\"ggthemes::hc_default\")\npenguins %>% ggplot(aes(flipper_length_mm, bill_length_mm, color = species)) +\n  geom_point(size=3) + theme_bw() +\n  scale_color_manual(values = c(\"red\", \"blue\", \"orange\"))"},{"path":"colour.html","id":"quantitative-variables","chapter":"31 Using colour well","heading":"31.5 Quantitative variables","text":"Quantitative data can effectively displayed using colour monochromatic scale show larger-smaller values, aware ability convey quantiative values limited. Even apparently simple task conveying ordering quantitative values difficult perceive colour shading local context, demonstrated checker shadow illusion.Quantitative data separated positive negative, mean reference value, effectively displayed diverging colour scales (red-blue, green-brown, etc.), sometimes neutral colour (white black) middle. One reason works well converts quantitative scale categorical two-valued scale, residual variation shown brightness, sure strong reason divide scale two classes.Quantitative data almost always best shown position axis, want use colour brightness show quantitative variable? common reason putting points map location visualization used describe location map. related reason trying display third quantitative varaible. use penguin data show body mass colour.Quantitative values can mapped onto colour “continuous” way “binned” way. course finite number colours matter degree. want colours change smoothly (continuously) want small number discrete colours (binned). Examples shown .important draw difference two classes, example positive negative values, numbers larger smaller mean, can use diverging colour scale. variety use functions RColorBrewer package great set palettes. diverging colour scale generally want make symmetric scale 0 placed centre color scale.","code":"\npenguins %>% ggplot(aes(flipper_length_mm, bill_length_mm, color = body_mass_g)) +\n  geom_point(size=3) + theme_bw() +\n  scale_color_viridis_c(begin = 0.2)\npenguins %>% ggplot(aes(flipper_length_mm, bill_length_mm, color = body_mass_g)) +\n  geom_point(size=3) + theme_bw() +\n  scale_color_paletteer_binned(\"ggthemes::Blue\")\npenguins %>% mutate(body_mass_centered = body_mass_g - mean(body_mass_g, na.rm=TRUE)) %>%\n  ggplot(aes(flipper_length_mm, bill_length_mm, color = body_mass_centered)) +\n  geom_point(size=3) + theme_bw() +\n  # scale_color_distiller(type=\"div\", palette=\"RdBu\", limits = c(-2000,2000)) \n  scale_color_fermenter(type=\"div\", palette=\"RdBu\", limits = c(-2000,2000)) "},{"path":"colour.html","id":"highlighting","chapter":"31 Using colour well","heading":"31.6 Highlighting","text":"Sometimes just want highlight small number points. Perhaps outliers interesting particular reason. One flexible ways create new variable identifies observation highlighted , use control plotting.","code":"\npenguins %>% mutate(highlight = body_mass_g > quantile(body_mass_g, 0.9, na.rm=TRUE)) %>%\n  ggplot(aes(flipper_length_mm, bill_length_mm, color = highlight)) +\n  geom_point(size=3, show.legend=FALSE, alpha = 0.75) +\n  theme_bw() +\n  scale_color_manual(values = c(\"black\", \"red\"))"},{"path":"colour.html","id":"consistent-use-of-colour-across-multiple-figures","chapter":"31 Using colour well","heading":"31.7 Consistent use of colour across multiple figures","text":"Wilke excellent ideas using colour effectively consistently across figures. Key points areif information (species, highlights) occurr multiple figures, use colours mean thing figureif figures show data contrasting ways, example species one figure species different figure, use different colour pallettes two figures avoid confusion.","code":""},{"path":"colour.html","id":"annotation-to-avoid-legends","chapter":"31 Using colour well","heading":"31.8 Annotation to avoid legends","text":"Particularly oral presentation want figure decoded rapidly. legend one side slows reader requires focus move back forth data legend. can use coloured text labels plot reduce need legends.","code":"\npenguins %>% ggplot(aes(flipper_length_mm, bill_length_mm, color = species)) +\n  geom_point(size=3, show.legend = FALSE) + theme_bw() +\n  scale_color_manual(values = c(\"red\", \"blue\", \"orange\")) +\n  annotate(\"text\", x = 175, y = 44, label = \"Adélie\", color = \"red\", fontface = \"bold\") +\n  annotate(\"text\", x = 195, y = 55, label = \"Chinstrap\", color = \"blue\", fontface = \"bold\") +\n  annotate(\"text\", x = 220, y = 40, label = \"Gentoo\", color = \"orange\", fontface = \"bold\") "},{"path":"colour.html","id":"colour-vision-deficiency","chapter":"31 Using colour well","heading":"31.9 Colour vision deficiency","text":"aware everyone peceives colour way. particular, avoid combining red green plot. links help learn :AwarenessNIH statistics dataWikipediaA tool simulate colour vision deficiency.","code":""},{"path":"colour.html","id":"summary-4","chapter":"31 Using colour well","heading":"31.10 Summary","text":"Color usefulto highlight information already distinguished way,distinguish small number categories (2-5), andas semi-quantitative scale, particularly hues used (e.g., red blue) varying degrees brightness saturation.Avoid using 5 colours. hard make quantitative comparisons two colours. lots tools help select colour palettes work together well. viridis RColorBrewer palettes often good choices.","code":""},{"path":"colour.html","id":"suggested-reading-1","chapter":"31 Using colour well","heading":"31.11 Suggested reading","text":"Colour Healy Chapter 8Colour Wilke Chapter 4Paleteer R packageCatalog palettesColor Brewer 2 interactive website select illustrate use color scales maps.HCL wizard","code":""},{"path":"theme.html","id":"theme","chapter":"32 Themes","heading":"32 Themes","text":"theme plot refers parts linked data. includes titles, axis lables, well labelling axis labels legends (also known guides). also includes text characteristics (font, size, colour, bold, italics) colour placement axes, tick marks, boxes around plot legend.single function, theme controls features, many options. ’ll give examples showing control many aspects theme.Within presentation report, often want use consistent theme figures. can define many features theme store object R environment. can use theme figures. Changing theme many figures possible single change one location.many add packages working themes. ’ll give examples ggtext, ggthemes, patchwork.","code":""},{"path":"theme.html","id":"example-plots-for-customization","chapter":"32 Themes","heading":"32.1 Example plots for customization","text":"’ll use couple plots repeatedly: one facets, one many elements, facets.","code":"\np1 <- penguins %>% ggplot(aes(x = body_mass_g, y = flipper_length_mm, \n                              color = species, shape = sex)) + \n  geom_point()\np1## Warning: Removed 11 rows containing missing values (geom_point).\np2 <- mpg %>% \n  unglue_unnest(trans, \"{trans_type}({trans_code})\") %>%\n           ggplot(aes(x = displ, y = hwy, color = trans_type)) +\n                    geom_point() +\n                    facet_wrap(~ factor(cyl))\np2"},{"path":"theme.html","id":"built-in-themes","chapter":"32 Themes","heading":"32.2 Built-in themes","text":"many themes available change whole look plot. ’ve used theme_bw many times already, couple examples. can use base_size option (default value 11) scale text elements base_line_size scale line elements figure.also add-packages themes: ggthemes theme_tufte theme_economistAnother collection themes available ggthemer. main goal lesson give vocabulary skills customize theme plot, won’t spend time theme packages. details!","code":"\np1 + theme_linedraw(base_size = 15, base_line_size = 0.2)## Warning: Removed 11 rows containing missing values (geom_point).\np2 + theme_dark(base_size = 20)\np1 + theme_economist() + scale_fill_economist()## Warning: Removed 11 rows containing missing values (geom_point)."},{"path":"theme.html","id":"customizing-text-on-a-figure","chapter":"32 Themes","heading":"32.3 Customizing text on a figure","text":"common change want make plot’s theme (axis guide labels) increase size text. can done using theme(text= ...) specific elements, theme(axis.title=...) (see help page elements theme can set text element.) right side equals sign, need function element_text allows control 10 different characteristics text. example features.Themes controlled hierarchically, adjusting text affects text plot. Adjusting axis.title affects axis.title.x axis.title.y.Compare original version plot play “spot differences”.","code":"\np2  + theme(text = element_text(size = 15),\n            axis.text.x = element_text(angle = 45),\n            axis.title.y = element_text(color = \"blue\"),\n            strip.text = element_text(face = \"bold\"),\n            legend.text = element_text(hjust = 1),\n            legend.title = element_text(family = \"serif\"),\n            axis.title.x = element_text(color = \"#FF00FF\", size = 18, face = \"italic\", family = \"mono\"))"},{"path":"theme.html","id":"customizing-borders-ticks-axis-labels","chapter":"32 Themes","heading":"32.4 Customizing borders, ticks, axis labels","text":"many elements plot drawn lines. can customized using theme(line = ...) element element using, example theme(axis.line.x=...) theme(axis.ticks.y=...). grid lines can adjusted using panel.grid.major panel.grid.minor. elements named controlled hierarchically well. right hand size expressions must element_line function allows control color, size, linetype features like arrows.","code":"\np2 + theme(line = element_line(size = 1),\n           axis.ticks.y = element_line(color = \"pink\"),\n           axis.line.x = element_line(linetype = 3, size = 0.25),\n           panel.grid.minor.y = element_blank(),\n           panel.grid.major = element_line(linetype = 3, color = \"black\", size = 0.25))"},{"path":"theme.html","id":"enhanced-text","chapter":"32 Themes","heading":"32.5 Enhanced text","text":"ggtext package allows use markdown HTML code text element plot. need use element_markdown (element_textbox_simple) instead element_text element want use enhanced formatting method .Unlike theme elements, can’t easily use ggtext formatting hierarchically: can’t simply set text use elemment_markdown even axis labels. must control element individually.can also add formatted boxes titles facets location plot.","code":"\np1 + labs(title = \"_Penguin data from **Palmer station**, Antarctica_<sup>1<\/sup>\",\n          x = \"<span style = 'color:red;'>body mass (g)<\/span>\",\n          y = \"flipper length (mm)\",\n          caption = \"<sup>1<\/sup>Collected by K. Gorman\"\n          ) + \n  theme(plot.title = element_markdown(lineheight = 1.2),\n        plot.caption = element_markdown(),\n        axis.title.x = element_textbox_simple(halign = 0.5)\n        )## Warning: Removed 11 rows containing missing values (geom_point).\np2 + theme(\n    strip.background = element_blank(),\n    strip.text = element_textbox(\n      size = 12,\n      color = \"white\", fill = \"#5D729D\", box.color = \"#4A618C\",\n      halign = 0.5, linetype = 1, r = unit(5, \"pt\"), width = unit(1, \"npc\"),\n      padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)\n    )\n)\ntext_annotations <- tibble(\n  label = c(\n    \"Some text **in bold.**\",\n    \"Linebreaks<br>Linebreaks<br>Linebreaks\",\n    \"*x*<sup>2<\/sup> + 5*x* + *C*<sub>*i*<\/sub>\",\n    \"Some <span style='color:blue'>blue text **in bold.**<\/span>\"\n  ),\n  x = c(4000, 5200, 5700, 5000),\n  y = c(220, 200, 175, 150),\n  hjust = c(0.5, 0, 0, 1),\n  vjust = c(0.5, 1, 0, 0.5),\n  angle = c(0, 0, 45, -45),\n  # sex = c(\"male\", \"male\", \"male\", \"male\")\n)\np1 + geom_richtext(mapping = aes(x = x, y = y, label = label,\n                                 angle = angle, hjust = hjust, vjust = vjust),\n                   data = text_annotations,\n                   inherit.aes = FALSE,\n                   fill = NA,\n                   color = \"black\")## Warning: Removed 11 rows containing missing values (geom_point)."},{"path":"theme.html","id":"further-reading-25","chapter":"32 Themes","heading":"32.6 Further reading","text":"ggplot tidyverse documentation - like theme help page, shows results examplesDocumentation ggtext","code":""},{"path":"output-files.html","id":"output-files","chapter":"33 Graphics formatting","heading":"33 Graphics formatting","text":"lesson grab-bag concepts related presenting, storing, repurposing visualizations. First, directly linked rest course, consider visualization might changed according particular application, whether poster, oral presentation, written document, part technical report. Second explore various notions size visualization tends parts easily scaled parts need scaled differently. Third review formats storing images, general differences vector raster formats, particulars various often used file formats matter. Finally ’ll lead resources dealing text non-Latin scripts.","code":""},{"path":"output-files.html","id":"formatting-visualizations-for-a-purpose","chapter":"33 Graphics formatting","heading":"33.1 Formatting visualizations for a purpose","text":"final design check visualization can done asking two questions:big graphic far away viewer ?long viewer look graphic?two questions focus attention whether elements visualization small whether visualization complex understood time available. Many visualizations complex contain detail small. exercise thinking questions, design visualization ask made simpler complex, change apparent size changed.Let’s start frequently used visualization penguin data.fairly complex figure, ’s fine minute look monitor printed page within metre. quick distant viewing, text made bigger, symbols sex dropped (made prominent critical information), facets combined (unless critical.) Essentially ’ve done figure make “multi-purpose” figure shows lot data, ’ve avoided “show feature X?” question. one reason editing figures uses valuable: focusses attention essential story.Let’s simplify visualization emphasize species differences, discard sex island differences, make suitable display oral presentation poster.","code":"\np1 <- penguins %>% ggplot(aes(body_mass_g, flipper_length_mm, \n                        color = species, shape = sex)) + \n        facet_wrap( ~ island) + \n        geom_point() +\n        scale_shape(na.translate = FALSE) +\n        labs(x = \"Body mass (g)\", y = \"Flipper length (mm)\")\np1\np2 <- penguins %>% ggplot(aes(body_mass_g, flipper_length_mm, \n                        color = species)) + \n        geom_point(size = 3, alpha = 0.5) + \n        theme_clean() + \n        theme(axis.title = element_text(size = 18),\n              axis.text = element_text(size = 14),\n              legend.position = \"none\") +\n        geom_text(aes(label = species),\n                  size = 8,\n               data = tibble(species = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"),\n                             body_mass_g = c(4000, 3200, 4500),\n                             flipper_length_mm = c(173, 207, 227))) +\n        labs(x = \"Body mass (g)\", y = \"Flipper length (mm)\")\np2"},{"path":"output-files.html","id":"graphics-formats","chapter":"33 Graphics formatting","heading":"33.2 Graphics formats","text":"Computer graphics can divided two types: raster images vector drawings. photograph raster image; separate color value millions pixels. scatter plot often best represented vector drawing just list instructions: make circles certain colour locations, draw lines axes particular thickness, etc. “simple” visualizations, vector graphics format smaller store, faster transmit, easy display high fidelity devices different numbers dots per unit length.R can produce graphics files many formats, common vector formats PDF (can include raster images well) SVG common raster formats PNG JPEG. huge number formats, R can produce directly others can achieved conversion.create PDF SVG file, specify size units mm, cm, inches. function ggsave write graphic file name specify.Figures often produced aspect ratio (height / width) range 0.6-0.7. Square images almost always look “tall”. multi-panel figures first facetted plot , ratio usually applied panel. Deviations ratio arise aesthetich preference, constraints imposed external factors, size axis labels, titles, legends.examine versions plot PDF file just created, HTML version book, interactive version produced Rstudio, see slightly different. includes minor features like placement dots horizontal gridlines relative features major features like size -graph “legend”. particular, text near border can easily fall partially outside boarder get clipped. (first version PDF “C” Chinstrap clipped y-axis even though looked fine Rstudio preview.) way know resolve problems testing iterative refinement graph.actual sizes plots course completely fictional. instructions stored computer physical size! purpose size measurements ? allow relative sizing different elements: lines, symbols, text. change size images created , change relative sizes elements. “size” text elements closely tied “point size” font; ggplot know figure rendered stored file certainly ultimately placed computer monitor, phone, projected wall, printed page poster. size figure functions serves convenient reminder planning use image help think design. Sometimes simplest way refine plot change “size” created slightly make bit less white space graphical elements.make raster format images; ’s fairly easy guess functions now!raster images, “dots per inch” (dpi) provides information figure intended displayed. Montiors, phones, devices generally range 100-250 dpi physical printing usually ranges 300-600 dpi. , course, exceptions.JPEG file format designed store photographic images compactly. Image compression algorithms used reduce size file literal content (x resolution x y resolution x colour bits per pixel, commonly total 30-40 million bytes even camera phone) size 5-10% total. Photographs rarely include precisely straight lines, crisp text, lots small symbols. JPEG compression tends create lots “artifacts” “jaggies” image since data compression algorithms smooth sharp, high contrast boundaries common data visualizations rare photographs. Don’t use JPEG ggplot figures.PNG format, contrast, excellent high contrast lines shapes none problems. also good photographic images. format use ggplot visualizations , reason, need produce raster image. One reason produce raster image know exactly look like displayed printed. don’t know size , can know relative placement elements figure.third application rendering visualiztions one using course since first lesson: interactive rendered R markdown document. several options can provide {r} line opens code block: fig.height fig.width control size inches, fig.align (left, right, center) control placement left--right, .height .width scaling percentage. , see notes Nicholas Tierney. can also get figure written file formats discussed using option dev. ’ll demonstrate options. options effect document knitted.","code":"\nggsave(\"static/penguin-plot.pdf\", p2, width = 15, height = 10 , units = \"cm\")## Warning: Removed 2 rows containing missing values (geom_point).\nggsave(\"static/penguin-plot.svg\", p2, width = 15, height = 10 , units = \"cm\")## Warning: Removed 2 rows containing missing values (geom_point).\nggsave(\"static/penguin-plot.png\", p2, width = 15, height = 10, units = \"cm\", dpi = 300)## Warning: Removed 2 rows containing missing values (geom_point).\nggsave(\"static/penguin-plot.jpeg\", p2, width = 15, height = 10, units = \"cm\", dpi = 144)## Warning: Removed 2 rows containing missing values (geom_point).\np1"},{"path":"output-files.html","id":"size-and-resolution","chapter":"33 Graphics formatting","heading":"33.3 Size and resolution","text":"differences raster vector formats give rise different ideas graphics size. Raster images defined number pixels dimension. Vector graphics made pixels, defined target size presentation inches centimeters. actually displayed, raster images may simplified lower resolution dots may interpolated match device using. Similarly, vector image monitor, printed page, projected screen different sizes, even computer doesn’t know . resizing operations happen time, sometimes even interactively (zoom phone example) person creating image control displayed!","code":""},{"path":"output-files.html","id":"a-solution-for-scaling-graphics","chapter":"33 Graphics formatting","heading":"33.4 A solution for scaling graphics","text":"relatively new solution many sizing problems. (new seems work sometimes.) ragg library graphics output device provides reliable rendering text many (perhaps ) languages way scale size images across different output formats.made graphic look just way want, can adjust scale elements figure without changing “physical” size image. make graphic much larger “physical” size, also scale elements graphic factor three (using scaling = 3). allows make high resolution object can include printed poster without redesigning figure much – just set scaling factor adjust width height factor.demonstration text languages, please see . discussion scaling plots see .","code":"\npngfile <- fs::path(knitr::fig_path(),  \"penguins-ragg.png\")\nggsave(pngfile, p2, device = agg_png, \n        width = 45, height = 30, units = \"cm\", res = 300, scaling = 3)## Warning: Removed 2 rows containing missing values (geom_point).\nknitr::include_graphics(pngfile)\n# agg_png(\"static/penguins-ragg.png\", width = 45, height = 30, units = \"cm\", res = 300, scaling = 3)\n# p2\n# invisble(dev.off())"},{"path":"output-files.html","id":"further-reading-26","chapter":"33 Graphics formatting","heading":"33.5 Further reading","text":"Notes figure scaling R Markdown R Data Science.","code":""},{"path":"organization.html","id":"organization","chapter":"34 Staying organized","heading":"34 Staying organized","text":"first start learning computing tool like R, people just put files “Downloads” “Documents” even “Desktop” particular thought names organization. fine first experimenting, quickly gets control, especially want keep one project separate another, add data files, want share files collaborator.suggestions help get stay organized.","code":""},{"path":"organization.html","id":"put-everything-in-a-folder","chapter":"34 Staying organized","heading":"34.1 Put everything in a folder","text":"Many people just dump files random Desktop, Documents, Downloads directory. ’s recipe chaos, eventually use file name weeks ago (like example.Rmd) overwrite something just mix different projects.Whenever start new project, course, create folder easy understand name like “STAT2430” “Data-Visualization”. Spaces file names general fine, plan share files others usually best use dash (-) underscore (_) instead spaces, since spaces file names cause problems computing tools. (put project folders ‘Dropbox’ ‘One Drive’ don’t worry backups.)","code":""},{"path":"organization.html","id":"sub-projects","chapter":"34 Staying organized","heading":"34.2 Sub-projects","text":"component project, create new folder (directory) called something meaningful like “assignment-1”.\nopen R, instead creating new R markdown file right away, first start new project (File > New Project…). new project can new folder can create new folder.can choose start using version control project. suggest ! Version control local machine takes little extra effort can really handy (!) delete something didn’t mean , decide undo whole bunch changes didn’t work way hoped. works computer – need use github.project encourages keep files together place. Rstudio remember files open quit re-open . makes process switching one project another much easier. can two different Rstudio sessions open different windows time. R session window workspace operates completely independently R session open. suggest don’t mix files multiple projects R session; works effort stay organized.","code":""},{"path":"organization.html","id":"files-and-folders","chapter":"34 Staying organized","heading":"34.3 Files and Folders","text":"can put files project one folder, different kinds files – R markdown documents, data files, figures, presentations, can help stay organized create sub-folder type file. find particularly useful two kinds files. file get somewhere else, typically data file collaborator internet, goes folder (“sources”) never modify files. way can clean copies file always know original file looked like. really necessary use version control, original data file likely file ’ll want use think duplication worth effort. Second, files created R code: figures, data tables, results time-consuming calculations, example, know can always deleted recreated later . Putting folder reminds don’t need use version control ; code created need keep results.","code":""},{"path":"organization.html","id":"naming-conventions","chapter":"34 Staying organized","heading":"34.4 Naming conventions","text":"’s helpful create informative names files. two files related, use similar names different suffix (world-map.R world-map.png, example). steps need performed particular order, simple way use number (01, 02, etc) prefix. used convention writing notes help keep sections order. advanced projects, specialty tools (e.g., drake) performing calculations particular order, simple numbering scheme works many projects ourgrow simple sequencing calculations single file.","code":""},{"path":"organization.html","id":"resources-2","chapter":"34 Staying organized","heading":"34.5 Resources","text":"Healy. Appendix. Managing projects filesAvoid using directory paths won’t exist someone else’s computer share files using pacakge (github).R Data Science notes scripts projectsDrake package manualIf worried versions packages changing, can keep track packages used versions using checkpoint packrat","code":""},{"path":"r-details.html","id":"r-details","chapter":"35 More details about R","heading":"35 More details about R","text":"R big software package. ’s developed decades use. millions regular users across many disciplines teaching, academic research professional applications. ’s computer programming language, tool accessing thousands data analysis tools, great interactive environment exploring, analyzing, visualizing data. won’t learn .approach course teach use R particular style, emphasis ggplot tidyverse packages. R markdown documents write balance interactive use documentation sequence steps used analysis. omitted lot details might called “fundamentals” instead focussed getting work done quickly. lesson fill gaps. reasoning important want learn tool spend much time details, course empahsizes can R. hand, hope use R long time many projects, reach point know , start developing solid mental model R works can build robust understandings accomplish tasks R get beyond copy, paste, search, experiment. Without fundamentals, easy make incorrect ideas R works get really confused frustrated.simple introduction basics R appears Healy Appendix. different approach taken R Data Science book, introduces basics many topics, tibbles,\nstrings, factors \ndates, functions vectors\ntogether applications one chapter time.","code":""},{"path":"r-details.html","id":"what-kinds-of-data-structures-does-r-use","chapter":"35 More details about R","heading":"35.1 What kinds of data structures does R use?","text":"R many basic types: logical, numeric (double), character, factor. combination types can combined lists. Elements lists can named work like dictionaries. Vectors, matrices, higher dimensional arrays composed type data, usually numeric, factor, logical.Lists powerful type can given attributes identify special structures particular intepretations. common special list data frame, data table tibble. (tibble refined kind data frame.) probably think tibble matrix column can different type. accomplished? ’s list vectors. vector corresponds column variable data frame name data type.R commands can use decode structure object workspace. ’ll demonstrate diamonds tibble. always, experiment commands trying objects cars (data frame).","code":"\ntypeof(diamonds)  # it's a list## [1] \"list\"\nclass(diamonds) # which works as a data.frame and also as a tbl (tibble)## [1] \"tbl_df\"     \"tbl\"        \"data.frame\"\nstr(diamonds)## tibble [53,940 × 10] (S3: tbl_df/tbl/data.frame)\n##  $ carat  : num [1:53940] 0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n##  $ cut    : Ord.factor w/ 5 levels \"Fair\"<\"Good\"<..: 5 4 2 4 2 3 3 3 1 3 ...\n##  $ color  : Ord.factor w/ 7 levels \"D\"<\"E\"<\"F\"<\"G\"<..: 2 2 2 6 7 7 6 5 2 5 ...\n##  $ clarity: Ord.factor w/ 8 levels \"I1\"<\"SI2\"<\"SI1\"<..: 2 3 5 4 2 6 7 3 4 5 ...\n##  $ depth  : num [1:53940] 61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n##  $ table  : num [1:53940] 55 61 65 58 58 57 57 55 61 61 ...\n##  $ price  : int [1:53940] 326 326 327 334 335 336 336 337 337 338 ...\n##  $ x      : num [1:53940] 3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n##  $ y      : num [1:53940] 3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n##  $ z      : num [1:53940] 2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\nclass(diamonds$carat)## [1] \"numeric\"\nclass(diamonds$cut)  # its a factor, and the factor is ordered (factors can be unordered)## [1] \"ordered\" \"factor\"\nclass(as.matrix(diamonds %>% select(depth, table, price)))  # if you pick columns of the same type, you can convert them to a matrix## [1] \"matrix\" \"array\"\nclass(as.matrix(diamonds %>% select(cut, color, clarity)))  ## [1] \"matrix\" \"array\""},{"path":"r-details.html","id":"data-frame-tibbles-and-data-tables","chapter":"35 More details about R","heading":"35.2 data frame, tibbles, and data tables","text":"R young, one way organize data tables using throughout course: data frame. data structure made list vectors; column entry list data list (column) must time. time, people wanted add new features data tables, existing code written deployed made difficult. two new kinds data frames created.tibble data frame, extra features. notably way displayed R improved. rows colums shown (unless ask ) rest information provided summary. Tibbles widely used tidyverse pacakges.data table kind data frame code written goal increasing calculation speed. methods manipulating data tables quite different learned course; examples R4DS chapter data transformations demonstrated .","code":""},{"path":"r-details.html","id":"what-is-the-difference-between-strings-and-factors","chapter":"35 More details about R","heading":"35.3 What is the difference between strings and factors?","text":"string just sequence text, enclosed single double quotation marks. can display strings, search text, text-type things , can’t (course) calculations .can convert vector strings vector factors. assigns integer different element vector. ? numbers can assigned give particular order factors (strings) different alphabetical. factors can used statistical models though numbers, though indexes use variable math class (e.g., \\(x_1, x_2, \\dots\\)).simple examples.forcats package lots great functions working factors can help control plots drawn. ’s main use course.","code":"\nv <- c(\"Apple\", \"Bananna\", \"Cat\", \"Apple\", \"Orange\")\ntypeof(v)## [1] \"character\"\nf <- factor(v)\ntypeof(f)## [1] \"integer\"\nas.numeric(f)## [1] 1 2 3 1 4\nf## [1] Apple   Bananna Cat     Apple   Orange \n## Levels: Apple Bananna Cat Orange"},{"path":"r-details.html","id":"whats-the-pipe","chapter":"35 More details about R","heading":"35.4 What’s the pipe?","text":"pipe %>% way write function composition. data analysis build calculations lots different functions select, group_by, arrange, filter, summarize, distinct many described R Data Science. function starts tibble, something , produces revised tibble. ’s natural develop complex series calculations like recipe cookbook. (Sometimes recipes called pipelines!) pipes invented basically two options; write functions reverse order, create lots temporary variables store intermediate results discard . Pipelines easier write easier read. ’s example three styles, based simple analysis diamonds data.Pipeline:Temporary variables:Composition:think easier understand? pipline longer? shorter?Note: late 2020, new kind pipe becoming part R. looks like |> works bit like existing pipe use differences. ’s course yet since official release R doesn’t . another example R (computer systems) change time. sorts big changes rare R many people use many purposes.","code":"\ndiamonds %>% filter(cut==\"Ideal\") %>% group_by(color) %>% summarize(mean_price = mean(price))## `summarise()` ungrouping output (override with `.groups` argument)## # A tibble: 7 x 2\n##   color mean_price\n##   <ord>      <dbl>\n## 1 D          2629.\n## 2 E          2598.\n## 3 F          3375.\n## 4 G          3721.\n## 5 H          3889.\n## 6 I          4452.\n## 7 J          4918.\nd1 <- filter(diamonds, cut==\"Ideal\")\nd2 <- group_by(d1, color) \nsummarize(d2, mean_price = mean(price))## `summarise()` ungrouping output (override with `.groups` argument)## # A tibble: 7 x 2\n##   color mean_price\n##   <ord>      <dbl>\n## 1 D          2629.\n## 2 E          2598.\n## 3 F          3375.\n## 4 G          3721.\n## 5 H          3889.\n## 6 I          4452.\n## 7 J          4918.\nsummarize(\n  group_by(\n    filter(diamonds, cut == \"Ideal\"), color\n  ), mean_price = mean(price)\n)## `summarise()` ungrouping output (override with `.groups` argument)## # A tibble: 7 x 2\n##   color mean_price\n##   <ord>      <dbl>\n## 1 D          2629.\n## 2 E          2598.\n## 3 F          3375.\n## 4 G          3721.\n## 5 H          3889.\n## 6 I          4452.\n## 7 J          4918."},{"path":"r-details.html","id":"why-does-ggplot-use","chapter":"35 More details about R","heading":"35.5 Why does ggplot use +?","text":"make plots ggplot something similar – start tibble data frame, make plot, modify step step, setting geometries, adding data, creating facets, setting scales, altering theme. seems lot like pipeline. use + connect different ggplot2 commands?Simple. developer didn’t know pipe operator R ggplot developed. Adding feature plot seemed like “plus” operation, chosen. developer says starting today, ggplot use pipes, practical change point. many people use +. people think functions verbs ggplot commands nouns, justify difference way. Software development complicated human activity takes place time develops quirks lore.","code":""},{"path":"r-details.html","id":"what-are-packages-whats-the-difference-between-installing-one-and-using-one-why-is-r-organized-this-way","chapter":"35 More details about R","heading":"35.6 What are packages? What’s the difference between installing one and using one? Why is r organized this way?","text":"thousands R packages. many seems always needing install new one. Worse, sometimes want function, can’t remember package ’s installed – can’t use . (solution : use double ?? followed fuction name console search function across packages available computer.) complication?several reasons.New packages developed frequently, different people. packages get abandoned . Packages create modularity makes easier test fix problems packages across different groups developers.library command tells R want use particular package current session. loading packages can save time, computer resources, avoid name collisions (see ).people use small fraction packages available – simply don’t need install .Two packages can use name different function different dataset. packages, everyone using R coordinate naming everything across packages. impossible task. Sometimes load package library ’ll get message existing function redefined (masked) new package. can always add package name two colons, dplyr::filter example, refer function particular package.","code":""},{"path":"r-details.html","id":"why-are-there-so-many-kinds-of-equals-signs","chapter":"35 More details about R","heading":"35.7 Why are there so many kinds of “equals signs”?","text":"many different concepts behind humble equals sign used mathematics. R use different symbols: =, ==, <- even special functions like .equal near. Even differences = can mean different things different contexts, special version <- written way: ->. pipe adds twist, can write %<>% combined assignment operator pipe.mean?<- b means assign name object b. (can use = , encourage .)== b comparison b result TRUE otherwise FALSE. (notion “” computing surprisingly complicated, basic types, particular strings, fairly straightforward.)= b used naming elements list arguments function, example ggplot(mapping = aes(...)) list(= \"apple\", b=\"bananna\").near(1.25, 1.253, tol = 0.01) dplyr package used compare numbers see close together.waldo package functions testing equality data frames showing differences.","code":""},{"path":"r-details.html","id":"numbers","chapter":"35 More details about R","heading":"35.8 Numbers","text":"R isNA nan inf -inf\nTesting Na. Replacing. functions.","code":""},{"path":"r-details.html","id":"whats-a-function","chapter":"35 More details about R","heading":"35.9 What’s a function?","text":"","code":""},{"path":"r-details.html","id":"whats-a-formula","chapter":"35 More details about R","heading":"35.10 What’s a formula?","text":"Lm facet also t.test gam","code":""},{"path":"r-details.html","id":"programming-styles","chapter":"35 More details about R","heading":"35.11 Programming styles","text":"Grammar? Gg gt\nDescriptive vs imperative\nSQL another example","code":""},{"path":"r-details.html","id":"comparing-sql-to-dplyr","chapter":"35 More details about R","heading":"35.12 Comparing SQL to dplyr","text":"","code":""},{"path":"r-details.html","id":"using-databases-with-r","chapter":"35 More details about R","heading":"35.13 Using databases with R","text":"","code":""},{"path":"r-details.html","id":"computing-notes","chapter":"35 More details about R","heading":"35.14 Computing notes","text":"thousands different programming languages. ? Partly different ideas arisen time. Sometimes, languages created particular problems. often, languages created enable new kind interaction programmer computer. time, computing power increases kinds problems solved computer change, new opportunities new needs arise new languages developed.constraints trade-offs using computer? three important \n* amount storage required solve problem,\n* number computations solve problem, \n* amount human time required design implement solution.Many programming languages prioritize first two. trade-first two classic idea computer science. can see arises simple example. Suppose know need approximate result complex mathematical computation. can either perform calcuation need (takes time), can compute table possible computations advance (takes storage) lookup result need . idea behind statistical tables back statistics textbooks – calculations hard, good enough table fits page two.designers R language packages often prioritize minimizing amount time required human design code solution problem. well, designers needed give flexible powerful tools (functions). flexibility functions means always optimized use least storage time.Powerful tools require significant study learn use effectively. examples course selected convince investment worth time. also many specialized packages functions, created make certain type problem easier faster solve. now feature programming domains, specialized tools different operating systems, web, particular problem domains like databases, machine learningm statistical data analysis. requires effort learn, helpful insight comes early design graphical user interfaces – tools made different programmers enough common adhere conventions, burden programmer user greatly reduced.many optimizations trade-offs computing. example, numerical computations sometimes done different order compared way math class result numerical approximations made computers.Even within R system many different styles programming problem solving. course emphasize one particular style, now known popularly tidyverse. approach organizes data results tables (called tibbles) much possible encourages build larger solutions composing powerful functions together (like th dplyr package). result course hidden message throughout lessons organize data results use small set powerful functions solve large set general problems.Many computing systems work well course. Among programmers, popular choice \npython, shares lot common R many add-packages providing similar functions. simplification, python use tends favoured people developing software solve particular problem, R tends favoured people want interactively explore data analysis options need develop custom analyses problem encounter. Python R existed since year 2000, styles data analysis problem solving possible grown converged together considerably recent years.","code":""},{"path":"accessibility-bias-and-ethics.html","id":"accessibility-bias-and-ethics","chapter":"36 Accessibility, Bias, and Ethics","heading":"36 Accessibility, Bias, and Ethics","text":"Data visualization representing, including selecting, simplifying organizing, data. ’s activity done humans, questions generated presented humans, even underlying topic natural world. result, always important think carefully human element. steps can taken make work accessible many people possible? may bias discrimination enter data collection, selection, analysis interpretation? ethical considerations considered work data process research?course touches topics long enough alert importance.","code":""},{"path":"accessibility-bias-and-ethics.html","id":"accessibility","chapter":"36 Accessibility, Bias, and Ethics","heading":"36.1 Accessibility","text":"Data visualization , name implies, act producing product seen. useful goal brains good processing kinds visual information. Training read visualizations can greatly increase ability extract information visualization, important know audience – students, general public, people well developed quantiative skills, domain experts data presenting. factors central knowing visualization suitable effective. target audience university students.everyone visual abilities. people vision differs common experience way – perceiving colours differently, reduced acuity, differences way complete blindness. always keep differences mind producing visualizations. take hardest challenge head , value producing visualization someone see ? Data visualization process uses creator’s visual technical skills present features dataset. data visualization accompanied written description message conveyed. Ideally visual written aspects complement . visualization “say” anything ; written interpretation essential part process.","code":""},{"path":"accessibility-bias-and-ethics.html","id":"data-collection-and-analysis","chapter":"36 Accessibility, Bias, and Ethics","heading":"36.2 Data collection and analysis","text":"Data collection analysis critical tools understanding interacting world. Data used academic researchers, goverments, corportations, non-profit organizations, citizens complex contrasting ways. processes create opportunities bias discrimination. links give examples stories elaborating challenges.Data encodes systematic racism MIT technology review, December 2020.Case studies data ethics O’Reilly publishers.Data COVID pandemic, opinion published Patterns, July 2020.business marketing take ethics data scienceA student’s perspective ethics data science 2018.professional statement ethical data science Royal statistical society Institute Faculty ActuariesThe following resources form checklists questions think collecting, analyzing, presenting data.Data science ethics checklist10 data science ethics questionsIf find discussions topics find particularly thought provoking informative, please share .","code":""},{"path":"accessibility-bias-and-ethics.html","id":"further-reading-27","chapter":"36 Accessibility, Bias, and Ethics","heading":"36.3 Further reading","text":"Data Science Box notes ethics","code":""},{"path":"metadata.html","id":"metadata","chapter":"Metadata","heading":"Metadata","text":"","code":""},{"path":"metadata.html","id":"about-the-author-and-course-instructor","chapter":"Metadata","heading":"About the author and course instructor","text":"course notes written Andrew Irwin Department \nMathematics & Statistics\nDalhousie University Halifax, Nova Scotia, Canada. Andrew Dalhousie since 2018. Department Mathematics & Computer Science Mount Allison University Biology Department College Staten Island City University New York.Andrew’s research applies mathematical statistical models problems biological oceanography,\nparticularly questions phytoplankton biogeography, productivity, role \nbiogeochemical cycles. prospect large-scale systemic change next century plays key motivating role desire understand important system fully. Andrew co-directs\nMarine Microbial Macroecology Lab Dalhousie information research can found .","code":""},{"path":"metadata.html","id":"thanks-to-the-community","chapter":"Metadata","heading":"Thanks to the community","text":"course builds knoweldge generosity many people.software described course open source; free use, modify, extend . started learn use tools graduate student commercial Splus product. Participants open software development model created incredible set resources students learn use.referenced three textbooks extensively notes. commerically available books, authors publishers made resources available online free use format, wonderful students makes easy refer specific sections, ideas, skills demonstrated books.Many people actively engaged making new resources learning, supporting creation courses, collecting data interesting data visualization projects. Many linked throughout notes used much appreciation.","code":""},{"path":"metadata.html","id":"license","chapter":"Metadata","heading":"License","text":"course notes supporting materials copyright Andrew Irwin. Material linked quoted sources , naturally, owned original creators.Original materials licensed creative commons license encourages non-commerical reuse adaptation. uses, please contact author.\nData Visualization course notes Andrew Irwin licensed Attribution-NonCommercial 4.0 International\n","code":""}]
